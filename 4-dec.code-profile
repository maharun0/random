{"name":"4-dec","settings":"{\"settings\":\"{\\r\\n    // [Code Runner] Extension\\r\\n    \\\"code-runner.runInTerminal\\\": true,\\r\\n    \\\"code-runner.executorMap\\\": {\\r\\n        \\\"javascript\\\": \\\"node\\\",\\r\\n        \\\"java\\\": \\\"cd $dir && javac $fileName && java $fileNameWithoutExt\\\",\\r\\n        \\\"c\\\": \\\"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n        //\\r\\n        \\r\\n        // // Default Setup\\r\\n        // \\\"cpp\\\": \\\"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n\\r\\n        // Home Setup [Powershell Script]\\r\\n        \\\"cpp\\\": \\\"cd $dir && g++ -std=c++20 '$fileName' -o '$fileNameWithoutExt' && Get-Content 'C:/Users/MARU/Documents/Dev/CP/io/input.txt' | & '$dir$fileNameWithoutExt.exe' | Set-Content 'C:/Users/MARU/Documents/Dev/CP/io/output.txt' && del '$dir$fileNameWithoutExt.exe' && exit\\\",\\r\\n\\r\\n        // // Debug Setup [Bash]\\r\\n        // \\\"cpp\\\": \\\"cd \\\\\\\"C:/Users/MARU/Documents/Dev/CP/15Jan24/\\\\\\\" && g++ -std=c++20 \\\\\\\"a.cpp\\\\\\\" -o \\\\\\\"a\\\\\\\" && ./a < \\\\\\\"C:/Users/MARU/Documents/Dev/CP/io/input.txt\\\\\\\" > \\\\\\\"C:/Users/MARU/Documents/Dev/CP/io/output.txt\\\\\\\" 2> \\\\\\\"C:/Users/MARU/Documents/Dev/CP/io/error.txt\\\\\\\" || echo \\\\\\\"Error: Compilation or execution failed.\\\\\\\"\\\",\\r\\n\\r\\n\\r\\n        // Remote Setup\\r\\n        // \\\"cpp\\\": \\\"if (-not (Test-Path './io')) { New-Item -Type Directory './io' } ; if (-not (Test-Path './io/input.txt')) { New-Item -Type File './io/input.txt' } ; if (-not (Test-Path './io/output.txt')) { New-Item -Type File './io/output.txt' } ; cd $dir && g++ -std=c++14 \\\\\\\"-Wl,--stack=268435456\\\\\\\" '$fileName' -o '$fileNameWithoutExt' && Get-Content './io/input.txt' | & $dir$fileNameWithoutExt.exe | Set-Content './io/output.txt' && del '$dir$fileNameWithoutExt.exe' && exit\\\",\\r\\n\\r\\n        //\\r\\n        \\\"objective-c\\\": \\\"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"php\\\": \\\"php\\\",\\r\\n        \\\"python\\\": \\\"cd $dir && python -u $fileName\\\", // run file in current directory\\r\\n        // \\\"python\\\": \\\"python -u\\\", // default\\r\\n        \\\"perl\\\": \\\"perl\\\",\\r\\n        \\\"perl6\\\": \\\"perl6\\\",\\r\\n        \\\"ruby\\\": \\\"ruby\\\",\\r\\n        \\\"go\\\": \\\"go run\\\",\\r\\n        \\\"lua\\\": \\\"lua\\\",\\r\\n        \\\"groovy\\\": \\\"groovy\\\",\\r\\n        \\\"powershell\\\": \\\"powershell -ExecutionPolicy ByPass -File\\\",\\r\\n        \\\"bat\\\": \\\"cmd /c\\\",\\r\\n        \\\"shellscript\\\": \\\"bash\\\",\\r\\n        \\\"fsharp\\\": \\\"fsi\\\",\\r\\n        \\\"csharp\\\": \\\"scriptcs\\\",\\r\\n        \\\"vbscript\\\": \\\"cscript //Nologo\\\",\\r\\n        \\\"typescript\\\": \\\"ts-node\\\",\\r\\n        \\\"coffeescript\\\": \\\"coffee\\\",\\r\\n        \\\"scala\\\": \\\"scala\\\",\\r\\n        \\\"swift\\\": \\\"swift\\\",\\r\\n        \\\"julia\\\": \\\"julia\\\",\\r\\n        \\\"crystal\\\": \\\"crystal\\\",\\r\\n        \\\"ocaml\\\": \\\"ocaml\\\",\\r\\n        \\\"r\\\": \\\"Rscript\\\",\\r\\n        \\\"applescript\\\": \\\"osascript\\\",\\r\\n        \\\"clojure\\\": \\\"lein exec\\\",\\r\\n        \\\"haxe\\\": \\\"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt\\\",\\r\\n        \\\"rust\\\": \\\"cd $dir && rustc $fileName && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"racket\\\": \\\"racket\\\",\\r\\n        \\\"scheme\\\": \\\"csi -script\\\",\\r\\n        \\\"ahk\\\": \\\"autohotkey\\\",\\r\\n        \\\"autoit\\\": \\\"autoit3\\\",\\r\\n        \\\"dart\\\": \\\"dart\\\",\\r\\n        \\\"pascal\\\": \\\"cd $dir && fpc $fileName && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"d\\\": \\\"cd $dir && dmd $fileName && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"haskell\\\": \\\"runhaskell\\\",\\r\\n        \\\"nim\\\": \\\"nim compile --verbosity:0 --hints:off --run\\\",\\r\\n        \\\"lisp\\\": \\\"sbcl --script\\\",\\r\\n        \\\"kit\\\": \\\"kitc --run\\\",\\r\\n        \\\"v\\\": \\\"v run\\\",\\r\\n        \\\"sass\\\": \\\"sass --style expanded\\\",\\r\\n        \\\"scss\\\": \\\"scss --style expanded\\\",\\r\\n        \\\"less\\\": \\\"cd $dir && lessc $fileName $fileNameWithoutExt.css\\\",\\r\\n        \\\"FortranFreeForm\\\": \\\"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"fortran-modern\\\": \\\"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"fortran_fixed-form\\\": \\\"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"fortran\\\": \\\"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt\\\",\\r\\n        \\\"sml\\\": \\\"cd $dir && sml $fileName\\\"\\r\\n    },\\r\\n\\r\\n    // [Editor Specific]\\r\\n    \\\"editor.mouseWheelZoom\\\": true,\\r\\n    \\\"editor.inlineSuggest.enabled\\\": true,\\r\\n    \\\"editor.inlayHints.enabled\\\": \\\"on\\\",\\r\\n    \\\"editor.guides.indentation\\\": false,\\r\\n    \\\"editor.guides.bracketPairs\\\": false,\\r\\n    \\\"editor.stickyScroll.enabled\\\": true,\\r\\n    \\\"editor.wordWrap\\\": \\\"off\\\",\\r\\n    \\\"diffEditor.wordWrap\\\": \\\"off\\\",\\r\\n\\r\\n    \\\"files.autoSave\\\": \\\"afterDelay\\\",\\r\\n    \\\"workbench.colorTheme\\\": \\\"Ayu Mirage Bordered\\\",\\r\\n    \\\"workbench.iconTheme\\\": \\\"material-icon-theme\\\",\\r\\n    \\\"workbench.colorCustomizations\\\": {\\r\\n        \\\"editor.lineHighlightBackground\\\": \\\"#1073cf2d\\\",\\r\\n        \\\"editor.lineHighlightBorder\\\": \\\"#9fced11f\\\"\\r\\n    },\\r\\n\\r\\n    \\\"dart.openDevTools\\\": \\\"flutter\\\",\\r\\n    \\\"dart.enableSdkFormatter\\\": true,\\r\\n    \\\"dart.debugSdkLibraries\\\": false,\\r\\n    \\\"dart.debugExternalPackageLibraries\\\": true,\\r\\n\\r\\n    \\\"[dart]\\\": {\\r\\n        \\\"editor.formatOnSave\\\": true,\\r\\n        \\\"editor.formatOnType\\\": true,\\r\\n        \\\"editor.rulers\\\": [\\r\\n            80\\r\\n        ],\\r\\n        \\\"editor.selectionHighlight\\\": false,\\r\\n        \\\"editor.suggest.snippetsPreventQuickSuggestions\\\": false,\\r\\n        \\\"editor.suggestSelection\\\": \\\"first\\\",\\r\\n        \\\"editor.tabCompletion\\\": \\\"onlySnippets\\\",\\r\\n        // \\\"editor.wordBasedSuggestions\\\": false,\\r\\n        \\\"editor.defaultFormatter\\\": \\\"Dart-Code.dart-code\\\"\\r\\n    },\\r\\n\\r\\n    \\\"settingsSync.ignoredSettings\\\": [\\r\\n        \\\"-dart.flutterSdkPaths\\\"\\r\\n    ],\\r\\n\\r\\n\\r\\n    // [Emulator]\\r\\n    \\\"emulator.emulatorPath\\\": \\\"C:/Users/MARU/AppData/Local/Android/Sdk/emulator\\\",\\r\\n    \\\"emulator.emulatorPathWindows\\\": \\\"C:/Users/MARU/AppData/Local/Android/Sdk/emulator\\\",\\r\\n\\r\\n    // [C++]\\r\\n    \\\"cmake.configureOnOpen\\\": false,\\r\\n    \\\"C_Cpp.autocompleteAddParentheses\\\": true,\\r\\n    \\\"[python]\\\": {\\r\\n        \\\"editor.formatOnType\\\": true\\r\\n    },\\r\\n    \\r\\n    \\r\\n    // [Git]\\r\\n    \\\"git.openRepositoryInParentFolders\\\": \\\"never\\\",\\r\\n    \\\"githubPullRequests.pullBranch\\\": \\\"never\\\",\\r\\n    \\r\\n    \\r\\n    \\\"liveServer.settings.donotShowInfoMsg\\\": true,\\r\\n    \\\"emmet.includeLanguages\\\": {\\r\\n        \\\"javascript\\\": \\\"javascriptreact\\\"\\r\\n    },\\r\\n    \\\"[json]\\\": {\\r\\n        \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\r\\n    },\\r\\n    \\\"redhat.telemetry.enabled\\\": false,\\r\\n    \\\"[html]\\\": {\\r\\n        \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\r\\n    },\\r\\n    \\\"[css]\\\": {\\r\\n        \\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\"\\r\\n    },\\r\\n    \\\"[javascript]\\\": {\\r\\n        \\\"editor.defaultFormatter\\\": \\\"vscode.typescript-language-features\\\"\\r\\n    },\\r\\n    \\\"code-runner.ignoreSelection\\\": true,\\r\\n    \\r\\n    \\\"terminal.integrated.cursorBlinking\\\": true,\\r\\n    \\\"lldb.terminalPromptClear\\\": [],\\r\\n    \\\"terminal.integrated.profiles.windows\\\": {\\r\\n\\r\\n        \\\"PowerShell\\\": {\\r\\n            \\\"source\\\": \\\"PowerShell\\\",\\r\\n            \\\"icon\\\": \\\"terminal-powershell\\\"\\r\\n        },\\r\\n        \\\"Command Prompt\\\": {\\r\\n            \\\"path\\\": [\\r\\n                \\\"${env:windir}\\\\\\\\Sysnative\\\\\\\\cmd.exe\\\",\\r\\n                \\\"${env:windir}\\\\\\\\System32\\\\\\\\cmd.exe\\\"\\r\\n            ],\\r\\n            \\\"args\\\": [],\\r\\n            \\\"icon\\\": \\\"terminal-cmd\\\"\\r\\n        },\\r\\n        \\\"Git Bash\\\": {\\r\\n            \\\"source\\\": \\\"Git Bash\\\"\\r\\n        }\\r\\n    },\\r\\n    \\\"terminal.integrated.defaultProfile.windows\\\": \\\"PowerShell\\\",\\r\\n\\r\\n    // oh my posh\\r\\n    // \\\"terminal.integrated.gpuAcceleration\\\": \\\"auto\\\",\\r\\n    \\\"terminal.integrated.fontFamily\\\": \\\"'MesloLGM Nerd Font'\\\",\\r\\n    \\\"editor.inlineSuggest.suppressSuggestions\\\": true,\\r\\n\\r\\n    // cph extension\\r\\n    \\\"cph.general.defaultLanguage\\\": \\\"cpp\\\",\\r\\n    \\\"cph.general.saveLocation\\\": \\\"./bin\\\",\\r\\n    \\\"cph.general.retainWebviewContext\\\": true,\\r\\n    \\\"makefile.configureOnOpen\\\": true,\\r\\n}\"}","keybindings":"{\"keybindings\":\"// Place your key bindings in this file to override the defaultsauto[]\\r\\n[\\r\\n    {\\r\\n        \\\"key\\\": \\\"insert insert\\\",\\r\\n        \\\"command\\\": \\\"code-runner.run\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+alt+n\\\",\\r\\n        \\\"command\\\": \\\"-code-runner.run\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"delete\\\",\\r\\n        \\\"command\\\": \\\"-workbench.action.terminal.killInstance\\\",\\r\\n        \\\"when\\\": \\\"terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+n\\\",\\r\\n        \\\"command\\\": \\\"-workbench.action.files.newUntitledFile\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+n\\\",\\r\\n        \\\"command\\\": \\\"explorer.newFile\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+alt+up\\\",\\r\\n        \\\"command\\\": \\\"-editor.action.insertCursorAbove\\\",\\r\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"alt+insert\\\",\\r\\n        \\\"command\\\": \\\"editor.action.sourceAction\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+b\\\",\\r\\n        \\\"command\\\": \\\"-C_Cpp_Runner.buildFolder\\\",\\r\\n        \\\"when\\\": \\\"C_Cpp_Runner:activatedExtension\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+e ctrl+e\\\",\\r\\n        \\\"command\\\": \\\"calculator.replace\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+alt+n\\\",\\r\\n        \\\"command\\\": \\\"explorer.newFolder\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"alt+`\\\",\\r\\n        \\\"command\\\": \\\"openInIntegratedTerminal\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\r\\n        \\\"command\\\": \\\"-jupyter.runByLineStop\\\",\\r\\n        \\\"when\\\": \\\"notebookCellResource in 'jupyter.notebookeditor.runByLineCells'\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\r\\n        \\\"command\\\": \\\"-jupyter.runcurrentcell\\\",\\r\\n        \\\"when\\\": \\\"editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\r\\n        \\\"command\\\": \\\"editor.action.insertLineAfter\\\",\\r\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\",\\r\\n        \\\"comment\\\": \\\"i added this one for jupyter notebook\\\"\\r\\n    }\\r\\n]\",\"platform\":3}","snippets":"{\"snippets\":{\"c.json\":\"{\\n\\t// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"clojure.json\":\"{\\n\\t// Place your snippets for clojure here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"cpp.json\":\"{\\n  \\\"Default CPP Snippet\\\": {\\n    \\\"prefix\\\": [\\n      \\\"cpp\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"#include <bits/stdc++.h>\\\",\\n      \\\"using namespace std;\\\",\\n      \\\"#define endl '\\\\\\\\n'\\\",\\n      \\\"#define ll long long\\\",\\n      \\\"#define len(v) (int) v.size()\\\",\\n      \\\"#define all(v) v.begin(), v.end()\\\",\\n      \\\"\\\",\\n      \\\"#define input(v) for(auto&x:v)cin>>x;\\\",\\n      \\\"#define print(v) for(auto&x:v)cout<<x<<' ';cout<<endl;\\\",\\n      \\\"#define dbg(a) cout<<#a<<\\\\\\\" = \\\\\\\"<<a<<endl;\\\",\\n      \\\"\\\",\\n      \\\"void solve() \\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int32_t main()\\\",\\n      \\\"{\\\",\\n      \\\"    ios_base::sync_with_stdio(0); \\\",\\n      \\\"    cin.tie(0); cout.tie(0); \\\",\\n      \\\"    int t = 1, tc = 1;\\\",\\n      \\\"    // cin >> t;\\\",\\n      \\\"    while (t--) {\\\",\\n      \\\"        // cout << \\\\\\\"Case \\\\\\\" << tc++ << \\\\\\\": \\\\\\\",\\\",\\n      \\\"        solve();\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    return 0;\\\",\\n      \\\"}\\\",\\n    ],\\n    \\\"description\\\": \\\"Default CP snippet.\\\"\\n  },\\n  \\\"Codeforces Snippet\\\": {\\n    \\\"prefix\\\": [\\n      \\\"cf\\\",\\n      \\\"codeforces\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"#include <bits/stdc++.h>\\\",\\n      \\\"using namespace std;\\\",\\n      \\\"#define endl '\\\\\\\\n'\\\",\\n      \\\"#define ll long long\\\",\\n      \\\"#define len(v) (int) v.size()\\\",\\n      \\\"#define all(v) v.begin(), v.end()\\\",\\n      \\\"#define yes(x) cout<<(x?\\\\\\\"Yes\\\\\\\":\\\\\\\"No\\\\\\\")<<endl;\\\",\\n      \\\"\\\",\\n      \\\"#define input(v) for(auto&x:v)cin>>x;\\\",\\n      \\\"#define print(v) for(auto&x:v)cout<<x<<' ';cout<<endl;\\\",\\n      \\\"#define dbg(a) cout<<#a<<\\\\\\\" = \\\\\\\"<<a<<endl;\\\",\\n      \\\"\\\",\\n      \\\"void solve() \\\",\\n      \\\"{\\\",\\n      \\\"    $0\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int32_t main()\\\",\\n      \\\"{\\\",\\n      \\\"    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\\\",\\n      \\\"    int t; cin >> t; while (t--) solve(); return 0;\\\",\\n      \\\"}\\\",\\n    ],\\n    \\\"description\\\": \\\"A snippet for Codeforces.\\\"\\n  },\\n  \\\"Random Input Generator\\\": {\\n    \\\"prefix\\\": [\\n      \\\"random input generator\\\",\\n      \\\"input generator\\\",\\n      \\\"generator\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// Random input generator\\\",\\n      \\\"auto seed = chrono::high_resolution_clock::now().time_since_epoch().count();\\\",\\n      \\\"std::mt19937 mt(seed);\\\",\\n      \\\"int myrand(int mod) {\\\",\\n      \\\"    return mt()%mod;\\\",\\n      \\\"}\\\",\\n      \\\"// Generates a random number within 100\\\",\\n      \\\"// int random_num = myrand(100) + 1; \\\"\\n    ],\\n    \\\"description\\\": \\\"Random input generator.\\\"\\n  },\\n  \\\"Double Inequality(eps)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"eps inequality\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// EPS\\\",\\n      \\\"const double eps = 1e-9;\\\",\\n      \\\"bool isEqual(double a, double b) {return abs(a-b) <= eps;} // a == b\\\",\\n      \\\"bool isSmaller(double a, double b) {return a+eps < b;} // a < b\\\",\\n      \\\"bool isGreater(double a, double b) {return a > b+eps;} // a > b\\\",\\n      \\\"bool isInt(double a) {return isEqual(ceil(a) - a, 0);} // isInt(num)\\\"\\n    ],\\n    \\\"description\\\": \\\"Double Inequality\\\"\\n  },\\n  \\\"Divisors of a number\\\": {\\n    \\\"prefix\\\": [\\n      \\\"divisors\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"vector<int> divisors(int n) {\\\",\\n      \\\"    vector<int> div;\\\",\\n      \\\"    vector<int> buf;\\\",\\n      \\\"    for (int i = 1; i * i <= n; ++i) {\\\",\\n      \\\"       if (n % i == 0) {\\\",\\n      \\\"           div.push_back(i);\\\",\\n      \\\"           buf.push_back(n / i);\\\",\\n      \\\"       }\\\",\\n      \\\"    }\\\",\\n      \\\"    int from = buf.front() == div.back();\\\",\\n      \\\"    for (int i = buf.size() - 1; i >= from; --i) {\\\",\\n      \\\"        div.push_back(buf[i]);\\\",\\n      \\\"    }\\\",\\n      \\\"    return div;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Returns a vector of divisors of a number.\\\"\\n  },\\n  \\\"Number of Divisors(sqrt)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"nod-n\\\",\\n      \\\"number of divisors\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"int NoD(int n) {\\\",\\n      \\\"     int cnt = 0;\\\",\\n      \\\"     for (int i = 1; i * i <= n; ++i) {\\\",\\n      \\\"         if (n % i == 0) {\\\",\\n      \\\"             ++cnt;\\\",\\n      \\\"             if (n / i != i) {\\\",\\n      \\\"                  ++cnt;\\\",\\n      \\\"             }\\\",\\n      \\\"         }\\\",\\n      \\\"     }\\\",\\n      \\\"     return cnt;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Number of divisors(sqrt)\\\"\\n  },\\n  \\\"Sum of Divisors(sqrt)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"sod-n\\\",\\n      \\\"sum of divisors\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"int SOD(int n) {\\\",\\n      \\\"    int sum = 0;\\\",\\n      \\\"    for (int i = 1; i * i <= n; ++i) {\\\",\\n      \\\"        if (n % i == 0) {\\\",\\n      \\\"            ++cnt;\\\",\\n      \\\"            if (n / i != i) {\\\",\\n      \\\"                ++cnt;\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"    return sum;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Sum of divisors(sqrt)\\\"\\n  },\\n  \\\"NoD sieve for [1, n]\\\": {\\n    \\\"prefix\\\": [\\n      \\\"nod sieve\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"vector<int> nod;\\\",\\n      \\\"\\\",\\n      \\\"void sieve_nod(int n) {\\\",\\n      \\\"    nod.assign(n + 1, 0);\\\",\\n      \\\"    for (int i = 1; i <= n; ++i) {\\\",\\n      \\\"        for (int j = i; j <= n; j += i) {\\\",\\n      \\\"            ++nod[j];\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Number of Divisors from [1, n]\\\"\\n  },\\n  \\\"SoD sieve for [1, n]\\\": {\\n    \\\"prefix\\\": [\\n      \\\"sod sieve\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"vector<int> sod;\\\",\\n      \\\"\\\",\\n      \\\"void sieve_sod(int n) {\\\",\\n      \\\"    sod.assign(n + 1, 0);\\\",\\n      \\\"    for (int i = 1; i <= n; ++i) {\\\",\\n      \\\"        for (int j = i; j <= n; j += i) {\\\",\\n      \\\"            sod[j] += i;\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Sum of Divisors from [1, n]\\\"\\n  },\\n  \\\"DFS\\\": {\\n    \\\"prefix\\\": \\\"dfs\\\",\\n    \\\"body\\\": [\\n      \\\"// DFS\\\",\\n      \\\"const int N = 2e5+25;\\\",\\n      \\\"vector<int> g[N];\\\",\\n      \\\"vector<bool> vis;\\\",\\n      \\\"\\\",\\n      \\\"void clear_graph(int n) {\\\",\\n      \\\"    for (auto& v : g) v.clear();\\\",\\n      \\\"    vis.assign(n, false);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int dfs(int vertex) {\\\",\\n      \\\"    vis[vertex] = true;\\\",\\n      \\\"\\\",\\n      \\\"    for (int child : g[vertex]) {\\\",\\n      \\\"        if (!vis[child]) {\\\",\\n      \\\"            dfs(child);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Basic DFS code.\\\"\\n  },\\n  \\\"Disjoint Set Unit(DSU)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"dsu\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// DSU\\\",\\n      \\\"struct DSU {\\\",\\n      \\\"\\\\tvector<int> e;\\\",\\n      \\\"\\\\tDSU(int N) { e = vector<int>(N, -1); }\\\",\\n      \\\"\\\",\\n      \\\"    int size(int x) { return -e[get(x)]; }\\\",\\n      \\\"\\\\tint get(int x) { return e[x] < 0 ? x : e[x] = get(e[x]); }\\\",\\n      \\\"\\\\tbool same_set(int a, int b) { return get(a) == get(b); }\\\",\\n      \\\"\\\",\\n      \\\"\\\\tbool unite(int x, int y) {\\\",\\n      \\\"\\\\t\\\\tx = get(x), y = get(y);\\\",\\n      \\\"\\\\t\\\\tif (x == y) return false;\\\",\\n      \\\"\\\\t\\\\tif (e[x] > e[y]) swap(x, y);\\\",\\n      \\\"\\\\t\\\\te[x] += e[y];\\\",\\n      \\\"\\\\t\\\\te[y] = x;\\\",\\n      \\\"\\\\t\\\\treturn true;\\\",\\n      \\\"\\\\t}\\\",\\n      \\\"};\\\",\\n      \\\"// DSU dsu(n+1);\\\",\\n      \\\"// dsu.unite(x, y);\\\",\\n      \\\"// dsu.same_set(x, y);\\\"\\n    ],\\n    \\\"description\\\": \\\"Disjoint Set Unit\\\"\\n  },\\n  \\\"KnapSack - Naive\\\": {\\n    \\\"prefix\\\": \\\"knapsack\\\",\\n    \\\"body\\\": [\\n      \\\"// Naive KnapSack\\\",\\n      \\\"ll S, n;\\\",\\n      \\\"vector<ll> s, v;\\\",\\n      \\\"vector<vector<ll>> dp;\\\",\\n      \\\"\\\",\\n      \\\"ll KnapSack(ll S){\\\",\\n      \\\"    ll n = s.size();\\\",\\n      \\\"    dp.assign(n+1, vector<ll> (S+1, 0));\\\",\\n      \\\"    for (int i = 1; i <= n; i++){\\\",\\n      \\\"        for (int cap = 1; cap <= S; cap++){\\\",\\n      \\\"            \\\",\\n      \\\"            ll naNiye = dp[i-1][cap], niye = 0;\\\",\\n      \\\"            if (s[i] <= cap) niye = v[i] + dp[i-1][cap - s[i]];\\\",\\n      \\\"\\\",\\n      \\\"            dp[i][cap] = max(naNiye, niye);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    return dp[n][S];\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"LCS - Longest Common Subsequence\\\": {\\n    \\\"prefix\\\": \\\"lcs\\\",\\n    \\\"body\\\": [\\n      \\\"// LCS - Longest Common Subsequence\\\",\\n      \\\"vector<vector<int>> dp;\\\",\\n      \\\"int LCS(string s, string p){\\\",\\n      \\\"    int n = s.size() + 1, m = p.size() + 1;\\\",\\n      \\\"\\\",\\n      \\\"    dp.assign(n, vector<int> (m, 0)); // dp[n][m]\\\",\\n      \\\"\\\",\\n      \\\"    for (int i = 1; i < n; i++){\\\",\\n      \\\"        for (int j = 1; j < m; j++){\\\",\\n      \\\"\\\",\\n      \\\"            int i0 = i-1, j0 = j-1; // 0 based index\\\",\\n      \\\"\\\",\\n      \\\"            if (s[i0] == p[j0]){\\\",\\n      \\\"                dp[i][j] = dp[i-1][j-1] + 1; \\\",\\n      \\\"            } else {\\\",\\n      \\\"                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    return dp[n-1][m-1];\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"LCS - Longest Common Subsequence\\\"\\n  },\\n  \\\"Geometry Template(Sarwar vi)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"geo\\\",\\n      \\\"geo-sarwar_vi\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"#define TEM template<typename T>\\\",\\n      \\\"namespace geometry {\\\",\\n      \\\"    TEM struct Point2D {\\\",\\n      \\\"        T x, y;\\\",\\n      \\\"        Point2D() { x = 0, y = 0; }\\\",\\n      \\\"        Point2D(T x, T y) \\\",\\n      \\\"        {Point2D::x = x; Point2D::y = y;}\\\",\\n      \\\"    };\\\",\\n      \\\"\\\",\\n      \\\"    TEM double slope(Point2D<T>& a, Point2D<T>& b)  // slope(a, b)\\\",\\n      \\\"    {return 1.0 * (b.y - a.y) / (b.x - a.x);}\\\",\\n      \\\"\\\",\\n      \\\"    TEM double dist(Point2D<T>& a, Point2D<T>& b) // dist(a, b)\\\",\\n      \\\"    {return sqrt((b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y));}\\\",\\n      \\\"\\\",\\n      \\\"    TEM bool collinear(Point2D<T>& a, Point2D<T>& b, Point2D<T>& c) // collinear(a, b, c)\\\",\\n      \\\"    {return (b.y - a.y) * (c.x - b.x) == (b.x - a.x) * (c.y - b.y);}\\\",\\n      \\\"\\\",\\n      \\\"    TEM int orientation(Point2D<T>& a, Point2D<T>& b, Point2D<T>& c) // orientation(a, b, c)\\\",\\n      \\\"    {T k = (b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y); // collinear -> 0\\\",\\n      \\\"    if (k == 0) return 0; return ((k < 0)? -1 : 1); } // left/anticlockwise -> -1, right -> 1\\\",\\n      \\\"\\\",\\n      \\\"    TEM T tri_area_doubled(Point2D<T>& a, Point2D<T>& b, Point2D<T>& c) // tri_area_doubled(a, b, c)\\\",\\n      \\\"    {return abs(a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y));}\\\",\\n      \\\"\\\",\\n      \\\"    TEM T rect_area(Point2D<T>& bottom_left, Point2D<T>& top_right) // rect_area(a, c)\\\",\\n      \\\"    {return (top_right.y - bottom_left.y) * (top_right.x - bottom_left.x);}\\\",\\n      \\\"\\\",\\n      \\\"    // cin >> point; cout << point;\\\",\\n      \\\"    TEM istream& operator>>(istream& in, Point2D<T>& p) \\\",\\n      \\\"    {in >> p.x >> p.y; return in;}\\\",\\n      \\\"    TEM ostream& operator<<(ostream& out, Point2D<T>& p) \\\",\\n      \\\"    {out << \\\\\\\"(\\\\\\\" << p.x << \\\\\\\",\\\\\\\" << p.y << \\\\\\\")\\\\\\\" << endl; return out;}\\\",\\n      \\\"}\\\",\\n      \\\"using namespace geometry;\\\",\\n      \\\"#define Point Point2D<double>\\\"\\n    ],\\n    \\\"description\\\": \\\"Geometry Template(Sarwar vi)\\\"\\n  },\\n  \\\"Priority Queue for pii\\\": {\\n    \\\"prefix\\\": [\\n      \\\"priority_queue\\\",\\n      \\\"custom priority queue\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"/// Custom Priority Queue\\\",\\n      \\\"#define pii pair<int, int>\\\",\\n      \\\"struct comp{\\\",\\n      \\\"    bool operator()(pii& a, pii& b){\\\",\\n      \\\"        return a.second < b.second;\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"priority_queue<pii, vector<pii>, comp> pq;\\\"\\n    ],\\n    \\\"description\\\": \\\"Priority Queue for pii\\\"\\n  },\\n  \\\"Bit Stuff\\\": {\\n    \\\"prefix\\\": [\\n      \\\"bit-stuffs\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// Bit stuffs\\\",\\n      \\\"#define isOdd(n) n&1\\\",\\n      \\\"#define isEven(n) !(n&1)\\\",\\n      \\\"\\\",\\n      \\\"#define div2pk(n, k) n>>k // n / pow(2, k)\\\",\\n      \\\"#define mul2pk(n, k) n<<k // n * pow(2, k)\\\",\\n      \\\"\\\",\\n      \\\"#define isDiv2pK(n, k) !(n & ((1<<k)-1)) // n % pow(2, k) == 0\\\",\\n      \\\"#define isPowOf2(n) n && !(n&(n-1))\\\",\\n      \\\"\\\",\\n      \\\"#define set(n, pos) (n |= (1<<pos))\\\",\\n      \\\"#define unset(n, pos) (n &= ~(1<<pos))\\\",\\n      \\\"#define flip(n, pos) (n ^= (1<<pos))\\\",\\n      \\\"#define getBit(n, pos) (n & (1<<pos))\\\",\\n      \\\"\\\",\\n      \\\"// #pragma GCC target(\\\\\\\"popcnt\\\\\\\")\\\",\\n      \\\"\\\",\\n      \\\"#define posL1(n) 32-__builtin_ctz(n)\\\",\\n      \\\"#define posR1(n) __builtin_ffs(n)\\\",\\n      \\\"\\\",\\n      \\\"#define clearL1(n) n ^= (1 << (32-__builtin_ctz(n)-1))\\\",\\n      \\\"#define clearR1(n) n &= (n-1)\\\",\\n      \\\"\\\",\\n      \\\"#define countSetBits(n) __builtin_popcount(n)\\\"\\n    ],\\n    \\\"description\\\": \\\"Some useful bit macros.\\\"\\n  },\\n  \\\"Sieve of Eratosthenes\\\": {\\n    \\\"prefix\\\": [\\n      \\\"sieve-of-eratosthenes\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// Sieve of Eratosthenes\\\",\\n      \\\"int N = 1e5 + 10;\\\",\\n      \\\"vector<bool> isPrime(N, true);\\\",\\n      \\\"vector<int> primes;\\\",\\n      \\\"\\\",\\n      \\\"void sieve() {\\\",\\n      \\\"    isPrime[0] = isPrime[1] = false;\\\",\\n      \\\"    for (int i = 4; i < N; i += 2)\\\",\\n      \\\"        isPrime[i] = false;\\\",\\n      \\\"\\\",\\n      \\\"    for (int i = 3; i < N; i += 2) {\\\",\\n      \\\"        if (isPrime[i]) {\\\",\\n      \\\"            for (int j = 2*i; j < N; j += i) {\\\",\\n      \\\"                isPrime[j] = false;\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    primes.push_back(2);\\\",\\n      \\\"    for (int i = 3; i < N; i += 2) {\\\",\\n      \\\"        if (isPrime[i]) {\\\",\\n      \\\"            primes.push_back(i);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Sieve of Eratosthenes\\\"\\n  },\\n  \\\"Prime Factorization Using Primes\\\": {\\n    \\\"prefix\\\": [\\n      \\\"pf\\\",\\n      \\\"pfac\\\",\\n      \\\"primefac\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// Sieve of Eratosthenes\\\",\\n      \\\"int N = 1e5 + 10;\\\",\\n      \\\"vector<bool> isPrime(N, true);\\\",\\n      \\\"vector<int> primes;\\\",\\n      \\\"\\\",\\n      \\\"void sieve() {\\\",\\n      \\\"    isPrime[0] = isPrime[1] = false;\\\",\\n      \\\"    for (int i = 4; i < N; i += 2)\\\",\\n      \\\"        isPrime[i] = false;\\\",\\n      \\\"\\\",\\n      \\\"    for (int i = 3; i < N; i += 2) {\\\",\\n      \\\"        if (isPrime[i]) {\\\",\\n      \\\"            for (int j = 2*i; j < N; j += i) {\\\",\\n      \\\"                isPrime[j] = false;\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    primes.push_back(2);\\\",\\n      \\\"    for (int i = 3; i < N; i += 2) {\\\",\\n      \\\"        if (isPrime[i]) {\\\",\\n      \\\"            primes.push_back(i);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void primefac(auto n, map<int, int>& m) {\\\",\\n      \\\"    for (int& p : primes) {\\\",\\n      \\\"        if (p*1LL*p > n) break;\\\",\\n      \\\"\\\",\\n      \\\"        while (n % p == 0) {\\\",\\n      \\\"            m[p]++;\\\",\\n      \\\"            n /= p;\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    if (n > 1) m[n]++;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"Segment Tree(Recursive)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"segtree\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"template <class T>\\\",\\n      \\\"struct SegmentTree{\\\",\\n      \\\"private:\\\",\\n      \\\"    int n;\\\",\\n      \\\"    vector<T> tree;\\\",\\n      \\\"    \\\",\\n      \\\"    void buildTree(const vector<T>& v, int node, int b, int e){\\\",\\n      \\\"        if(b==e){tree[node] = v[b];return;}\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        buildTree(v, ln, b, mid);\\\",\\n      \\\"        buildTree(v, rn, mid+1, e);\\\",\\n      \\\"        tree[node] = merge(tree[ln],tree[rn]);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    T query(int node, int b, int e, int l, int r){\\\",\\n      \\\"        if(l > e or r < b) return identity;\\\",\\n      \\\"        if(l<=b and r>=e) return tree[node];\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        T c1 = query(ln, b, mid, l, r);\\\",\\n      \\\"        T c2 = query(rn, mid+1, e, l, r);\\\",\\n      \\\"        return merge(c1,c2);\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    void set(int node, int b, int e, int ind, T val){\\\",\\n      \\\"        if(ind > e or ind < b) return;\\\",\\n      \\\"        if(ind<=b and ind>=e){\\\",\\n      \\\"            tree[node] = val; \\\",\\n      \\\"            return;\\\",\\n      \\\"        }\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        if (ind <= mid) set(ln, b, mid, ind, val);\\\",\\n      \\\"        else set(rn, mid+1, e, ind, val);\\\",\\n      \\\"        tree[node] = merge(tree[ln],tree[rn]);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    void update(int node, int b, int e, int ind, T val){\\\",\\n      \\\"        if(ind > e or ind < b) return;\\\",\\n      \\\"        if(ind<=b and ind>=e){\\\",\\n      \\\"            tree[node] = merge(tree[node], val);\\\",\\n      \\\"            return;\\\",\\n      \\\"        }\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        if (ind <= mid) update(ln, b, mid, ind, val);\\\",\\n      \\\"        else update(rn, mid+1, e, ind, val);\\\",\\n      \\\"        tree[node] = merge(tree[ln],tree[rn]);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"public:\\\",\\n      \\\"    T query(int l, int r){return query(1, 0, n-1, l, r);}\\\",\\n      \\\"    void set(int ind, T val){set(1, 0, n-1, ind, val);}\\\",\\n      \\\"    void update(int ind, T val){update(1, 0, n-1, ind, val);}\\\",\\n      \\\"    \\\",\\n      \\\"    SegmentTree(const vector<T>& input) {\\\",\\n      \\\"        n = input.size();\\\",\\n      \\\"        int sz = n<<2; // 4n\\\",\\n      \\\"        tree.resize(sz);\\\",\\n      \\\"        buildTree(input, 1, 0, n-1);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    T merge(const T& a, const T& b) { return a + b; }\\\",\\n      \\\"    T identity = 0;\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"/*\\\",\\n      \\\"    vector<int> v(n); cin >> v;\\\",\\n      \\\"\\\",\\n      \\\"    SegmentTree<int> segTree(v); // All 0 based index\\\",\\n      \\\"\\\",\\n      \\\"    segTree.query(left-1, right-1);\\\",\\n      \\\"    segTree.set(index-1, value);\\\",\\n      \\\"    segTree.update(index-1, increasingValue);\\\",\\n      \\\"*/\\\"\\n    ],\\n    \\\"description\\\": \\\"Segment Tree Recursive\\\"\\n  },\\n  \\\"Segment Tree(Iterative)\\\": {\\n    \\\"prefix\\\": [\\n      \\\"iterative-segtree\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// Iterative\\\",\\n      \\\"template <class T>\\\",\\n      \\\"struct SegmentTreeItarative{\\\",\\n      \\\"private:\\\",\\n      \\\"    int n;\\\",\\n      \\\"    vector<T> tree;\\\",\\n      \\\"    \\\",\\n      \\\"    void buildTree(){\\\",\\n      \\\"        for (int i = n - 1; i > 0; i--)\\\",\\n      \\\"            tree[i] = merge(tree[i << 1], tree[i << 1 | 1]);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"public:\\\",\\n      \\\"    void set(int ind, T val){\\\",\\n      \\\"        ind+=n;\\\",\\n      \\\"        for (tree[ind] = val; ind > 1; ind >>= 1){\\\",\\n      \\\"            tree[ind >> 1] = merge(tree[ind], tree[ind ^ 1]);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"    void update(int ind, T val){\\\",\\n      \\\"        ind+=n;\\\",\\n      \\\"        for (tree[ind] += val; ind > 1; ind >>= 1){\\\",\\n      \\\"            tree[ind >> 1] = merge(tree[ind], tree[ind ^ 1]);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"    T query(int l, int r){ // closed interval [l,r]\\\",\\n      \\\"        T ansl = identity;\\\",\\n      \\\"        T ansr = identity;\\\",\\n      \\\"        for (l+=n, r+=n+1; l<r; l>>=1, r>>=1)\\\",\\n      \\\"        {\\\",\\n      \\\"            if (l&1){\\\",\\n      \\\"                ansl = merge(ansl, tree[l++]);\\\",\\n      \\\"            }\\\",\\n      \\\"            if (r&1){\\\",\\n      \\\"                ansr = merge(tree[--r], ansr);\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"        return merge(ansl, ansr);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    SegmentTreeItarative(const vector<T>& input) {\\\",\\n      \\\"        n = input.size();\\\",\\n      \\\"        tree.resize(n<<1);\\\",\\n      \\\"        for(int i=0; i<n; i++)\\\",\\n      \\\"            tree[i+n] = input[i];\\\",\\n      \\\"        buildTree();\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    T merge(const T& a, const T& b) { return min(a, b); }\\\",\\n      \\\"    T identity = INT_MAX;\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"/*\\\",\\n      \\\"    vector<int> v(n); cin >> v;\\\",\\n      \\\"\\\",\\n      \\\"    SegmentTreeItarative segTree(v);\\\",\\n      \\\"\\\",\\n      \\\"    segTree.query(left-1, right-1);\\\",\\n      \\\"    segTree.set(index-1, value);\\\",\\n      \\\"    segTree.update(index-1, increasingValue);\\\",\\n      \\\"*/\\\"\\n    ],\\n    \\\"description\\\": \\\"Iterative Segment Tree\\\"\\n  },\\n  \\\"Lazy Segment Tree\\\": {\\n    \\\"prefix\\\": [\\n      \\\"lazy-segtree\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"template <class T>\\\",\\n      \\\"struct LazySegtree{\\\",\\n      \\\"private:\\\",\\n      \\\"    int n;\\\",\\n      \\\"    vector<T> tree;\\\",\\n      \\\"    vector<T> addTree, setTree;\\\",\\n      \\\"    \\\",\\n      \\\"    void buildTree(const vector<T>& v, int node, int b, int e){\\\",\\n      \\\"        if(b==e){tree[node] = v[b];return;}\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        buildTree(v, ln, b, mid);\\\",\\n      \\\"        buildTree(v, rn, mid+1, e);\\\",\\n      \\\"        tree[node] = merge(tree[ln],tree[rn]);\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    void propagate(int node, int b, int e){\\\",\\n      \\\"        int ln = node<<1, rn = ln+1;\\\",\\n      \\\"        if(setTree[node]!=set_identity){\\\",\\n      \\\"            addTree[node]=add_identity;\\\",\\n      \\\"            tree[node] = setTree[node]*(e-b+1);\\\",\\n      \\\"            if(b!=e){\\\",\\n      \\\"                setTree[ln]=setTree[node];\\\",\\n      \\\"                setTree[rn]=setTree[node];\\\",\\n      \\\"            }\\\",\\n      \\\"            setTree[node]=set_identity;\\\",\\n      \\\"        }\\\",\\n      \\\"        else{\\\",\\n      \\\"            if(addTree[node]==add_identity) return;\\\",\\n      \\\"            tree[node]+=addTree[node]*(e-b+1);\\\",\\n      \\\"            if(b!=e){\\\",\\n      \\\"                if(setTree[ln]==set_identity){\\\",\\n      \\\"                    addTree[ln]+=addTree[node];\\\",\\n      \\\"                }\\\",\\n      \\\"                else{\\\",\\n      \\\"                    setTree[ln]+=addTree[node];\\\",\\n      \\\"                    addTree[ln]=0;\\\",\\n      \\\"                }\\\",\\n      \\\"                if(setTree[rn]==set_identity){\\\",\\n      \\\"                    addTree[rn]+=addTree[node];\\\",\\n      \\\"                }\\\",\\n      \\\"                else{\\\",\\n      \\\"                    setTree[rn]+=addTree[node];\\\",\\n      \\\"                    addTree[rn]=0;\\\",\\n      \\\"                }\\\",\\n      \\\"                \\\",\\n      \\\"            }\\\",\\n      \\\"            addTree[node]=add_identity;\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    T query(int node, int b, int e, int l, int r){\\\",\\n      \\\"        propagate(node, b, e);\\\",\\n      \\\"        if(l > e or r < b) return identity;\\\",\\n      \\\"        if(l<=b and r>=e) return tree[node];\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        T c1 = query(ln, b, mid, l, r);\\\",\\n      \\\"        T c2 = query(rn, mid+1, e, l, r);\\\",\\n      \\\"        return merge(c1,c2);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    void range_set(int node, int b, int e, int l, int r, T val){\\\",\\n      \\\"        propagate(node, b, e);\\\",\\n      \\\"        if(l > e or r < b) return;\\\",\\n      \\\"        if(l<=b and r>=e){\\\",\\n      \\\"            setTree[node]=val;\\\",\\n      \\\"            propagate(node, b, e);\\\",\\n      \\\"            return;\\\",\\n      \\\"        }\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        range_set(ln, b, mid, l, r, val);\\\",\\n      \\\"        range_set(rn, mid+1, e, l, r, val);\\\",\\n      \\\"\\\",\\n      \\\"        tree[node]=merge(tree[ln],tree[rn]);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    void range_update(int node, int b, int e, int l, int r, T val){\\\",\\n      \\\"        propagate(node, b, e);\\\",\\n      \\\"        if(l > e or r < b) return;\\\",\\n      \\\"        if(l<=b and r>=e){\\\",\\n      \\\"            addTree[node]+=val;\\\",\\n      \\\"            propagate(node, b, e);\\\",\\n      \\\"            return;\\\",\\n      \\\"        }\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        range_update(ln, b, mid, l, r, val);\\\",\\n      \\\"        range_update(rn, mid+1, e, l, r, val);\\\",\\n      \\\"\\\",\\n      \\\"        tree[node]=merge(tree[ln],tree[rn]);\\\",\\n      \\\"        return;\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"public:\\\",\\n      \\\"    T query(int l, int r){return query(1, 0, n-1, l, r);}\\\",\\n      \\\"    void range_set(int l, int r, T value){ range_set(1, 0, n-1, l, r, value);}\\\",\\n      \\\"    void range_update(int l, int r, T value){range_update(1, 0, n-1, l, r, value);}\\\",\\n      \\\"\\\",\\n      \\\"    LazySegtree(const vector<T>& input) {\\\",\\n      \\\"        n = input.size();\\\",\\n      \\\"        int sz = n<<2; // 4n\\\",\\n      \\\"        tree.resize(sz);\\\",\\n      \\\"        addTree.resize(sz, add_identity);\\\",\\n      \\\"        setTree.resize(sz, set_identity);\\\",\\n      \\\"        buildTree(input, 1, 0, n-1);\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    T add_identity = 0;\\\",\\n      \\\"    T set_identity = 0;\\\",\\n      \\\"    T identity = 0;\\\",\\n      \\\"    T merge(const T& a, const T& b) { return a + b; }\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"/*\\\",\\n      \\\"    LazySegtree<int> segTree(v);\\\",\\n      \\\"\\\",\\n      \\\"    segTree.query(left-1, right-1);\\\",\\n      \\\"    segTree.range_set(left-1, right-1, value);\\\",\\n      \\\"    segTree.range_update(left-1, right-1, value);\\\",\\n      \\\"*/\\\"\\n    ],\\n    \\\"description\\\": \\\"Lazy Segment Tree\\\"\\n  },\\n  \\\"Merge Sort Tree\\\": {\\n    \\\"prefix\\\": \\\"merge sort tree\\\",\\n    \\\"body\\\": [\\n      \\\"template <class T>\\\",\\n      \\\"struct SegmentTree{\\\",\\n      \\\"private:\\\",\\n      \\\"    int n;\\\",\\n      \\\"    vector<vector<T>> tree;\\\",\\n      \\\"    \\\",\\n      \\\"    // Build Tree\\\",\\n      \\\"    void buildTree(const vector<T>& v, int node, int b, int e){\\\",\\n      \\\"        if(b==e){tree[node] = {v[b]};return;}\\\",\\n      \\\"        int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"        buildTree(v, ln, b, mid);\\\",\\n      \\\"        buildTree(v, rn, mid+1, e);\\\",\\n      \\\"        tree[node] = merge(tree[ln],tree[rn]);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // Merge Nodes (just sort two nodes or vectors)\\\",\\n      \\\"    vector<int> merge(vector<int> &a, vector<int> &b) {\\\",\\n      \\\"        vector<int> c;\\\",\\n      \\\"        int i = 0, j = 0;\\\",\\n      \\\"        while (i < a.size() and j < b.size()) {\\\",\\n      \\\"            if (a[i] < b[j]) c.push_back(a[i++]);\\\",\\n      \\\"            else c.push_back(b[j++]);\\\",\\n      \\\"        }\\\",\\n      \\\"        while (i < a.size()) c.push_back(a[i++]);\\\",\\n      \\\"        while (j < b.size()) c.push_back(b[j++]);\\\",\\n      \\\"        return c;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // do binary search on the sorted node array(ofc if in range)\\\",\\n      \\\"    int get(vector<int> &v, int k){\\\",\\n      \\\"        auto it = upper_bound(v.begin(), v.end(), k) - v.begin();\\\",\\n      \\\"        // return it;   //number of elements strictly less than k in the range\\\",\\n      \\\"        return v.size() - it;   //number of elements strictly greater than k in the range\\\",\\n      \\\"        // return v.size() - it - 1;   //number of elements strictly greater than or equal to k in the range\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    int query(int node, int tL, int tR, int qL, int qR, int k) {\\\",\\n      \\\"        if (tL >= qL && tR <= qR) {\\\",\\n      \\\"            return get(tree[node], k);\\\",\\n      \\\"        }\\\",\\n      \\\"        if (tR < qL || tL > qR) {\\\",\\n      \\\"            return 0;\\\",\\n      \\\"        }\\\",\\n      \\\"        int mid = (tL + tR) / 2;\\\",\\n      \\\"        int QL = query(2 * node, tL, mid, qL, qR, k);\\\",\\n      \\\"        int QR = query(2 * node + 1, mid + 1, tR, qL, qR, k);\\\",\\n      \\\"        return QL + QR;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"public:\\\",\\n      \\\"    int query(int l, int r, int k){return query(1, 0, n-1, l, r, k);}\\\",\\n      \\\"    \\\",\\n      \\\"    SegmentTree(const vector<T>& input) {\\\",\\n      \\\"        n = input.size();\\\",\\n      \\\"        int sz = n<<2; // 4n\\\",\\n      \\\"        // tree.assign(vector<T>());\\\",\\n      \\\"        tree.resize(sz);\\\",\\n      \\\"        buildTree(input, 1, 0, n-1);\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"/*\\\",\\n      \\\"    vector<int> v(n); cin >> v;\\\",\\n      \\\"\\\",\\n      \\\"    SegmentTree<int> segTree(v); // All 0 based index\\\",\\n      \\\"\\\",\\n      \\\"    segTree.query(left - 1, right - 1, k);\\\",\\n      \\\"*/\\\"\\n    ],\\n    \\\"description\\\": \\\"Merge Sort Tree Template\\\"\\n  },\\n  \\\"PBDS Set | Order Statistics Tree\\\": {\\n    \\\"prefix\\\": \\\"pbds set order statistics tree\\\",\\n    \\\"body\\\": [\\n      \\\"// pbds set // more like a indexed set\\\",\\n      \\\"#include <ext/pb_ds/assoc_container.hpp> \\\",\\n      \\\"#include <ext/pb_ds/tree_policy.hpp>\\\",\\n      \\\"using namespace __gnu_pbds;\\\",\\n      \\\"\\\",\\n      \\\"typedef tree<int, null_type, less<int>,\\\",\\n      \\\"rb_tree_tag,tree_order_statistics_node_update> pbds;\\\",\\n      \\\"\\\",\\n      \\\"/*  pbds s; s.insert(x);\\\",\\n      \\\"    int value = *s.find_by_order(index);\\\",\\n      \\\"    int index = s.order_of_key(value); */\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"PBDS Ordered Set (with comparetor)\\\": {\\n    \\\"prefix\\\": \\\"pbds set order statistics tree\\\",\\n    \\\"body\\\": [\\n      \\\"struct Node { ll id, score, penalty; };\\\",\\n      \\\"\\\",\\n      \\\"// pbds set // more like a indexed set\\\",\\n      \\\"#include <ext/pb_ds/assoc_container.hpp> \\\",\\n      \\\"#include <ext/pb_ds/tree_policy.hpp>\\\",\\n      \\\"using namespace __gnu_pbds;\\\",\\n      \\\"\\\",\\n      \\\"// comparator\\\",\\n      \\\"namespace std { \\\",\\n      \\\"    template<> struct less<Node> {\\\",\\n      \\\"        bool operator() (const Node& a, const Node& b) const {\\\",\\n      \\\"            if (a.score > b.score) return true;\\\",\\n      \\\"            if (a.score == b.score) {\\\",\\n      \\\"                if (a.penalty == b.penalty) return a.id < b.id;\\\",\\n      \\\"                return a.penalty < b.penalty;\\\",\\n      \\\"            }\\\",\\n      \\\"            return false;\\\",\\n      \\\"        }\\\",\\n      \\\"    };\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"typedef tree<Node, null_type, less<Node>,\\\",\\n      \\\"rb_tree_tag,tree_order_statistics_node_update> pbds;\\\",\\n      \\\"\\\",\\n      \\\"/*  pbds s; s.insert(x);\\\",\\n      \\\"    int value = *s.find_by_order(index);\\\",\\n      \\\"    int index = s.order_of_key(value); */\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"PBDS Multiset\\\": {\\n    \\\"prefix\\\": [\\n      \\\"pbds multiset\\\",\\n      \\\"_multiset\\\",\\n      \\\"multisetTahmidvi\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"// pbds multiset // more like a indexed multiset\\\",\\n      \\\"#include<ext/pb_ds/assoc_container.hpp>\\\",\\n      \\\"#include<ext/pb_ds/tree_policy.hpp>\\\",\\n      \\\"using namespace __gnu_pbds;\\\",\\n      \\\"\\\",\\n      \\\"template<class T>\\\",\\n      \\\"class _multiset{\\\",\\n      \\\"    using MS = tree<T, null_type, less_equal<T>, \\\",\\n      \\\"    rb_tree_tag, tree_order_statistics_node_update>;\\\",\\n      \\\"    MS s;\\\",\\n      \\\"public:\\\",\\n      \\\"    _multiset(){s.clear();}\\\",\\n      \\\"    void erase(T xx){s.erase(s.upper_bound(xx));}\\\",\\n      \\\"    typename MS::iterator lower_bound(T xx){return s.upper_bound(xx);}\\\",\\n      \\\"    typename MS::iterator upper_bound(T xx){return s.lower_bound(xx);}\\\",\\n      \\\"    // same\\\",\\n      \\\"    size_t size(){return s.size();}\\\",\\n      \\\"    void insert(T xx){s.insert(xx);}\\\",\\n      \\\"    T find_by_order(int xx){return s.find_by_order(xx);}\\\",\\n      \\\"    int order_of_key(T xx){return s.order_of_key(xx);}\\\",\\n      \\\"    void erase(typename MS::iterator xx){s.erase(xx);}\\\",\\n      \\\"};\\\"\\n    ],\\n    \\\"description\\\": \\\"Multiset implemented with PBDS.\\\"\\n  },\\n  \\\"Merge Sort Tree with point update\\\": {\\n    \\\"prefix\\\": [\\n      \\\"merge sort tree(with point update)\\\"\\n    ],\\n    \\\"body\\\": [\\n      \\\"#include<ext/pb_ds/assoc_container.hpp>\\\",\\n      \\\"#include<ext/pb_ds/tree_policy.hpp>\\\",\\n      \\\"using namespace __gnu_pbds;\\\",\\n      \\\"\\\",\\n      \\\"template <class T>\\\",\\n      \\\"class _multiset{\\\",\\n      \\\"    using MS = tree<T, null_type, less_equal<T>, \\\",\\n      \\\"    rb_tree_tag, tree_order_statistics_node_update>;\\\",\\n      \\\"    MS s;\\\",\\n      \\\"public:\\\",\\n      \\\"    _multiset(){s.clear();}\\\",\\n      \\\"    void erase(T xx){s.erase(s.upper_bound(xx));}\\\",\\n      \\\"    typename MS::iterator lower_bound(T xx){return s.upper_bound(xx);}\\\",\\n      \\\"    typename MS::iterator upper_bound(T xx){return s.lower_bound(xx);}\\\",\\n      \\\"    // same\\\",\\n      \\\"    size_t size(){return s.size();}\\\",\\n      \\\"    void insert(T xx){s.insert(xx);}\\\",\\n      \\\"    T find_by_order(int xx){return s.find_by_order(xx);}\\\",\\n      \\\"    int order_of_key(T xx){return s.order_of_key(xx);}\\\",\\n      \\\"    void erase(typename MS::iterator xx){s.erase(xx);}\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"using T = long long;\\\",\\n      \\\"int N;\\\",\\n      \\\"vector<T> vec;\\\",\\n      \\\"vector<_multiset<ll>> segtree;\\\",\\n      \\\"\\\",\\n      \\\"void buildTree(int node, int b, int e){\\\",\\n      \\\"    for (int i = b; i <= e; i++) {\\\",\\n      \\\"        segtree[node].insert(vec[i]);\\\",\\n      \\\"    }\\\",\\n      \\\"    if(b==e)return;\\\",\\n      \\\"    int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"    buildTree(ln, b, mid);\\\",\\n      \\\"    buildTree(rn, mid+1, e);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"T query(int node, int b, int e, int l, int r, T val){\\\",\\n      \\\"    if(l > e or r < b) return 0;\\\",\\n      \\\"    if(l<=b and r>=e) return segtree[node].order_of_key(val);\\\",\\n      \\\"    int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"    T c1 = query(ln, b, mid, l, r, val);\\\",\\n      \\\"    T c2 = query(rn, mid+1, e, l, r, val);\\\",\\n      \\\"    return c1 + c2;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void setValue(int node, int b, int e, int ind, T val){\\\",\\n      \\\"    segtree[node].erase(vec[ind]);\\\",\\n      \\\"    segtree[node].insert(val);\\\",\\n      \\\"\\\",\\n      \\\"    if(b==e)return;\\\",\\n      \\\"\\\",\\n      \\\"    int mid = (b+e)>>1, ln = node<<1, rn = ln+1;\\\",\\n      \\\"    if (ind <= mid) setValue(ln, b, mid, ind, val);\\\",\\n      \\\"    else setValue(rn, mid+1, e, ind, val);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void buildTree(vector<T>& input) {\\\",\\n      \\\"    N = input.size();vec = input;\\\",\\n      \\\"    int sz = N<<2; // 4n\\\",\\n      \\\"    segtree.resize(sz);\\\",\\n      \\\"    buildTree(1, 0, N-1);\\\",\\n      \\\"}\\\",\\n      \\\"T query(int l, int r, T val){return query(1, 0, N-1, l, r, val);}\\\",\\n      \\\"void setValue(int ind, T val){\\\",\\n      \\\"    setValue(1, 0, N-1, ind, val);\\\",\\n      \\\"    vec[ind] = val;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"/*\\\",\\n      \\\"    vector<int> v(n); input(v);\\\",\\n      \\\"    buildTree(v); // All 0 based index\\\",\\n      \\\"\\\",\\n      \\\"    query(left-1, right-1, value);\\\",\\n      \\\"    set(index-1, value);\\\",\\n      \\\"*/\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"String Hash\\\": {\\n    \\\"prefix\\\": \\\"hash string\\\",\\n    \\\"body\\\": [\\n      \\\"class HashedString {\\\",\\n      \\\"  private:\\\",\\n      \\\"    // change M and B if you want\\\",\\n      \\\"    static const long long M = 1e9 + 9;\\\",\\n      \\\"    static const long long B = 9973;\\\",\\n      \\\"\\\",\\n      \\\"    // pow[i] contains B^i % M\\\",\\n      \\\"    static std::vector<long long> pow;\\\",\\n      \\\"\\\",\\n      \\\"    // p_hash[i] is the hash of the first i characters of the given string\\\",\\n      \\\"    std::vector<long long> p_hash;\\\",\\n      \\\"    std::vector<long long> s_hash;\\\",\\n      \\\"\\\",\\n      \\\"  public:\\\",\\n      \\\"    HashedString(const std::string &s) : p_hash(s.size() + 1) {\\\",\\n      \\\"        // Ensure pow has enough elements to handle the string size\\\",\\n      \\\"        while (pow.size() < s.size()) {\\\",\\n      \\\"            pow.push_back((pow.back() * B) % M);\\\",\\n      \\\"        }\\\",\\n      \\\"\\\",\\n      \\\"        // Compute forward hash\\\",\\n      \\\"        p_hash[0] = 0;\\\",\\n      \\\"        for (int i = 0; i < s.size(); i++) {\\\",\\n      \\\"            p_hash[i + 1] = ((p_hash[i] * B) % M + s[i]) % M;\\\",\\n      \\\"        }\\\",\\n      \\\"\\\",\\n      \\\"        // Compute backward hash\\\",\\n      \\\"        s_hash.resize(s.size() + 1);\\\",\\n      \\\"        s_hash[s.size()] = 0;\\\",\\n      \\\"        for (int i = s.size() - 1; i >= 0; --i) {\\\",\\n      \\\"            s_hash[i] = ((s_hash[i + 1] * B) % M + s[i]) % M;\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    long long fwd_hash(int start, int end) {\\\",\\n      \\\"        long long raw_val = (p_hash[end + 1] - (p_hash[start] * pow[end - start + 1]) % M);\\\",\\n      \\\"        return (raw_val % M + M) % M;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    long long bwd_hash(int start, int end) {\\\",\\n      \\\"        long long raw_val = (s_hash[start] - (s_hash[end + 1] * pow[end - start + 1]) % M);\\\",\\n      \\\"        return (raw_val % M + M) % M;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    bool isPalindrome(int start, int end) {\\\",\\n      \\\"        return fwd_hash(start, end) == bwd_hash(start, end);\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"std::vector<long long> HashedString::pow = {1};\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"String Hash\\\"\\n  },\\n  \\\"Big Integer or int128\\\": {\\n    \\\"prefix\\\": \\\"big integer\\\",\\n    \\\"body\\\": [\\n      \\\"// big integer or int128\\\",\\n      \\\"using  int128 =   signed __int128;\\\",\\n      \\\"using uint128 = unsigned __int128;\\\",\\n      \\\" \\\",\\n      \\\"namespace int128_io {\\\",\\n      \\\"    inline auto char_to_digit(int chr) {\\\",\\n      \\\"        return static_cast<int>(isalpha(chr) ? 10+tolower(chr)-'a': chr-'0'); }\\\",\\n      \\\"    inline auto digit_to_char(int digit) {\\\",\\n      \\\"        return static_cast<char>(digit > 9 ? 'a'+digit-10: '0'+digit); }\\\",\\n      \\\" \\\",\\n      \\\"    template<class integer>\\\",\\n      \\\"    inline auto to_int(const std::string &str, size_t *idx = nullptr, int base = 10) {\\\",\\n      \\\"        size_t i = idx != nullptr ? *idx : 0;\\\",\\n      \\\"        const auto n = str.size();\\\",\\n      \\\"        const auto neg = str[i] == '-';\\\",\\n      \\\"        integer num = 0;\\\",\\n      \\\"        if (neg) ++i;\\\",\\n      \\\"        while (i < n) { num *= base, num += char_to_digit(str[i++]); }\\\",\\n      \\\"        if (idx != nullptr) *idx = i;\\\",\\n      \\\"        return neg ? -num : num; }\\\",\\n      \\\" \\\",\\n      \\\"    template<class integer>\\\",\\n      \\\"    inline auto to_string(integer num, int base = 10) {\\\",\\n      \\\"        const auto neg = num < 0;\\\",\\n      \\\"        std::string str;\\\",\\n      \\\"        if (neg) num = -num;\\\",\\n      \\\"        do str += digit_to_char(num%base), num /= base;\\\",\\n      \\\"        while (num > 0); if (neg) str += '-';\\\",\\n      \\\"        std::reverse(str.begin(),str.end());\\\",\\n      \\\"        return str; }\\\",\\n      \\\" \\\",\\n      \\\"    inline auto next_str(std::istream &stream) { std::string str; stream >> str; return str; }\\\",\\n      \\\" \\\",\\n      \\\"    template<class integer>\\\",\\n      \\\"    inline auto& read(std::istream &stream, integer &num) {\\\",\\n      \\\"        num = to_int<integer>(next_str(stream));\\\",\\n      \\\"        return stream; }\\\",\\n      \\\" \\\",\\n      \\\"    template<class integer>\\\",\\n      \\\"    inline auto& write(std::ostream &stream, integer num) { return stream << to_string(num); } }\\\",\\n      \\\" \\\",\\n      \\\"using namespace std;\\\",\\n      \\\" \\\",\\n      \\\"inline auto& operator>>(istream &stream,  int128 &num) { return int128_io::read(stream,num); }\\\",\\n      \\\"inline auto& operator>>(istream &stream, uint128 &num) { return int128_io::read(stream,num); }\\\",\\n      \\\"inline auto& operator<<(ostream &stream,  int128  num) { return int128_io::write(stream,num); }\\\",\\n      \\\"inline auto& operator<<(ostream &stream, uint128  num) { return int128_io::write(stream,num); }\\\",\\n      \\\" \\\",\\n      \\\"inline auto uint128_max() {\\\",\\n      \\\"    uint128 ans = 0;\\\",\\n      \\\"    for (uint128 pow = 1; pow > 0; pow <<= 1)\\\",\\n      \\\"        ans |= pow;\\\",\\n      \\\"    return ans; }\\\",\\n      \\\"\\\",\\n      \\\"// (direct assign not supported yet)\\\",\\n      \\\"// int128 a, b; cin >> a >> b;\\\",\\n      \\\"// uint128 a, b; cout << a << b;\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Big Integer or int128\\\"\\n  },\\n  \\\"2 Heaps Technique\\\": {\\n    \\\"prefix\\\": \\\"2 Heaps Technique\\\",\\n    \\\"body\\\": [\\n      \\\"// 2 Heaps Technique\\\",\\n      \\\"int K; // size of window\\\",\\n      \\\"multiset<int> low, up;\\\",\\n      \\\"\\\",\\n      \\\"void ins(int& val) {\\\",\\n      \\\"    if (low.empty()) { low.insert(val); return; }\\\",\\n      \\\"\\\",\\n      \\\"    int a = *low.rbegin();  // current median\\\",\\n      \\\"    if (a < val) {\\\",\\n      \\\"        up.insert(val);\\\",\\n      \\\"\\\",\\n      \\\"        if (up.size() > K / 2) {\\\",\\n      \\\"            low.insert(*up.begin());\\\",\\n      \\\"            up.erase(up.begin());\\\",\\n      \\\"        }\\\",\\n      \\\"    } else {\\\",\\n      \\\"        low.insert(val);\\\",\\n      \\\"\\\",\\n      \\\"        if (low.size() > (K + 1) / 2) {\\\",\\n      \\\"            up.insert(*low.rbegin());\\\",\\n      \\\"            low.erase(prev(low.end()));\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void era(int& val) {  // erase from sets\\\",\\n      \\\"    auto itr = up.find(val);\\\",\\n      \\\"    if (itr != up.end()) up.erase(itr);\\\",\\n      \\\"    else low.erase(low.find(val));\\\",\\n      \\\"\\\",\\n      \\\"    if (low.empty() and !up.empty()) {\\\",\\n      \\\"        low.insert(*up.begin());\\\",\\n      \\\"        up.erase(up.begin());\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int getMedian() {\\\",\\n      \\\"    return *low.rbegin();\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// K = k; // set window size\\\",\\n      \\\"// insert first k elements\\\",\\n      \\\"// low + up = sorted vector\\\",\\n      \\\"// search whatever you need\\\",\\n      \\\"// WARNING: first erase, then insert\\\"\\n    ],\\n    \\\"description\\\": \\\"2 Heaps Technique\\\"\\n  },\\n  \\\"Grid BFS\\\": {\\n    \\\"prefix\\\": \\\"grid bfs\\\",\\n    \\\"body\\\": [\\n      \\\"// BFS\\\",\\n      \\\"//           U  D  R   L   1   2   3  4\\\",\\n      \\\"int dx[] = {-1, 1, 0,  0, -1, -1,  1, 1};\\\",\\n      \\\"int dy[] = { 0, 0, 1, -1,  1, -1, -1, 1};\\\",\\n      \\\"\\\",\\n      \\\"int n, m;\\\",\\n      \\\"vector<vector<int>> grid, vis;\\\",\\n      \\\"\\\",\\n      \\\"bool check(int x, int y) {\\\",\\n      \\\"    return (x >= 0 and x < n) and (y >= 0 and y < m);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void bfs(int a, int b) {\\\",\\n      \\\"    queue<pair<int, int>> q;\\\",\\n      \\\"    vis[a][b] = 0;\\\",\\n      \\\"    q.push({a, b});\\\",\\n      \\\"\\\",\\n      \\\"    while (!q.empty()) {\\\",\\n      \\\"        int x = q.front().first;\\\",\\n      \\\"        int y = q.front().second;\\\",\\n      \\\"        q.pop();\\\",\\n      \\\"\\\",\\n      \\\"        for (int i = 0; i < 4; i++) {\\\",\\n      \\\"            int xx = x + dx[i], yy = y + dy[i];\\\",\\n      \\\"            if (!check(xx, yy)) continue;\\\",\\n      \\\"\\\",\\n      \\\"            if (grid[xx][yy] == 0 and vis[x][y] + 1 < vis[xx][yy]) {\\\",\\n      \\\"                vis[xx][yy] = vis[x][y] + 1;\\\",\\n      \\\"                q.push({xx, yy});\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    } \\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// prepare grid and vis\\\",\\n      \\\"// cin >> n >> m;\\\",\\n      \\\"// grid.assign(n, vector<int>(m, 0));\\\",\\n      \\\"// vis.assign(n, vector<int>(m, (int)1e9));\\\"\\n    ],\\n    \\\"description\\\": \\\"Grid BFS\\\"\\n  },\\n  \\\"Grid DFS\\\": {\\n    \\\"prefix\\\": \\\"grid dfs\\\",\\n    \\\"body\\\": [\\n      \\\"// DFS\\\",\\n      \\\"//           U  D  R   L   1   2   3  4\\\",\\n      \\\"int dx[] = {-1, 1, 0,  0, -1, -1,  1, 1};\\\",\\n      \\\"int dy[] = { 0, 0, 1, -1,  1, -1, -1, 1};\\\",\\n      \\\"\\\",\\n      \\\"int n, m;\\\",\\n      \\\"vector<vector<int>> grid, vis;\\\",\\n      \\\"\\\",\\n      \\\"bool check(int x, int y) {\\\",\\n      \\\"    return (x >= 0 and x < n) and (y >= 0 and y < m);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int dfs(int x, int y) {\\\",\\n      \\\"    if (grid[x][y] == 0) return 0;\\\",\\n      \\\"\\\",\\n      \\\"    vis[x][y] = 1;\\\",\\n      \\\"    int count = 1;\\\",\\n      \\\"\\\",\\n      \\\"    for (int i = 0; i < 4; i++) {\\\",\\n      \\\"        int xx = x + dx[i], yy = y + dy[i];\\\",\\n      \\\"\\\",\\n      \\\"        if (!vis[xx][yy])\\\",\\n      \\\"            count += dfs(xx, yy);\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    return count;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// prepare grid and vis\\\",\\n      \\\"// cin >> n >> m;\\\",\\n      \\\"// grid.assign(n, vector<int>(m, 0));\\\",\\n      \\\"// vis.assign(n, vector<int>(m, 0));\\\"\\n    ],\\n    \\\"description\\\": \\\"Grid DFS\\\"\\n  },\\n  \\\"Manacher\\\": {\\n    \\\"prefix\\\": \\\"manacher\\\",\\n    \\\"body\\\": [\\n      \\\"struct Manacher {\\\",\\n      \\\"    array<vector<int>, 2> p;\\\",\\n      \\\"\\\",\\n      \\\"    Manacher(const string& s) {\\\",\\n      \\\"        int n = s.size();\\\",\\n      \\\"        p = {vector<int>(n+1), vector<int>(n)};\\\",\\n      \\\"        for (int z = 0; z < 2; z++) {\\\",\\n      \\\"            int l = 0, r = 0;\\\",\\n      \\\"            for (int i = 0; i < n; i++) {\\\",\\n      \\\"                // use previous value if mirror value already calculated\\\",\\n      \\\"                if (i < r) {\\\",\\n      \\\"                    int dist_from_r = r - i + !z;\\\",\\n      \\\"                    int mirror_idx = l + dist_from_r;\\\",\\n      \\\"                    p[z][i] = min(dist_from_r, p[z][mirror_idx]);\\\",\\n      \\\"                }\\\",\\n      \\\"\\\",\\n      \\\"                // expand palindrome around i\\\",\\n      \\\"                int L = i - p[z][i], R = i + p[z][i] - !z;\\\",\\n      \\\"                while (L > 0 and R < n-1 and s[L-1] != s[R+1]) { // complement opposite\\\",\\n      \\\"                    p[z][i]++;\\\",\\n      \\\"                    L--; R++;\\\",\\n      \\\"                }\\\",\\n      \\\"\\\",\\n      \\\"                if (R > r) { l = L; r = R; }\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    bool isPalindrome(int l, int r) {\\\",\\n      \\\"        int len = r - l + 1;\\\",\\n      \\\"        int mid_idx = (l + r + 1) / 2;\\\",\\n      \\\"        int radius = p[(len & 1)][mid_idx];\\\",\\n      \\\"        return (radius * 2 + 1 >= len);\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"// Manacher mana(s);\\\",\\n      \\\"// radius of palindrome at index i is p[i]\\\",\\n      \\\"// print(mana.p[0]); // even len palindromes\\\",\\n      \\\"// print(mana.p[1]);// odd len palindromes\\\"\\n    ],\\n    \\\"description\\\": \\\"Radius of even and odd length palindrome having center at i\\\"\\n  },\\n  \\\"Count all subarrays with sum k\\\": {\\n    \\\"prefix\\\": \\\"count subarray sum k\\\",\\n    \\\"body\\\": [\\n      \\\"ll countSubarraySumK(vector<ll>& v, ll& target) {\\\",\\n      \\\"    int n = v.size();\\\",\\n      \\\"    map<ll, ll> m = { {0, 1} };\\\",\\n      \\\"\\\",\\n      \\\"    ll count = 0, sum = 0;\\\",\\n      \\\"    for (int i = 0; i < n; i++) {\\\",\\n      \\\"        sum += v[i];\\\",\\n      \\\"        count += m[sum - target];\\\",\\n      \\\"\\\",\\n      \\\"        m[sum]++;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    return count;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Count all subarrays with sum k O()\\\"\\n  },\\n  \\\"Dijkstra using Priority Queue\\\": {\\n    \\\"prefix\\\": \\\"dijkstra\\\",\\n    \\\"body\\\": [\\n      \\\"// Dijkstra [Starts]\\\",\\n      \\\"// single source shortest path\\\",\\n      \\\"// 0-based indexing\\\",\\n      \\\"// doesn't work for neg edges\\\",\\n      \\\"const ll INF = 1000000000000;\\\",\\n      \\\"vector<vector<pair<int, ll>>> adj; // {to, weight}\\\",\\n      \\\"\\\",\\n      \\\"void dijkstra(int s, vector<ll> & d, vector<int> & p) {\\\",\\n      \\\"    int n = adj.size();\\\",\\n      \\\"    d.assign(n, INF);\\\",\\n      \\\"    p.assign(n, -1);\\\",\\n      \\\"\\\",\\n      \\\"    d[s] = 0;\\\",\\n      \\\"    using pli = pair<ll, int>; // {to, weight}\\\",\\n      \\\"    priority_queue<pli, vector<pli>, greater<pli>> q; // min-heap\\\",\\n      \\\"    q.push({0, s});\\\",\\n      \\\"\\\",\\n      \\\"    while (!q.empty()) {\\\",\\n      \\\"        int v = q.top().second; // current vertex\\\",\\n      \\\"        ll d_v = q.top().first; // dis(source -> v) according to current q top\\\",\\n      \\\"        q.pop();\\\",\\n      \\\"\\\",\\n      \\\"        if (d_v != d[v]) // dis(source -> v) has been overwritten by another path\\\",\\n      \\\"            continue;\\\",\\n      \\\"\\\",\\n      \\\"        // check all edges from v\\\",\\n      \\\"        for (auto edge : adj[v]) {\\\",\\n      \\\"            int to = edge.first;\\\",\\n      \\\"            ll len = edge.second;\\\",\\n      \\\"            \\\",\\n      \\\"            // dis(source -> v) + dis(v -> to) < existing dis(source -> to)\\\",\\n      \\\"            if (d[v] + len < d[to]) {\\\",\\n      \\\"                d[to] = d[v] + len;\\\",\\n      \\\"                p[to] = v;\\\",\\n      \\\"                q.push({d[to], to});\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"vector<int> restore_path(int source, int destination, vector<int> const& p) {\\\",\\n      \\\"    vector<int> path;\\\",\\n      \\\"\\\",\\n      \\\"    int v = destination;\\\",\\n      \\\"    while (v != source) {\\\",\\n      \\\"        path.push_back(v);\\\",\\n      \\\"        v = p[v];\\\",\\n      \\\"    }\\\",\\n      \\\"    path.push_back(source);\\\",\\n      \\\"\\\",\\n      \\\"    reverse(path.begin(), path.end());\\\",\\n      \\\"    return path;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// int n, m; cin >> n >> m;\\\",\\n      \\\"// adj.assign(n, vector<pair<int, ll>>());\\\",\\n      \\\"\\\",\\n      \\\"// while (m--) {\\\",\\n      \\\"//     int from, to; ll weight;\\\",\\n      \\\"//     cin >> from >> to >> weight;\\\",\\n      \\\"//     from--, to--;\\\",\\n      \\\"\\\",\\n      \\\"//     // check directed or undirected\\\",\\n      \\\"//     adj[from].push_back({to, weight});\\\",\\n      \\\"//     adj[to].push_back({from, weight}); // add this line if undirected\\\",\\n      \\\"// }\\\",\\n      \\\"\\\",\\n      \\\"// vector<ll> dis;\\\",\\n      \\\"// vector<int> p; // parent\\\",\\n      \\\"// dijkstra(0, dis, p);\\\",\\n      \\\"\\\",\\n      \\\"// if (dis[n-1] == INF) {\\\",\\n      \\\"//     cout << -1 << endl;\\\",\\n      \\\"//     return;\\\",\\n      \\\"// }\\\",\\n      \\\"\\\",\\n      \\\"// vector<int> path = restore_path(0, n-1, p);\\\",\\n      \\\"// for (auto& x : path) {\\\",\\n      \\\"//     cout << x + 1 << \\\\\\\" \\\\\\\";\\\",\\n      \\\"// }\\\",\\n      \\\"// Dijkstra [Ends]\\\"\\n    ],\\n    \\\"description\\\": \\\"Dijkstra using Priority Queue, O(m log n)\\\\nTime complexity:O(m log n)\\\\nSingle source Multiple destination shortest path algorithm\\\\nCan't handle negative weight\\\\nDoens't detect negative cycle\\\"\\n  },\\n  \\\"calander function\\\": {\\n    \\\"prefix\\\": \\\"calander\\\",\\n    \\\"body\\\": [\\n      \\\"#include <bits/stdc++.h>\\\",\\n      \\\"using namespace std;\\\",\\n      \\\"#define endl '\\\\\\\\n'\\\",\\n      \\\"#define ll long long\\\",\\n      \\\"#define len(v) (int) v.size()\\\",\\n      \\\"#define all(v) v.begin(), v.end()\\\",\\n      \\\"#include <ctime>\\\",\\n      \\\"\\\",\\n      \\\"#define input(v) for(auto&x:v)cin>>x;\\\",\\n      \\\"#define print(v) for(auto&x:v)cout<<x<<' ';cout<<endl;\\\",\\n      \\\"#define dbg(a) cout<<#a<<\\\\\\\" = \\\\\\\"<<a<<endl;\\\",\\n      \\\"\\\",\\n      \\\"map<string, int> getMonthNumber = { \\\",\\n      \\\"    {\\\\\\\"January\\\\\\\", 1}, {\\\\\\\"February\\\\\\\", 2}, {\\\\\\\"March\\\\\\\", 3}, {\\\\\\\"April\\\\\\\", 4}, \\\",\\n      \\\"    {\\\\\\\"May\\\\\\\", 5}, {\\\\\\\"June\\\\\\\", 6}, {\\\\\\\"July\\\\\\\", 7}, {\\\\\\\"August\\\\\\\", 8}, \\\",\\n      \\\"    {\\\\\\\"September\\\\\\\", 9}, {\\\\\\\"October\\\\\\\", 10}, {\\\\\\\"November\\\\\\\", 11}, {\\\\\\\"December\\\\\\\", 12}\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"string monthName[] = {\\\\\\\"\\\\\\\", \\\\\\\"January\\\\\\\", \\\\\\\"February\\\\\\\", \\\\\\\"March\\\\\\\", \\\\\\\"April\\\\\\\", \\\\\\\"May\\\\\\\", \\\\\\\"June\\\\\\\", \\\\\\\"July\\\\\\\", \\\\\\\"August\\\\\\\", \\\\\\\"September\\\\\\\", \\\\\\\"October\\\\\\\", \\\\\\\"November\\\\\\\", \\\\\\\"December\\\\\\\"};\\\",\\n      \\\"int daysInMonth[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; // 1 based indexing\\\",\\n      \\\"bool isLeapYear(int y) { return ((y % 400 == 0) or (y % 4 == 0 and y % 100 != 0)); }\\\",\\n      \\\"int getNumberOfDays(int y, int m) { return (isLeapYear(y) and m == 2)? 29 : daysInMonth[m]; }\\\",\\n      \\\"\\\",\\n      \\\"string weekDayName[] = {\\\\\\\"Sunday\\\\\\\", \\\\\\\"Monday\\\\\\\", \\\\\\\"Tuesday\\\\\\\", \\\\\\\"Wednesday\\\\\\\", \\\\\\\"Thursday\\\\\\\", \\\\\\\"Friday\\\\\\\", \\\\\\\"Saturday\\\\\\\"};\\\",\\n      \\\"\\\",\\n      \\\"// using year and th day of the year\\\",\\n      \\\"int getWeekDayWthDay(int year, int thDay) {\\\",\\n      \\\"    struct tm datetime;\\\",\\n      \\\"    datetime.tm_year = year - 1900;\\\",\\n      \\\"    datetime.tm_yday = thDay;\\\",\\n      \\\"    mktime(&datetime);\\\",\\n      \\\"    // cout << asctime(&datetime);\\\",\\n      \\\"\\\",\\n      \\\"    // 0 = Sunday, 1 = Monday, ..., 6 = Saturday\\\",\\n      \\\"    return datetime.tm_wday; // weekday\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// using tm data structure\\\",\\n      \\\"int getWeekDayDS(int day, int month, int year) {\\\",\\n      \\\"    // Create the datetime structure and use mktime to fill in the missing members\\\",\\n      \\\"    struct tm datetime;\\\",\\n      \\\"    datetime.tm_year = year - 1900; // Number of years since 1900\\\",\\n      \\\"    datetime.tm_mon = month-1;\\\",\\n      \\\"    datetime.tm_mday = day;\\\",\\n      \\\"    datetime.tm_hour = 0; datetime.tm_min = 0; datetime.tm_sec = 0;\\\",\\n      \\\"    datetime.tm_isdst = -1;\\\",\\n      \\\"    mktime(&datetime);\\\",\\n      \\\"    // cout << asctime(&datetime);\\\",\\n      \\\"\\\",\\n      \\\"    // 0 = Sunday, 1 = Monday, ..., 6 = Saturday\\\",\\n      \\\"    return datetime.tm_wday; // weekday\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Zeller's Congruence to find the day of the week\\\",\\n      \\\"int getDayOfWeek(int day, int month, int year) {\\\",\\n      \\\"    if (month < 3) { \\\",\\n      \\\"        month += 12; \\\",\\n      \\\"        year--; \\\",\\n      \\\"    }\\\",\\n      \\\"    int k = year % 100;  // Year within the century\\\",\\n      \\\"    int j = year / 100;  // Zero-based century\\\",\\n      \\\"    int dayOfWeek = (day + (13 * (month + 1)) / 5 + k + k / 4 + j / 4 + 5 * j) % 7;\\\",\\n      \\\"\\\",\\n      \\\"    // Adjust to make 0 = Sunday, 1 = Monday, ..., 6 = Saturday\\\",\\n      \\\"    return (dayOfWeek + 6) % 7;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Function to print the calendar of a given month and year, with a custom starting day\\\",\\n      \\\"void printMonthCal(int month, int year, int startingWeekDay) {\\\",\\n      \\\"    // Print the header of the calendar\\\",\\n      \\\"    std::cout << \\\\\\\"    \\\\\\\" << monthName[month] << \\\\\\\" \\\\\\\" << year << \\\\\\\"\\\\\\\\n\\\\\\\";\\\",\\n      \\\"\\\",\\n      \\\"    // // Array of days starting from user-specified day\\\",\\n      \\\"    std::string daysOfWeek[7];\\\",\\n      \\\"\\\",\\n      \\\"    // Shift days according to the starting day\\\",\\n      \\\"    for (int i = 0; i < 7; ++i) {\\\",\\n      \\\"        daysOfWeek[i] = weekDayName[(i + startingWeekDay) % 7];\\\",\\n      \\\"        std::cout << std::setw(2) << daysOfWeek[i].substr(0, 2) << \\\\\\\" \\\\\\\";  // Print two-letter day abbreviations\\\",\\n      \\\"    }\\\",\\n      \\\"    std::cout << \\\\\\\"\\\\\\\\n\\\\\\\";\\\",\\n      \\\"\\\",\\n      \\\"    // Find the starting day of the week for the 1st of the month\\\",\\n      \\\"    int firstDayOfWeek = getDayOfWeek(1, month, year);\\\",\\n      \\\"\\\",\\n      \\\"    // Adjust the starting day to match the user's choice\\\",\\n      \\\"    firstDayOfWeek = (firstDayOfWeek - startingWeekDay + 7) % 7;\\\",\\n      \\\"\\\",\\n      \\\"    // Print leading spaces for the first row\\\",\\n      \\\"    for (int i = 0; i < firstDayOfWeek; ++i) {\\\",\\n      \\\"        std::cout << \\\\\\\"   \\\\\\\";\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // Print the days of the month\\\",\\n      \\\"    for (int day = 1; day <= daysInMonth[month]; ++day) {\\\",\\n      \\\"        std::cout << std::setw(2) << day << \\\\\\\" \\\\\\\";\\\",\\n      \\\"        // Move to the next line after the specified last day of the week\\\",\\n      \\\"        if ((day + firstDayOfWeek) % 7 == 0) {\\\",\\n      \\\"            std::cout << \\\\\\\"\\\\\\\\n\\\\\\\";\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"    std::cout << \\\\\\\"\\\\\\\\n\\\\\\\";\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void printYearCal(int year) {\\\",\\n      \\\"    for (int i = 1; i <= 12; i++) {\\\",\\n      \\\"        printMonthCal(i, year, 0);\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int solve(int y) \\\",\\n      \\\"{\\\",\\n      \\\"    // int y; cin >> y;\\\",\\n      \\\"    \\\",\\n      \\\"    int ans = 0;\\\",\\n      \\\"    for (int i = 1; i < 13; i++) {\\\",\\n      \\\"        int first_day =  getDayOfWeek(1, i, y);\\\",\\n      \\\"        first_day = ((first_day - 1) + 7) % 7; // res to monday\\\",\\n      \\\"        \\\",\\n      \\\"        int tot_days = getNumberOfDays(y, i);\\\",\\n      \\\"        \\\",\\n      \\\"        int first_row_slots = 7 - first_day;\\\",\\n      \\\"        int full_row = (tot_days - first_row_slots) / 7;\\\",\\n      \\\"        int count = full_row;\\\",\\n      \\\"        int rem_days = tot_days - full_row * 7;\\\",\\n      \\\"\\\",\\n      \\\"        // dbg(i);\\\",\\n      \\\"        // dbg(first_day);\\\",\\n      \\\"        // dbg(tot_days);\\\",\\n      \\\"        // dbg(full_row);\\\",\\n      \\\"        // dbg(rem_days);\\\",\\n      \\\"        // dbg(first_row_slots);\\\",\\n      \\\"\\\",\\n      \\\"        if (first_row_slots < rem_days)\\\",\\n      \\\"            count += 2;\\\",\\n      \\\"        else \\\",\\n      \\\"            count++;\\\",\\n      \\\"\\\",\\n      \\\"        ans += count;\\\",\\n      \\\"        \\\",\\n      \\\"        // cout << count << endl;\\\",\\n      \\\"        // cout << endl;\\\",\\n      \\\"    }\\\",\\n      \\\"    \\\",\\n      \\\"    // cout << ans;\\\",\\n      \\\"    return ans;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"int32_t main()\\\",\\n      \\\"{\\\",\\n      \\\"    ios_base::sync_with_stdio(0); \\\",\\n      \\\"    cin.tie(0); cout.tie(0); \\\",\\n      \\\"    int t = 1, tc = 1;\\\",\\n      \\\"    \\\",\\n      \\\"    // cout << \\\\\\\"{\\\\\\\" << endl;\\\",\\n      \\\"    // for (int i = 1970; i <= 2037; i++) {\\\",\\n      \\\"    //     cout << \\\\\\\"{\\\\\\\";\\\",\\n      \\\"    //     cout << i << \\\\\\\", \\\\\\\" << solve(i) << \\\\\\\"},\\\\\\\" << endl;\\\",\\n      \\\"        \\\",\\n      \\\"    // }\\\",\\n      \\\"    // cout << \\\\\\\"}\\\\\\\" << endl;\\\",\\n      \\\"    \\\",\\n      \\\"    int y; cin >> y;\\\",\\n      \\\"    cout << solve(y);\\\",\\n      \\\"\\\",\\n      \\\"    // int wd = getDayOfWeek(21, 10, 2024);\\\",\\n      \\\"    // cout << weekDayName[wd] << endl;\\\",\\n      \\\"\\\",\\n      \\\"    // printYearCal(2023);\\\",\\n      \\\"    \\\",\\n      \\\"    return 0;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"calander function\\\"\\n  },\\n  \\\"BFS\\\": {\\n    \\\"prefix\\\": \\\"bfs\\\",\\n    \\\"body\\\": [\\n      \\\"// BFS\\\",\\n      \\\"const int N = 2e5+25;\\\",\\n      \\\"vector<int> g[N];\\\",\\n      \\\"vector<bool> vis;\\\",\\n      \\\"\\\",\\n      \\\"void clear_graph(int n) {\\\",\\n      \\\"    for (auto& v : g) v.clear();\\\",\\n      \\\"    vis.assign(n, false);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void bfs(int vertex) {\\\",\\n      \\\"    queue<int> q;\\\",\\n      \\\"    q.push(vertex);\\\",\\n      \\\"    vis[vertex] = true;\\\",\\n      \\\"\\\",\\n      \\\"    while (!q.empty()) {\\\",\\n      \\\"        int v = q.front();\\\",\\n      \\\"        q.pop();\\\",\\n      \\\"\\\",\\n      \\\"        for (auto& child : g[v]) {\\\",\\n      \\\"            if (!vis[child]) {\\\",\\n      \\\"                q.push(child);\\\",\\n      \\\"                vis[child] = true;\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"BFS\\\"\\n  },\\n  \\\"modular inverse\\\": {\\n    \\\"prefix\\\": \\\"modular inverse\\\",\\n    \\\"body\\\": [\\n      \\\"const ll m = (ll)1e9+7;\\\",\\n      \\\"\\\",\\n      \\\"ll binpow(ll a, ll b) { // log b\\\",\\n      \\\"    a %= m;\\\",\\n      \\\"    ll res = 1;\\\",\\n      \\\"    while (b > 0) {\\\",\\n      \\\"        if (b & 1)\\\",\\n      \\\"            res = res * a % m;\\\",\\n      \\\"        a = a * a % m;\\\",\\n      \\\"        b >>= 1;\\\",\\n      \\\"    }\\\",\\n      \\\"    return res;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"\\\",\\n      \\\"ll mod_inv(ll a) { return binpow(a, m-2); } // 1 / a\\\",\\n      \\\"vector<ll> invOf = {0, mod_inv(1), mod_inv(2)};\\\"\\n    ],\\n    \\\"description\\\": \\\"Calculate modular inverse in log(m)\\\"\\n  },\\n  \\\"Binary Exponensiation\\\": {\\n    \\\"prefix\\\": \\\"bin exponenciation bin expo\\\",\\n    \\\"body\\\": [\\n      \\\"ll binpow(ll a, ll b, ll m) { // log b\\\",\\n      \\\"    a %= m;\\\",\\n      \\\"    ll res = 1;\\\",\\n      \\\"    while (b > 0) {\\\",\\n      \\\"        if (b & 1)\\\",\\n      \\\"            res = res * a % m;\\\",\\n      \\\"        a = a * a % m;\\\",\\n      \\\"        b >>= 1;\\\",\\n      \\\"    }\\\",\\n      \\\"    return res;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"Time complexity: log(b)\\\"\\n  },\\n  \\\"Topological Sort (on DAG using DFS)\\\": {\\n    \\\"prefix\\\": \\\"top sort topological sort\\\",\\n    \\\"body\\\": [\\n      \\\"// Topological sort in DAG (using DFS)\\\",\\n      \\\"#define clear_graph(n) for(int i=0;i<=n;i++){g[i].clear(),vis[i]=false;} path.clear(); nodes = set<int>();\\\",\\n      \\\"const int N = 1e5+10;\\\",\\n      \\\"vector<int> g[N];\\\",\\n      \\\"bool vis[N];\\\",\\n      \\\"\\\",\\n      \\\"deque<int> path; // path in assending order\\\",\\n      \\\"set<int> nodes; // all distinct nodes\\\",\\n      \\\"\\\",\\n      \\\"void dfs(int vertex){\\\",\\n      \\\"    vis[vertex] = true;\\\",\\n      \\\"\\\",\\n      \\\"    for (int child : g[vertex]){\\\",\\n      \\\"        if(!vis[child]) {\\\",\\n      \\\"            dfs(child);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    path.push_front(vertex);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"void TopSort() {\\\",\\n      \\\"    // run dfs from each node\\\",\\n      \\\"    for (auto& i : nodes) {\\\",\\n      \\\"        if (!vis[i]) {\\\",\\n      \\\"            dfs(i);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// print(path);\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"Topological Sort (on DAG using DFS)\\\"\\n  },\\n  \\\"Topological sort (with bfs on DAG) aka Kahn's algorithm\\\": {\\n    \\\"prefix\\\": \\\"topo sort topological sort bfs\\\",\\n    \\\"body\\\": [\\n      \\\"// Topological sort in DAG (using modified BFS)\\\",\\n      \\\"// aka Kahn's algorithm\\\",\\n      \\\"#define clear_graph(n) for(int i=0;i<=n;i++){g[i].clear();} nodes = set<int>();\\\",\\n      \\\"const int N = 1e5+10;\\\",\\n      \\\"vector<int> g[N];\\\",\\n      \\\"\\\",\\n      \\\"set<int> nodes; // all distinct nodes\\\",\\n      \\\"\\\",\\n      \\\"vector<int> topSort() {\\\",\\n      \\\"    vector<int> path;\\\",\\n      \\\"\\\",\\n      \\\"    // calculate initial indegree for all nodes\\\",\\n      \\\"    vector<int> indegree(N, 0);\\\",\\n      \\\"    for (auto& x : nodes) {\\\",\\n      \\\"        for (auto& y : g[x]) {\\\",\\n      \\\"            indegree[y]++;\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // gather all the nodes having 0 indegree\\\",\\n      \\\"    queue<int> q;\\\",\\n      \\\"    for (auto& x : nodes) {\\\",\\n      \\\"        if (indegree[x] == 0) {\\\",\\n      \\\"            q.push(x);\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    while (!q.empty()) {\\\",\\n      \\\"        int v = q.front();\\\",\\n      \\\"        q.pop();\\\",\\n      \\\"        path.push_back(v);\\\",\\n      \\\"\\\",\\n      \\\"        // node in path \\\",\\n      \\\"        // so remove it fron indegree\\\",\\n      \\\"        for (auto& x : g[v]) {\\\",\\n      \\\"            indegree[x]--;\\\",\\n      \\\"            if (indegree[x] == 0) {\\\",\\n      \\\"                q.push(x);\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    return path;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// print(path);\\\"\\n    ],\\n    \\\"description\\\": \\\"Topological sort (with bfs on DAG) aka Kahn's algorithm\\\"\\n  },\\n  \\\"Rabin-Karp Algorithm\\\": {\\n    \\\"prefix\\\": \\\"rabin karp string matching\\\",\\n    \\\"body\\\": [\\n      \\\"// Rabin-Karp algorithm for string matching\\\",\\n      \\\"// Time Complexity: O(n + m)\\\",\\n      \\\"// s = pattern, t = text\\\",\\n      \\\"// return index of occurrence of s in t\\\",\\n      \\\"vector<int> rabin_karp(string const& s, string const& t) {\\\",\\n      \\\"    const int p = 31; \\\",\\n      \\\"    const int m = 1e9 + 9;\\\",\\n      \\\"    int S = s.size(), T = t.size();\\\",\\n      \\\"\\\",\\n      \\\"    vector<long long> p_pow(max(S, T)); \\\",\\n      \\\"    p_pow[0] = 1; \\\",\\n      \\\"    for (int i = 1; i < (int)p_pow.size(); i++) \\\",\\n      \\\"        p_pow[i] = (p_pow[i-1] * p) % m;\\\",\\n      \\\"\\\",\\n      \\\"    vector<long long> h(T + 1, 0); \\\",\\n      \\\"    for (int i = 0; i < T; i++)\\\",\\n      \\\"        h[i+1] = (h[i] + (t[i] - 'a' + 1) * p_pow[i]) % m; \\\",\\n      \\\"    long long h_s = 0; \\\",\\n      \\\"    for (int i = 0; i < S; i++) \\\",\\n      \\\"        h_s = (h_s + (s[i] - 'a' + 1) * p_pow[i]) % m; \\\",\\n      \\\"\\\",\\n      \\\"    vector<int> occurrences;\\\",\\n      \\\"    for (int i = 0; i + S - 1 < T; i++) {\\\",\\n      \\\"        long long cur_h = (h[i+S] + m - h[i]) % m;\\\",\\n      \\\"        if (cur_h == h_s * p_pow[i] % m)\\\",\\n      \\\"            occurrences.push_back(i);\\\",\\n      \\\"    }\\\",\\n      \\\"    return occurrences;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"Suffix Array & LCP\\\": {\\n    \\\"prefix\\\": \\\"suffix array lcp\\\",\\n    \\\"body\\\": [\\n      \\\"// #pragma once\\\",\\n      \\\"struct SuffixArray {\\\",\\n      \\\"    vector<int> sa, lcp;\\\",\\n      \\\"\\\",\\n      \\\"    SuffixArray(string& s, int lim = 256) {\\\",\\n      \\\"        int n = s.size() + 1, k = 0, a, b;\\\",\\n      \\\"        vector<int> x(s.begin(), s.end()), y(n), ws(max(n, lim));\\\",\\n      \\\"        x.push_back(0), sa = lcp = y;\\\",\\n      \\\"        iota(sa.begin(), sa.end(), 0);\\\",\\n      \\\"\\\",\\n      \\\"        // Build suffix array using doubling approach\\\",\\n      \\\"        for (int j = 0, p = 0; p < n; j = max(1, j * 2), lim = p) {\\\",\\n      \\\"            p = j;\\\",\\n      \\\"            iota(y.begin(), y.end(), n - j);  // Initialize y with indices from n-j to n-1\\\",\\n      \\\"            for (int i = 0; i < n; i++) if (sa[i] >= j) y[p++] = sa[i] - j;\\\",\\n      \\\"            fill(ws.begin(), ws.end(), 0);  // Reset counting array\\\",\\n      \\\"            for (int i = 0; i < n; i++) ws[x[i]]++;  // Count occurrences of ranks\\\",\\n      \\\"            for (int i = 1; i < lim; i++) ws[i] += ws[i - 1];  // Convert counts to positions\\\",\\n      \\\"            for (int i = n; i--;) sa[--ws[x[y[i]]]] = y[i];  // Sorting suffixes based on 1st part\\\",\\n      \\\"            swap(x, y);\\\",\\n      \\\"            p = 1, x[sa[0]] = 0;\\\",\\n      \\\"            for (int i = 1; i < n; i++) {\\\",\\n      \\\"                a = sa[i - 1], b = sa[i];\\\",\\n      \\\"                x[b] = (y[a] == y[b] && y[a + j] == y[b + j]) ? p - 1 : p++;  // Compare suffixes\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"\\\",\\n      \\\"        // Compute LCP array\\\",\\n      \\\"        for (int i = 0, j; i < n - 1; lcp[x[i++]] = k)\\\",\\n      \\\"            for (k && k--, j = sa[x[i] - 1]; s[i + k] == s[j + k]; k++);\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"void printSA(SuffixArray& sufa, string& s) {\\\",\\n      \\\"    auto& lcp = sufa.lcp, sa = sufa.sa;\\\",\\n      \\\"    for (int i = 1; i <= s.size(); i++)\\\",\\n      \\\"        cout << lcp[i] << ' ' << sa[i] << ' ' << s.substr(sa[i]) << endl;\\\",\\n      \\\"    cout << endl;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// // Create a SuffixArray object\\\",\\n      \\\"// SuffixArray sufa(s);\\\",\\n      \\\"// sufa.sa; // Suffix array 1 based\\\",\\n      \\\"// sufa.lcp; // LCP array 1 based\\\",\\n      \\\"// printSA(sufa, s); // prints SA, LCP, and substrings\\\"\\n    ],\\n    \\\"description\\\": \\\"Calculating Suffix Array and LCP in n * [log(N)]^2 time.\\\"\\n  },\\n  \\\"Sparse Table\\\": {\\n    \\\"prefix\\\": \\\"sparse table\\\",\\n    \\\"body\\\": [\\n      \\\"template<class T>\\\",\\n      \\\"struct SparseTable {\\\",\\n      \\\"    vector<vector<T>> jmp;\\\",\\n      \\\"\\\",\\n      \\\"    SparseTable(const vector<T>& V) {\\\",\\n      \\\"        int n = V.size();\\\",\\n      \\\"        int log = 32 - __builtin_clz(n); // Maximum depth\\\",\\n      \\\"        jmp.assign(log, V);\\\",\\n      \\\"\\\",\\n      \\\"        for (int k = 1, pw = 1; pw * 2 <= n; ++k, pw *= 2) {\\\",\\n      \\\"            for (int i = 0; i + pw * 2 <= n; ++i) {\\\",\\n      \\\"                jmp[k][i] = min(jmp[k - 1][i], jmp[k - 1][i + pw]);\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    T query(int a, int b) {\\\",\\n      \\\"        assert(a < b);\\\",\\n      \\\"        int dep = 31 - __builtin_clz(b - a); // log2(b - a)\\\",\\n      \\\"        return min(jmp[dep][a], jmp[dep][b - (1 << dep)]);\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"// SparseTable<int> table(v);\\\",\\n      \\\"// table.query(a, b); // [a, b) // index 0 based\\\"\\n    ],\\n    \\\"description\\\": \\\"O(n log n) preprocessing, O(1) for query\\\"\\n  },\\n  \\\"Bitset\\\": {\\n    \\\"prefix\\\": \\\"bitset\\\",\\n    \\\"body\\\": [\\n      \\\"    // bitset\\\",\\n      \\\"    bitset<64> a, b(value), c(\\\\\\\"1011\\\\\\\");\\\",\\n      \\\"\\\",\\n      \\\"    b.test(i); b[i]; // test i'th bit\\\",\\n      \\\"\\\",\\n      \\\"    // works on i'th bit or all\\\",\\n      \\\"    b.set(i); b.set(); \\\",\\n      \\\"    b.reset(i); b.reset();\\\",\\n      \\\"    b.flip(i);b.flip();\\\",\\n      \\\"    b.count(); // counts set bits\\\",\\n      \\\"\\\",\\n      \\\"    b.to_string();\\\",\\n      \\\"    b.to_ulong();b.to_ullong();\\\"\\n    ],\\n    \\\"description\\\": \\\"Bitset and Operations\\\"\\n  },\\n  \\\"Sqrt Decomposition\\\": {\\n    \\\"prefix\\\": \\\"sqrt decomposition\\\",\\n    \\\"body\\\": [\\n      \\\"// Sqrt Decomposition\\\",\\n      \\\"struct SqrtDecom {\\\",\\n      \\\"int block_size;\\\",\\n      \\\"vector<int> nums;\\\",\\n      \\\"vector<long long> blocks;\\\",\\n      \\\"SqrtDecom(int sqrtn, vector<int> &arr) : block_size(sqrtn), blocks(sqrtn, 0) {\\\",\\n      \\\"    nums = arr;\\\",\\n      \\\"    for (int i = 0; i < nums.size(); i++) { blocks[i / block_size] += nums[i]; }\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"/** O(1) update to set nums[i] to v */\\\",\\n      \\\"void update(int i, int v) {\\\",\\n      \\\"    blocks[i / block_size] -= nums[i];\\\",\\n      \\\"    nums[i] = v;\\\",\\n      \\\"    blocks[i / block_size] += nums[i];\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"/** O(sqrt(n)) query for sum of [0, r) */\\\",\\n      \\\"long long query(int r) {\\\",\\n      \\\"    long long res = 0;\\\",\\n      \\\"    for (int i = 0; i < r / block_size; i++) { res += blocks[i]; }\\\",\\n      \\\"    for (int i = (r / block_size) * block_size; i < r; i++) { res += nums[i]; }\\\",\\n      \\\"    return res;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"/** O(sqrt(n)) query for sum of [l, r) */\\\",\\n      \\\"long long query(int l, int r) { return query(r) - query(l - 1); }\\\",\\n      \\\"};\\\",\\n      \\\"// SqrtDecomp sq((int)ceil(sqrt(n)), v); // O(n)\\\",\\n      \\\"// sq.query(l, r); // O( sqrt(n) )\\\",\\n      \\\"// sq.update(i, v); // O(1)\\\"\\n    ],\\n    \\\"description\\\": \\\"Sqrt Decomposition\\\"\\n  },\\n  \\\"Mo's Algo\\\": {\\n    \\\"prefix\\\": \\\"mo algo moo\\\",\\n    \\\"body\\\": [\\n      \\\"// pbds set // more like a indexed set\\\",\\n      \\\"#include <ext/pb_ds/assoc_container.hpp> \\\",\\n      \\\"#include <ext/pb_ds/tree_policy.hpp>\\\",\\n      \\\"using namespace __gnu_pbds;\\\",\\n      \\\"typedef tree<int, null_type, less<int>,\\\",\\n      \\\"rb_tree_tag,tree_order_statistics_node_update> pbds;\\\",\\n      \\\"\\\",\\n      \\\"void getMoAnswer(vector<int>& v, vector<array<int, 5>>& queries, vector<int>& ans) {\\\",\\n      \\\"    pbds oset; // ordered set\\\",\\n      \\\"    auto add = [&](int x) -> void { oset.insert(v[x]); };\\\",\\n      \\\"    auto remove = [&](int x) -> void { oset.erase(v[x]); };\\\",\\n      \\\"    auto get = [&](int k) -> int { return *oset.find_by_order(k-1); };\\\",\\n      \\\"\\\",\\n      \\\"    sort(all(queries));\\\",\\n      \\\"    int left = 0, right = -1;\\\",\\n      \\\"    for (auto& [b, r, l, idx, k] : queries) {\\\",\\n      \\\"        while(right < r) add(++right);  while(right > r) remove(right--);\\\",\\n      \\\"        while(left < l) remove(left++); while(left > l) add(--left);\\\",\\n      \\\"        ans[idx] = get(k);\\\",\\n      \\\"    }\\\",\\n      \\\"}\\\",\\n      \\\"// v = main array, // N = v.size()\\\",\\n      \\\"queries.push_back({l/sqrtN, r, l, idx, k}); // for each query\\\",\\n      \\\"// sort quiries according to -> starting block, and then r wise sort\\\",\\n      \\\"// gives k'th smallest number's index in [l, r) range\\\"\\n    ],\\n    \\\"description\\\": \\\"Mo's Algorithm\\\"\\n  },\\n  \\\"Trie\\\": {\\n    \\\"prefix\\\": \\\"trie\\\",\\n    \\\"body\\\": [\\n      \\\"// Trie\\\",\\n      \\\"struct Node {\\\",\\n      \\\"    Node *links[26];\\\",\\n      \\\"    int cp = 0, cw = 0;\\\",\\n      \\\"\\\",\\n      \\\"    bool containsRef(char c) { return links[c - 'a'] != NULL;}\\\",\\n      \\\"    void putRef(char c, Node *node) { links[c - 'a'] = node; }\\\",\\n      \\\"    Node* getRef(char c) { return links[c - 'a']; }\\\",\\n      \\\"    \\\",\\n      \\\"    void incPrefix() { cp++; }\\\",\\n      \\\"    void decPrefix() { cp--; }\\\",\\n      \\\"    int countPrefixes() { return cp; }\\\",\\n      \\\"\\\",\\n      \\\"    void incWord() { cw++; }\\\",\\n      \\\"    void decWord() { cw--; }\\\",\\n      \\\"    int countWords() { return cw; }\\\",\\n      \\\"    \\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"struct Trie {\\\",\\n      \\\"    Node *root;\\\",\\n      \\\"    Trie() { root = new Node(); }\\\",\\n      \\\"                                                                                                                                            \\\",\\n      \\\"    // O( len(word) )\\\",\\n      \\\"    void insert(string& word) {\\\",\\n      \\\"        Node *node = root;\\\",\\n      \\\"        for (auto& c : word) {\\\",\\n      \\\"            if (!node->containsRef(c)) {\\\",\\n      \\\"                node->putRef(c, new Node());\\\",\\n      \\\"            }\\\",\\n      \\\"            node = node->getRef(c);\\\",\\n      \\\"            node->incPrefix();\\\",\\n      \\\"        }\\\",\\n      \\\"        node->incWord();\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // O( len(word) )\\\",\\n      \\\"    void remove(string& word) {\\\",\\n      \\\"        Node *node = root;\\\",\\n      \\\"        for (auto& c : word) {\\\",\\n      \\\"            if (!node->containsRef(c)) return;\\\",\\n      \\\"            node = node->getRef(c);\\\",\\n      \\\"            node->decPrefix();\\\",\\n      \\\"        }\\\",\\n      \\\"        node->decWord();\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // O( len(word) )\\\",\\n      \\\"    int countWordsEqualTo(string& word) {\\\",\\n      \\\"        Node *node = root;\\\",\\n      \\\"        for (auto& c : word) {\\\",\\n      \\\"            if (!node->containsRef(c)) return 0;\\\",\\n      \\\"            node = node->getRef(c);\\\",\\n      \\\"        }\\\",\\n      \\\"        return node->countWords();\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    // O( len(word) )\\\",\\n      \\\"    int countWordsStartingWith(string& prefix) {\\\",\\n      \\\"        Node *node = root;\\\",\\n      \\\"        for (auto& c : prefix) {\\\",\\n      \\\"            if (!node->containsRef(c)) return 0;\\\",\\n      \\\"            node = node->getRef(c);\\\",\\n      \\\"        }\\\",\\n      \\\"        return node->countPrefixes();\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"// Trie trie;\\\"\\n    ],\\n    \\\"description\\\": \\\"Each operation O( len(word) )\\\"\\n  },\\n  \\\"Wavelet Tree\\\": {\\n    \\\"prefix\\\": \\\"wavelet tree\\\",\\n    \\\"body\\\": [\\n      \\\"// Wavelet Tree\\\",\\n      \\\"const int MAXN = (int)3e5 + 9;\\\",\\n      \\\"const int MAXV = (int)1e9 + 9; // maximum value of any element in array\\\",\\n      \\\"// array values can be negative too, use appropriate minimum and maximum value\\\",\\n      \\\"struct wavelet_tree {\\\",\\n      \\\"    int lo, hi;\\\",\\n      \\\"    wavelet_tree *l, *r;\\\",\\n      \\\"    int *b, *c, bsz, csz; // c holds the prefix sum of elements\\\",\\n      \\\"\\\",\\n      \\\"    wavelet_tree() {\\\",\\n      \\\"        lo = 1; hi = 1;\\\",\\n      \\\"        bsz = csz = 0;\\\",\\n      \\\"        l = r = NULL;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    void init(int *from, int *to, int x, int y) {\\\",\\n      \\\"        lo = x, hi = y;\\\",\\n      \\\"        if (from >= to) return;\\\",\\n      \\\"        int mid = (lo + hi) >> 1;\\\",\\n      \\\"        auto f = [mid](int x) { return x <= mid; };\\\",\\n      \\\"        b = (int *)malloc((to - from + 2) * sizeof(int));\\\",\\n      \\\"        bsz = 0; b[bsz++] = 0;\\\",\\n      \\\"        c = (int *)malloc((to - from + 2) * sizeof(int));\\\",\\n      \\\"        csz = 0; c[csz++] = 0;\\\",\\n      \\\"        for (auto it = from; it != to; it++) {\\\",\\n      \\\"            b[bsz] = (b[bsz - 1] + f(*it)); bsz++;\\\",\\n      \\\"            c[csz] = (c[csz - 1] + (*it)); csz++;\\\",\\n      \\\"        }\\\",\\n      \\\"        if (hi == lo) return;\\\",\\n      \\\"        auto pivot = stable_partition(from, to, f);\\\",\\n      \\\"        l = new wavelet_tree();\\\",\\n      \\\"        l->init(from, pivot, lo, mid);\\\",\\n      \\\"        r = new wavelet_tree();\\\",\\n      \\\"        r->init(pivot, to, mid + 1, hi);\\\",\\n      \\\"    }\\\",\\n      \\\"    // kth smallest element in [l, r]\\\",\\n      \\\"    int kth(int l, int r, int k) {\\\",\\n      \\\"        if (l > r) return 0;\\\",\\n      \\\"        if (lo == hi) return lo;\\\",\\n      \\\"        int inLeft = b[r] - b[l - 1], lb = b[l - 1], rb = b[r];\\\",\\n      \\\"        if (k <= inLeft) return this->l->kth(lb + 1, rb, k);\\\",\\n      \\\"        return this->r->kth(l - lb, r - rb, k - inLeft);\\\",\\n      \\\"    }\\\",\\n      \\\"    // count of numbers in [l, r] Less than or equal to k\\\",\\n      \\\"    int LTE(int l, int r, int k) {\\\",\\n      \\\"        if (l > r || k < lo)\\\",\\n      \\\"            return 0;\\\",\\n      \\\"        if (hi <= k)\\\",\\n      \\\"            return r - l + 1;\\\",\\n      \\\"        int lb = b[l - 1], rb = b[r];\\\",\\n      \\\"        return this->l->LTE(lb + 1, rb, k) + this->r->LTE(l - lb, r - rb, k);\\\",\\n      \\\"    }\\\",\\n      \\\"    // count of numbers in [l, r] equal to k\\\",\\n      \\\"    int count(int l, int r, int k) {\\\",\\n      \\\"        if (l > r || k < lo || k > hi) return 0;\\\",\\n      \\\"        if (lo == hi) return r - l + 1;\\\",\\n      \\\"        int lb = b[l - 1], rb = b[r];\\\",\\n      \\\"        int mid = (lo + hi) >> 1;\\\",\\n      \\\"        if (k <= mid) return this->l->count(lb + 1, rb, k);\\\",\\n      \\\"        return this->r->count(l - lb, r - rb, k);\\\",\\n      \\\"    }\\\",\\n      \\\"    // sum of numbers in [l ,r] less than or equal to k\\\",\\n      \\\"    int sum(int l, int r, int k) {\\\",\\n      \\\"        if (l > r or k < lo) return 0;\\\",\\n      \\\"        if (hi <= k) return c[r] - c[l - 1];\\\",\\n      \\\"        int lb = b[l - 1], rb = b[r];\\\",\\n      \\\"        return this->l->sum(lb + 1, rb, k) + this->r->sum(l - lb, r - rb, k);\\\",\\n      \\\"    }\\\",\\n      \\\"    ~wavelet_tree() { delete l; delete r; }\\\",\\n      \\\"};\\\",\\n      \\\"int a[MAXN]; // declare\\\",\\n      \\\"wavelet_tree t;\\\",\\n      \\\"\\\",\\n      \\\"// 1 based -> index, l, r\\\",\\n      \\\"// int n; cin >> n; // size of array\\\",\\n      \\\"// for (int i=1; i<=n; i++)cin>>a[i]; // array input\\\",\\n      \\\"\\\",\\n      \\\"// O (n log ( max_ele(array) )), array a changes after init\\\",\\n      \\\"// t.init(a + 1, a + n + 1, -MAXV, MAXV); \\\",\\n      \\\"\\\",\\n      \\\"//     [l, r] range, below O( max_ele(array)\\\",\\n      \\\"// t.kth(l, r, k); // kth smallest element\\\",\\n      \\\"// t.LTE(l, r, k); // count values <= k\\\",\\n      \\\"// t.count(l, r, k); // count values == k\\\",\\n      \\\"// t.sum(l, r, k); // sum of numbers <= k\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"Trie for Bits\\\": {\\n    \\\"prefix\\\": \\\"Trie for Bits\\\",\\n    \\\"body\\\": [\\n      \\\"const int N = 3e5 + 9;\\\",\\n      \\\"\\\",\\n      \\\"struct Trie {\\\",\\n      \\\"  static const int B = 31;\\\",\\n      \\\"  struct node {\\\",\\n      \\\"    node* nxt[2];\\\",\\n      \\\"    int sz;\\\",\\n      \\\"    node() {\\\",\\n      \\\"      nxt[0] = nxt[1] = NULL;\\\",\\n      \\\"      sz = 0;\\\",\\n      \\\"    }\\\",\\n      \\\"  }*root;\\\",\\n      \\\"  Trie() {\\\",\\n      \\\"    root = new node();\\\",\\n      \\\"  }\\\",\\n      \\\"  void insert(int val) {\\\",\\n      \\\"    node* cur = root;\\\",\\n      \\\"    cur -> sz++;\\\",\\n      \\\"    for (int i = B - 1; i >= 0; i--) {\\\",\\n      \\\"      int b = val >> i & 1;\\\",\\n      \\\"      if (cur -> nxt[b] == NULL) cur -> nxt[b] = new node();\\\",\\n      \\\"      cur = cur -> nxt[b];\\\",\\n      \\\"      cur -> sz++;\\\",\\n      \\\"    }\\\",\\n      \\\"  }\\\",\\n      \\\"  int query(int x, int k) { // number of values s.t. val ^ x < k\\\",\\n      \\\"    node* cur = root;\\\",\\n      \\\"    int ans = 0;\\\",\\n      \\\"    for (int i = B - 1; i >= 0; i--) {\\\",\\n      \\\"      if (cur == NULL) break;\\\",\\n      \\\"      int b1 = x >> i & 1, b2 = k >> i & 1;\\\",\\n      \\\"      if (b2 == 1) {\\\",\\n      \\\"        if (cur -> nxt[b1]) ans += cur -> nxt[b1] -> sz;\\\",\\n      \\\"        cur = cur -> nxt[!b1];\\\",\\n      \\\"      } else cur = cur -> nxt[b1];\\\",\\n      \\\"    }\\\",\\n      \\\"    return ans;\\\",\\n      \\\"  }\\\",\\n      \\\"  int get_max(int x) { // returns maximum of val ^ x\\\",\\n      \\\"    node* cur = root;\\\",\\n      \\\"    int ans = 0;\\\",\\n      \\\"    for (int i = B - 1; i >= 0; i--) {\\\",\\n      \\\"      int k = x >> i & 1;\\\",\\n      \\\"      if (cur -> nxt[!k]) cur = cur -> nxt[!k], ans <<= 1, ans++;\\\",\\n      \\\"      else cur = cur -> nxt[k], ans <<= 1;\\\",\\n      \\\"    }\\\",\\n      \\\"    return ans;\\\",\\n      \\\"  }\\\",\\n      \\\"  int get_min(int x) { // returns minimum of val ^ x\\\",\\n      \\\"    node* cur = root;\\\",\\n      \\\"    int ans = 0;\\\",\\n      \\\"    for (int i = B - 1; i >= 0; i--) {\\\",\\n      \\\"      int k = x >> i & 1;\\\",\\n      \\\"      if (cur -> nxt[k]) cur = cur -> nxt[k], ans <<= 1;\\\",\\n      \\\"      else cur = cur -> nxt[!k], ans <<= 1, ans++;\\\",\\n      \\\"    }\\\",\\n      \\\"    return ans;\\\",\\n      \\\"  }\\\",\\n      \\\"  void del(node* cur) {\\\",\\n      \\\"    for (int i = 0; i < 2; i++) if (cur -> nxt[i]) del(cur -> nxt[i]);\\\",\\n      \\\"    delete(cur);\\\",\\n      \\\"  }\\\",\\n      \\\"} t;\\\",\\n      \\\"\\\",\\n      \\\"// t.insert(cur);\\\",\\n      \\\"// t.query(cur, k); count numbers which are (a[i] ^ x < k)\\\",\\n      \\\"// t.get_max(int x); //  gets max of val ^ x\\\",\\n      \\\"// t.get_min(int x); // gets min of val ^ x\\\",\\n      \\\"\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"Robin Karp\\\": {\\n    \\\"prefix\\\": \\\"rapin karp robin karp rolling hash\\\",\\n    \\\"body\\\": [\\n      \\\"// Rabin-Karp - Returns indices(0 based) of occurances of s in t\\\",\\n      \\\"// Time Complexity: O(n + m) \\\",\\n      \\\"// t = text, s = pattern\\\",\\n      \\\"vector<int> rabin_karp(string const& t, string const& s) {\\\",\\n      \\\"    const int p = 31; \\\",\\n      \\\"    const int m = 1e9 + 9;\\\",\\n      \\\"    int S = s.size(), T = t.size();\\\",\\n      \\\"\\\",\\n      \\\"    vector<ll> p_pow(max(S, T)); \\\",\\n      \\\"    p_pow[0] = 1; \\\",\\n      \\\"    for (int i = 1; i < (int)p_pow.size(); i++) \\\",\\n      \\\"        p_pow[i] = (p_pow[i-1] * p) % m;\\\",\\n      \\\"\\\",\\n      \\\"    vector<ll> h(T + 1, 0); \\\",\\n      \\\"    for (int i = 0; i < T; i++)\\\",\\n      \\\"        h[i+1] = (h[i] + (t[i] - 'a' + 1) * p_pow[i]) % m; \\\",\\n      \\\"    ll h_s = 0; \\\",\\n      \\\"    for (int i = 0; i < S; i++) \\\",\\n      \\\"        h_s = (h_s + (s[i] - 'a' + 1) * p_pow[i]) % m; \\\",\\n      \\\"\\\",\\n      \\\"    vector<int> occurrences;\\\",\\n      \\\"    for (int i = 0; i + S - 1 < T; i++) {\\\",\\n      \\\"        ll cur_h = (h[i+S] + m - h[i]) % m;\\\",\\n      \\\"        if (cur_h == h_s * p_pow[i] % m)\\\",\\n      \\\"            occurrences.push_back(i);\\\",\\n      \\\"    }\\\",\\n      \\\"    return occurrences;\\\",\\n      \\\"}\\\",\\n      \\\"// vector<int> occ = rabin_karp(text, pattern);\\\"\\n    ],\\n    \\\"description\\\": \\\"Time Complexity O(n + m)\\\"\\n  },\\n  \\\"Aho Corasick\\\": {\\n    \\\"prefix\\\": \\\"aho corasick\\\",\\n    \\\"body\\\": [\\n      \\\"struct AhoCorasick {\\\",\\n      \\\"    enum {alpha = 26, first = 'A'}; // change this!\\\",\\n      \\\"\\\",\\n      \\\"    struct Node {\\\",\\n      \\\"        int back, next[alpha], start = -1, end = -1, nmatches = 0;\\\",\\n      \\\"        Node(int v) { memset(next, v, sizeof(next)); }\\\",\\n      \\\"    };\\\",\\n      \\\"\\\",\\n      \\\"    vector<Node> N;\\\",\\n      \\\"    vector<int> backp;\\\",\\n      \\\"\\\",\\n      \\\"    void insert(string& s, int j) {\\\",\\n      \\\"        assert(!s.empty());\\\",\\n      \\\"        int n = 0;\\\",\\n      \\\"        for (char c : s) {\\\",\\n      \\\"            int& m = N[n].next[c - first];\\\",\\n      \\\"            if (m == -1) { \\\",\\n      \\\"                n = m = static_cast<int>(N.size()); \\\",\\n      \\\"                N.emplace_back(-1); \\\",\\n      \\\"            } else n = m;\\\",\\n      \\\"        }\\\",\\n      \\\"        if (N[n].end == -1) N[n].start = j;\\\",\\n      \\\"        backp.push_back(N[n].end);\\\",\\n      \\\"        N[n].end = j; N[n].nmatches++;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    AhoCorasick(vector<string>& pat) : N(1, -1) {\\\",\\n      \\\"        for (size_t i = 0; i < pat.size(); ++i) \\\",\\n      \\\"            insert(pat[i], static_cast<int>(i));\\\",\\n      \\\"\\\",\\n      \\\"        N[0].back = static_cast<int>(N.size());\\\",\\n      \\\"        N.emplace_back(0);\\\",\\n      \\\"\\\",\\n      \\\"        queue<int> q;\\\",\\n      \\\"        for (q.push(0); !q.empty(); q.pop()) {\\\",\\n      \\\"            int n = q.front(), prev = N[n].back;\\\",\\n      \\\"            for (int i = 0; i < alpha; ++i) {\\\",\\n      \\\"                int &ed = N[n].next[i], y = N[prev].next[i];\\\",\\n      \\\"                if (ed == -1) \\\",\\n      \\\"                    ed = y;\\\",\\n      \\\"                else {\\\",\\n      \\\"                    N[ed].back = y;\\\",\\n      \\\"                    (N[ed].end == -1 ? N[ed].end : backp[N[ed].start])\\\",\\n      \\\"                        = N[y].end;\\\",\\n      \\\"                    N[ed].nmatches += N[y].nmatches;\\\",\\n      \\\"                    q.push(ed);\\\",\\n      \\\"                }\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    vector<int> find(string& word) {\\\",\\n      \\\"        int n = 0;\\\",\\n      \\\"        vector<int> res;\\\",\\n      \\\"        for (char c : word) {\\\",\\n      \\\"            n = N[n].next[c - first];\\\",\\n      \\\"            res.push_back(N[n].end);\\\",\\n      \\\"        }\\\",\\n      \\\"        return res;\\\",\\n      \\\"    }\\\",\\n      \\\"\\\",\\n      \\\"    vector<vector<int>> findAll(vector<string>& pat, string& word) {\\\",\\n      \\\"        vector<int> r = find(word);\\\",\\n      \\\"        vector<vector<int>> res(word.size());\\\",\\n      \\\"\\\",\\n      \\\"        for (size_t i = 0; i < word.size(); ++i) {\\\",\\n      \\\"            int ind = r[i];\\\",\\n      \\\"            while (ind != -1) {\\\",\\n      \\\"                res[i - static_cast<int>(pat[ind].size()) + 1].push_back(ind);\\\",\\n      \\\"                ind = backp[ind];\\\",\\n      \\\"            }\\\",\\n      \\\"        }\\\",\\n      \\\"        return res;\\\",\\n      \\\"    }\\\",\\n      \\\"};\\\",\\n      \\\"\\\",\\n      \\\"vector<string> patterns;\\\",\\n      \\\"AhoCorasick ac(patterns); // O (total length of all patterns)\\\",\\n      \\\"ac.insert(newPattern, index0basedPostion); // O(len(newPattern))\\\",\\n      \\\"\\\",\\n      \\\"// // Find longest pattern that ends at each position in text\\\",\\n      \\\"// // -1 if no pattern ends there, O(len(text))\\\",\\n      \\\"vector<int> matches = ac.find(text);\\\",\\n      \\\"\\\",\\n      \\\"// // Find all patterns that start at each position text\\\",\\n      \\\"// // Time Complexity: O(word length * number of patterns)\\\",\\n      \\\"vector<vector<int>> allMatches = ac.findAll(patterns, text);\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"z-algorithm\\\": {\\n    \\\"prefix\\\": \\\"z-algorithm\\\",\\n    \\\"body\\\": [\\n      \\\"// Z-algorithm to compute the Z-array\\\",\\n      \\\"vector<int> Z(const string& S) {\\\",\\n      \\\"    int n = S.size(); \\\",\\n      \\\"    vector<int> z(n);\\\",\\n      \\\"    int l = -1, r = -1;\\\",\\n      \\\"    \\\",\\n      \\\"    // Loop to compute the Z-array in linear time\\\",\\n      \\\"    for (int i = 1; i < n; ++i) {\\\",\\n      \\\"        z[i] = (i >= r) ? 0 : min(r - i, z[i - l]);\\\",\\n      \\\"        while (i + z[i] < n && S[i + z[i]] == S[z[i]]) z[i]++;\\\",\\n      \\\"        if (i + z[i] > r) { l = i; r = i + z[i]; }\\\",\\n      \\\"    }\\\",\\n      \\\"    return z;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time complexity of Z function: O(n), where n is the length of string S\\\",\\n      \\\"\\\",\\n      \\\"vector<int> pattern_matching(const string& pattern, const string& text) {\\\",\\n      \\\"    string combined = pattern + \\\\\\\"#\\\\\\\" + text; // Concatenate pattern, delimiter, and text\\\",\\n      \\\"    vector<int> z = Z(combined); // Z-function on combined string\\\",\\n      \\\"    vector<int> occurrences;\\\",\\n      \\\"    int p_len = pattern.size();\\\",\\n      \\\"    \\\",\\n      \\\"    // Loop to find all occurrences of the pattern in the text\\\",\\n      \\\"    for (int i = p_len + 1; i < combined.size(); ++i) {\\\",\\n      \\\"        if (z[i] >= p_len) occurrences.push_back(i - p_len - 1);\\\",\\n      \\\"    }\\\",\\n      \\\"    return occurrences;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time complexity of pattern_matching function:\\\",\\n      \\\"// The Z-function runs in, where p_len is the length of the pattern and t_len is the length of the text.\\\",\\n      \\\"// Iterating through the Z-array to find occurrences takes O(p_len + t_len) time.\\\",\\n      \\\"// Overall time complexity: O(p_len + t_len)\\\",\\n      \\\"vector<int> occ = pattern_matching(pattern, text);\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"Bit String\\\": {\\n    \\\"prefix\\\": \\\"bit string\\\",\\n    \\\"body\\\": [\\n      \\\"// bit string katcl\\\",\\n      \\\"const int MAX = 2e5 + 10;\\\",\\n      \\\"bitset<MAX> mask[26];\\\",\\n      \\\"bitset<MAX> ans;\\\",\\n      \\\"string text;\\\",\\n      \\\"\\\",\\n      \\\"// Time Complexity: O(n)\\\",\\n      \\\"void computeMask() {\\\",\\n      \\\"    for (int i = 0; i < 26; ++i)mask[i].reset();\\\",\\n      \\\"    for (int i = 0; i < text.size(); ++i) mask[text[i] - 'a'].set(i);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time Complexity: O(1)\\\",\\n      \\\"void updateMask(int i, char c) {\\\",\\n      \\\"    mask[text[i] - 'a'].reset(i); text[i] = c;\\\",\\n      \\\"    mask[text[i] - 'a'].set(i);\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time Complexity: O(m * n)\\\",\\n      \\\"int match(string& pattern) {\\\",\\n      \\\"    if (pattern.size() > text.size()) { return 0; }\\\",\\n      \\\"    ans.set();\\\",\\n      \\\"    for (int i = 0; i < pattern.size(); ++i) {\\\",\\n      \\\"        int c = pattern[i] - 'a';\\\",\\n      \\\"        ans &= (mask[c] >> i);\\\",\\n      \\\"    }\\\",\\n      \\\"    return ans.count();\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time Complexity: O(m * n)\\\",\\n      \\\"int matchRange(string& pattern, int l, int r) {\\\",\\n      \\\"    if (r - l + 1 < pattern.size()) { return 0; }\\\",\\n      \\\"    ans.set();\\\",\\n      \\\"    for (int i = 0; i < pattern.size(); ++i)\\\",\\n      \\\"        ans &= (mask[pattern[i] - 'a'] >> i);\\\",\\n      \\\"    return (ans >> l).count() - (ans >> (r - pattern.size() + 2)).count();\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time Complexity: O((m + k) * n)\\\",\\n      \\\"vector<int> pos(string& pattern, int l, int r) {\\\",\\n      \\\"    matchRange(pattern, l, r);\\\",\\n      \\\"    vector<int> positions;\\\",\\n      \\\"    for (int i = ans._Find_next(l - 1); i < r - pattern.size() + 2; i = ans._Find_next(i))\\\",\\n      \\\"        positions.push_back(i);\\\",\\n      \\\"    return positions;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// text = s;\\\",\\n      \\\"// computeMask();\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  },\\n  \\\"KMP\\\": {\\n    \\\"prefix\\\": \\\"kmp knuth morris pratt\\\",\\n    \\\"body\\\": [\\n      \\\"// kmp\\\",\\n      \\\"// Time Complexity: O(n)\\\",\\n      \\\"vector<int> compute_prefix_function(const string& s) {\\\",\\n      \\\"    vector<int> prefix_function(s.size());\\\",\\n      \\\"    for (int i = 1; i < s.size(); i++) {\\\",\\n      \\\"        int g = prefix_function[i - 1];\\\",\\n      \\\"        while (g && s[i] != s[g]) g = prefix_function[g - 1];\\\",\\n      \\\"        prefix_function[i] = g + (s[i] == s[g]);\\\",\\n      \\\"    }\\\",\\n      \\\"    return prefix_function;\\\",\\n      \\\"}\\\",\\n      \\\"\\\",\\n      \\\"// Time Complexity: O(n + m)\\\",\\n      \\\"vector<int> find_string_matches(const string& s, const string& pattern) {\\\",\\n      \\\"    vector<int> prefix_function = compute_prefix_function(pattern + '\\\\\\\\0' + s);\\\",\\n      \\\"    vector<int> result;\\\",\\n      \\\"    for (int i = prefix_function.size() - s.size(); i < prefix_function.size(); i++) {\\\",\\n      \\\"        if (prefix_function[i] == pattern.size()) {\\\",\\n      \\\"            result.push_back(i - 2 * pattern.size());\\\",\\n      \\\"        }\\\",\\n      \\\"    }\\\",\\n      \\\"    return result;\\\",\\n      \\\"}\\\",\\n      \\\"// vector<int> matches = find_string_matches(text, pattern);\\\"\\n    ],\\n    \\\"description\\\": \\\"\\\"\\n  }\\n}\",\"dart.json\":\"{\\n\\t\\\"Width Height Variable\\\": {\\n\\t\\t\\\"prefix\\\": [\\\"size\\\", \\\"device size\\\", \\\"size variables\\\", \\\"width-height\\\", \\\"height-width\\\"],\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"double W = MediaQuery.of(context).size.width;\\\",\\n\\t\\t  \\\"double H = 2.15 * W;\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Width and Height of current device.\\\"\\n\\t},\\n\\t\\\"Theme Variable\\\": {\\n\\t\\t\\\"prefix\\\": [\\\"theme\\\", \\\"theme varibales\\\"],\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"ThemeData theme = Theme.of(context);\\\",\\n\\t\\t  \\\"CustomThemeExtension? themeEx = theme.extension<CustomThemeExtension>();\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Theme variables\\\"\\n\\t},\\n\\t\\\"Basic Theme & Size Variables\\\": {\\n\\t\\t\\\"prefix\\\": [\\\"vars\\\", \\\"basic varibales\\\", \\\"basic theme and size varibales\\\", \\\"combined theme and size varibales\\\"],\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"ThemeData theme = Theme.of(context);\\\",\\n\\t\\t  \\\"CustomThemeExtension? themeEx = theme.extension<CustomThemeExtension>();\\\"\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"double W = MediaQuery.of(context).size.width;\\\",\\n\\t\\t  \\\"double H = 2.15 * W;\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Theme and Size varibales.\\\"\\n\\t},\\n\\t\\\"Fresh App Boiler Plate\\\": {\\n\\t\\t\\\"prefix\\\": \\\"fresh-app-boiler-plate\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t  \\\"import 'package:flutter/material.dart';\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"void main() {\\\",\\n\\t\\t  \\\"  runApp(const MyApp());\\\",\\n\\t\\t  \\\"}\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"class MyApp extends StatelessWidget {\\\",\\n\\t\\t  \\\"  const MyApp({super.key});\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"  @override\\\",\\n\\t\\t  \\\"  Widget build(BuildContext context) {\\\",\\n\\t\\t  \\\"    return MaterialApp(\\\",\\n\\t\\t  \\\"      title: 'Flutter Demo',\\\",\\n\\t\\t  \\\"      theme: ThemeData(\\\",\\n\\t\\t  \\\"        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\\\",\\n\\t\\t  \\\"        useMaterial3: true,\\\",\\n\\t\\t  \\\"      ),\\\",\\n\\t\\t  \\\"      debugShowCheckedModeBanner: false,\\\",\\n\\t\\t  \\\"      home: const MyHomePage(title: 'Flutter Demo Home Page'),\\\",\\n\\t\\t  \\\"    );\\\",\\n\\t\\t  \\\"  }\\\",\\n\\t\\t  \\\"}\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"// Home Page\\\",\\n\\t\\t  \\\"class MyHomePage extends StatefulWidget {\\\",\\n\\t\\t  \\\"  const MyHomePage({super.key, required this.title});\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"  final String title;\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"  @override\\\",\\n\\t\\t  \\\"  State<MyHomePage> createState() => _MyHomePageState();\\\",\\n\\t\\t  \\\"}\\\",\\n\\t\\t  \\\"\\\",\\n\\t\\t  \\\"class _MyHomePageState extends State<MyHomePage> {\\\",\\n\\t\\t  \\\"  @override\\\",\\n\\t\\t  \\\"  Widget build(BuildContext context) {\\\",\\n\\t\\t  \\\"    return Scaffold(\\\",\\n\\t\\t  \\\"      appBar: AppBar(backgroundColor: Colors.blue, title: Text(widget.title)),\\\",\\n\\t\\t  \\\"      body: Center(\\\",\\n\\t\\t  \\\"        child: Container(\\\",\\n\\t\\t  \\\"          width: 100,\\\",\\n\\t\\t  \\\"          height: 100,\\\",\\n\\t\\t  \\\"          color: Colors.red,\\\",\\n\\t\\t  \\\"        ),\\\",\\n\\t\\t  \\\"      ),\\\",\\n\\t\\t  \\\"    );\\\",\\n\\t\\t  \\\"  }\\\",\\n\\t\\t  \\\"}\\\",\\n\\t\\t  \\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Creates a default app with a red rectangle.\\\"\\n\\t  },\\n\\t  \\\"Google Font Snippet\\\": {\\n\\t\\t\\\"prefix\\\": \\\"google font snippet\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"Text($0,\\\",\\n\\t\\t\\t\\\"    style: GoogleFonts.spinnaker(\\\",\\n\\t\\t\\t\\\"      textStyle: const TextStyle(\\\",\\n\\t\\t\\t\\\"        color: Colors.black,\\\",\\n\\t\\t\\t\\\"        fontSize: 37,\\\",\\n\\t\\t\\t\\\"        fontWeight: FontWeight.normal,\\\",\\n\\t\\t\\t\\\"      ),\\\",\\n\\t\\t\\t\\\"    )),\\\"\\n\\t\\t  ],\\n\\t\\t\\\"description\\\": \\\"\\\"\\n\\t  }\\n}\",\"json.json\":\"{\\n\\t// Place your snippets for json here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"python.json\":\"{\\n\\t// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// },\\n\\t\\\"Custom Python Class\\\": {\\n\\t\\t\\\"prefix\\\": \\\"myclass\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"class ${1:Cat}:\\\",\\n\\t\\t\\t\\\"    def __init__(self, ${2:name}, ${3:age}, ${4:species}):\\\",\\n\\t\\t\\t\\\"        self.${2:name} = ${2:name}\\\",\\n\\t\\t\\t\\\"        self.${3:age} = ${3:age}\\\",\\n\\t\\t\\t\\\"        self.${4:species} = ${4:species}\\\",\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\t\\\"    def __str__(self):\\\",\\n\\t\\t\\t\\\"        return f\\\\\\\"no = {self.no}\\\\\\\\ntitle = {self.title}\\\\\\\\nlink = {self.link}\\\\\\\\n\\\\\\\"\\\"\\n\\t\\t],\\n\\t\\t\\\"description\\\": \\\"Custom Python Class\\\"\\n\\t},\\t\\n}\"}}","extensions":"[{\"identifier\":{\"id\":\"academiadosdevs.javafx\",\"uuid\":\"4d50fa65-8676-44df-abcd-468f926cfbe3\"},\"displayName\":\"Project Manager for JavaFX\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"adpyke.codesnap\",\"uuid\":\"8c1fc960-44b1-45e8-89b5-85f982fdaf27\"},\"displayName\":\"CodeSnap\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"afractal.node-essentials\",\"uuid\":\"0679e3a9-5b6f-4762-af78-2ea537dfd218\"},\"displayName\":\"Node Essentials\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"alexisvt.flutter-snippets\",\"uuid\":\"2972da43-20b6-4207-8d1e-9cbc7529bd04\"},\"displayName\":\"Flutter Widget Snippets\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"antfu.browse-lite\",\"uuid\":\"61ce9ab3-f230-47ea-8cdc-2b5eb25f3ae2\"},\"displayName\":\"Browse Lite\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"antfu.vite\",\"uuid\":\"b22eea9f-5a30-43a2-8a59-3d3707869cf8\"},\"displayName\":\"Vite\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"b4ckup.vscode-ts-tex\",\"uuid\":\"58c862dd-0458-4491-a83b-f09201dcf8ed\"},\"displayName\":\"vscode-ts-tex\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"be5invis.vscode-icontheme-nomo-dark\",\"uuid\":\"e0ee11e7-aa20-4e86-a3b9-2cd7d14fed93\"},\"displayName\":\"Nomo Dark Icon Theme\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"bilalekrem.scenebuilderextension\",\"uuid\":\"01e27da8-1968-4220-adde-308f9b27d18d\"},\"displayName\":\"SceneBuilder extension for Visual Studio Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"bradgashler.htmltagwrap\",\"uuid\":\"c16f95f6-9b42-4a24-9bf4-245d4ea54fc5\"},\"applicationScoped\":false},{\"identifier\":{\"id\":\"bradlc.vscode-tailwindcss\",\"uuid\":\"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5\"},\"displayName\":\"Tailwind CSS IntelliSense\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"caolin.java-run\",\"uuid\":\"167f8587-016d-4d2b-91c2-9b10089983f4\"},\"displayName\":\"Java Run\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"christian-kohler.npm-intellisense\",\"uuid\":\"dff6b801-247e-40e9-82e8-8c9b1d19d1b8\"},\"displayName\":\"npm Intellisense\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"christian-kohler.path-intellisense\",\"uuid\":\"a41c1549-4053-44d4-bf30-60fc809b4a86\"},\"displayName\":\"Path Intellisense\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"coolantleak.decimal-incrementor\",\"uuid\":\"e0536cd9-809f-477c-aed3-3b73e805b678\"},\"displayName\":\"Decimal Incrementor \",\"disabled\":true,\"applicationScoped\":false},{\"identifier\":{\"id\":\"dart-code.dart-code\",\"uuid\":\"f57f68ea-9ee8-42b5-9a97-041d3e4278c4\"},\"displayName\":\"Dart\",\"preRelease\":true,\"applicationScoped\":false},{\"identifier\":{\"id\":\"dart-code.flutter\",\"uuid\":\"f6c3ec04-6057-4d9c-b997-69cba07a6158\"},\"displayName\":\"Flutter\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"dbaeumer.vscode-eslint\",\"uuid\":\"583b2b34-2c1e-4634-8c0b-0b82e283ea3a\"},\"displayName\":\"ESLint\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"digitalbrainstem.javascript-ejs-support\",\"uuid\":\"9cd87837-c82a-4817-9b79-1c84775aa158\"},\"displayName\":\"EJS language support\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"divyanshuagrawal.competitive-programming-helper\",\"uuid\":\"28579c42-9973-4b79-9a1e-76431ea4bc1f\"},\"displayName\":\"Competitive Programming Helper (cph)\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"donjayamanne.githistory\",\"uuid\":\"5960f38e-0bbe-4644-8f9c-9c8824e82511\"},\"displayName\":\"Git History\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"dsznajder.es7-react-js-snippets\",\"uuid\":\"19804510-b475-4dae-b0f7-6ca08fd1af0c\"},\"displayName\":\"ES7+ React/Redux/React-Native snippets\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"eamodio.gitlens\",\"uuid\":\"4de763bd-505d-4978-9575-2b7696ecf94e\"},\"displayName\":\"GitLens — Git supercharged\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"editorconfig.editorconfig\",\"uuid\":\"f60a60a6-95ba-42d4-b41c-3d24c1b89588\"},\"displayName\":\"EditorConfig for VS Code\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"esbenp.prettier-vscode\",\"uuid\":\"96fa4707-6983-4489-b7c5-d5ffdfdcce90\"},\"displayName\":\"Prettier - Code formatter\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"felixangelov.bloc\",\"uuid\":\"3cd36144-91f2-487a-a3f0-b13701284c38\"},\"displayName\":\"bloc\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"formulahendry.auto-rename-tag\",\"uuid\":\"6e440e71-8ed9-4f25-bb78-4b13096b8a03\"},\"displayName\":\"Auto Rename Tag\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"formulahendry.code-runner\",\"uuid\":\"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3\"},\"displayName\":\"Code Runner\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"fortran-lang.linter-gfortran\",\"uuid\":\"64379b4d-40cd-415a-8643-b07572d4a243\"},\"displayName\":\"Modern Fortran\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"franneck94.c-cpp-runner\",\"uuid\":\"0f4eac03-b4ec-4a55-bce1-deb41fde32ab\"},\"displayName\":\"C/C++ Runner\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"frhtylcn.pythonsnippets\",\"uuid\":\"0ad8c94b-76b2-4033-b703-18596182bfcc\"},\"displayName\":\"python snippets\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"github.remotehub\",\"uuid\":\"fc7d7e85-2e58-4c1c-97a3-2172ed9a77cd\"},\"displayName\":\"GitHub Repositories\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"github.vscode-pull-request-github\",\"uuid\":\"69ddd764-339a-4ecc-97c1-9c4ece58e36d\"},\"displayName\":\"GitHub Pull Requests\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"golang.go\",\"uuid\":\"d6f6cfea-4b6f-41f4-b571-6ad2ab7918da\"},\"displayName\":\"Go\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"grapecity.gc-excelviewer\",\"uuid\":\"8bb12ae3-73f8-40cf-86b7-4bd5729c6238\"},\"displayName\":\"Excel Viewer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"james-yu.latex-workshop\",\"uuid\":\"61d03280-3919-4dd1-bce1-178ca21fdeaf\"},\"displayName\":\"LaTeX Workshop\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"kevinrose.vsc-python-indent\",\"uuid\":\"f3cbfb84-b1e1-40ff-b70f-877253461260\"},\"displayName\":\"Python Indent\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"leizongmin.node-module-intellisense\",\"uuid\":\"1bb92b2c-526c-4bfd-bb38-5bae1b278c89\"},\"displayName\":\"Node.js Modules Intellisense\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"lixquid.calculator\",\"uuid\":\"244caab0-8ded-4b4b-9d9d-7315964e7aed\"},\"displayName\":\"Calculator\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"llvm-vs-code-extensions.lldb-dap\",\"uuid\":\"8f0e51b3-cc69-4cf9-abab-97289d29d6de\"},\"displayName\":\"LLDB DAP\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"llvm-vs-code-extensions.vscode-mlir\",\"uuid\":\"223e0adc-e5c8-4025-bfb8-b7a1ff223705\"},\"displayName\":\"MLIR\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"marcelovelasquez.flutter-tree\",\"uuid\":\"f0599c22-6504-4e2a-972d-06911ec8429e\"},\"displayName\":\"Flutter Tree\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mathiasfrohlich.kotlin\",\"uuid\":\"d36bad53-910d-481a-a7ee-8992450665f6\"},\"displayName\":\"Kotlin Language\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mccarter.start-git-bash\",\"uuid\":\"3382cdf2-af9d-4b7d-9008-3c22969d6a8c\"},\"displayName\":\"Start git-bash\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mechatroner.rainbow-csv\",\"uuid\":\"3792588c-3d35-442d-91ea-fe6a755e8155\"},\"displayName\":\"Rainbow CSV\",\"disabled\":true,\"applicationScoped\":false},{\"identifier\":{\"id\":\"mhutchie.git-graph\",\"uuid\":\"438221f8-1107-4ccd-a6fe-f3b7fe0856b7\"},\"displayName\":\"Git Graph\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mikestead.dotenv\",\"uuid\":\"532533c9-a894-4a58-9eee-bbfbe7c06f71\"},\"displayName\":\"DotENV\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mohsen1.prettify-json\",\"uuid\":\"67e66172-30c7-4478-8f5d-6eac4ae755dc\"},\"displayName\":\"Prettify JSON\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-azuretools.vscode-docker\",\"uuid\":\"0479fc1c-3d67-49f9-b087-fb9069afe48f\"},\"displayName\":\"Docker\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.debugpy\",\"uuid\":\"4bd5d2c9-9d65-401a-b0b2-7498d9f17615\"},\"displayName\":\"Python Debugger\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.isort\",\"uuid\":\"4ad0ce32-ff3f-49f0-83b5-93e5dc00cfff\"},\"displayName\":\"isort\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.python\",\"uuid\":\"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5\"},\"displayName\":\"Python\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-python.vscode-pylance\",\"uuid\":\"364d2426-116a-433a-a5d8-a5098dc3afbd\"},\"displayName\":\"Pylance\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-toolsai.jupyter\",\"uuid\":\"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8\"},\"displayName\":\"Jupyter\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-toolsai.jupyter-keymap\",\"uuid\":\"9f6dc8db-620c-4844-b8c5-e74914f1be27\"},\"displayName\":\"Jupyter Keymap\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-toolsai.jupyter-renderers\",\"uuid\":\"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf\"},\"displayName\":\"Jupyter Notebook Renderers\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-toolsai.vscode-jupyter-cell-tags\",\"uuid\":\"ab4fb32a-befb-4102-adf9-1652d0cd6a5e\"},\"displayName\":\"Jupyter Cell Tags\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-toolsai.vscode-jupyter-slideshow\",\"uuid\":\"e153ca70-b543-4865-b4c5-b31d34185948\"},\"displayName\":\"Jupyter Slide Show\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-containers\",\"uuid\":\"93ce222b-5f6f-49b7-9ab1-a0463c6238df\"},\"displayName\":\"Dev Containers\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-ssh\",\"uuid\":\"607fd052-be03-4363-b657-2bd62b83d28a\"},\"displayName\":\"Remote - SSH\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-ssh-edit\",\"uuid\":\"bfeaf631-bcff-4908-93ed-fda4ef9a0c5c\"},\"displayName\":\"Remote - SSH: Editing Configuration Files\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-wsl\",\"uuid\":\"f0c5397b-d357-4197-99f0-cb4202f22818\"},\"displayName\":\"WSL\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cmake-tools\",\"uuid\":\"7c889349-8749-43d4-8b5e-08939936d7f4\"},\"displayName\":\"CMake Tools\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cpptools\",\"uuid\":\"690b692e-e8a9-493f-b802-8089d50ac1b2\"},\"displayName\":\"C/C++\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cpptools-extension-pack\",\"uuid\":\"3957b2f6-f086-49b5-a7b4-5da772123130\"},\"displayName\":\"C/C++ Extension Pack\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.cpptools-themes\",\"uuid\":\"99b17261-8f6e-45f0-9ad5-a69c6f509a4f\"},\"displayName\":\"C/C++ Themes\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.hexeditor\",\"uuid\":\"cc7d2112-5178-4472-8e0e-25dced95e7f0\"},\"displayName\":\"Hex Editor\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.makefile-tools\",\"uuid\":\"e09cf600-90a1-414e-92a0-031f1a5391c6\"},\"displayName\":\"Makefile Tools\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.powershell\",\"uuid\":\"40d39ce9-c381-47a0-80c8-a6661f731eab\"},\"displayName\":\"PowerShell\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.remote-explorer\",\"uuid\":\"11858313-52cc-4e57-b3e4-d7b65281e34b\"},\"displayName\":\"Remote Explorer\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ms-vscode.remote-repositories\",\"uuid\":\"cf5142f0-3701-4992-980c-9895a750addf\"},\"displayName\":\"Remote Repositories\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"mtxr.sqltools\",\"uuid\":\"6a2bbab0-d8f0-43fa-9b26-e6a3b7892a0b\"},\"displayName\":\"SQLTools\",\"disabled\":true,\"applicationScoped\":false},{\"identifier\":{\"id\":\"mushan.vscode-paste-image\",\"uuid\":\"ffaf4ec8-f001-4f02-b671-705ecf079cde\"},\"displayName\":\"Paste Image\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"nvidia.nsight-vscode-edition\",\"uuid\":\"33721321-341f-476d-b775-b91a14ddd403\"},\"displayName\":\"Nsight Visual Studio Code Edition\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"pawelborkar.jellyfish\",\"uuid\":\"865f89be-46b5-42c5-94c7-1f7c8aca2bbc\"},\"displayName\":\"JellyFish Theme\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"pkief.material-icon-theme\",\"uuid\":\"5db78037-f674-459f-a236-db622c427c5b\"},\"displayName\":\"Material Icon Theme\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"postman.postman-for-vscode\",\"uuid\":\"48fcb244-71c2-4877-aed3-29b36098a411\"},\"displayName\":\"Postman\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"redhat.java\",\"uuid\":\"198a707e-28af-4e84-8610-6e2f628dd12d\"},\"displayName\":\"Language Support for Java(TM) by Red Hat\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"redhat.vscode-yaml\",\"uuid\":\"2061917f-f76a-458a-8da9-f162de22b97e\"},\"displayName\":\"YAML\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"ritwickdey.liveserver\",\"uuid\":\"b63c44fd-0457-4696-99e9-dbfdf70d77de\"},\"displayName\":\"Live Server\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"roonie007.hide-files\",\"uuid\":\"cfc2a621-3121-48b0-9f34-7d9c12431d1e\"},\"displayName\":\"Hide files\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"shrey150.javafx-support\",\"uuid\":\"52007a93-6bf1-4906-8c88-a2ab2324db89\"},\"displayName\":\"JavaFX Support\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"sourcegraph.cody-ai\",\"uuid\":\"20d12578-788a-48ca-96b6-43abf885dc34\"},\"displayName\":\"Cody: AI Coding Assistant with Autocomplete & Chat\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"teabyii.ayu\",\"uuid\":\"5178733e-4b02-4829-95c5-1ce970847c23\"},\"displayName\":\"Ayu\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"tomoki1207.pdf\",\"uuid\":\"4386e6f6-ec10-4463-9d23-c24278718947\"},\"displayName\":\"vscode-pdf\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"twxs.cmake\",\"uuid\":\"2be7cf14-2603-402e-9771-fd79df83cdf8\"},\"displayName\":\"CMake\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vadimcn.vscode-lldb\",\"uuid\":\"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6\"},\"displayName\":\"CodeLLDB\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"visualstudioexptteam.intellicode-api-usage-examples\",\"uuid\":\"9fa2a00e-3bfa-4c2a-abc4-a865bb2b5cf3\"},\"displayName\":\"IntelliCode API Usage Examples\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"visualstudioexptteam.vscodeintellicode\",\"uuid\":\"876e8f93-74d0-4f4f-91b7-34a09f19f444\"},\"displayName\":\"IntelliCode\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscjava.vscode-gradle\",\"uuid\":\"a226f06e-9b5e-493b-b92a-553d3572f969\"},\"displayName\":\"Gradle for Java\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscjava.vscode-java-debug\",\"uuid\":\"61fcd0cf-64d7-4836-8d6b-d55f4fb83281\"},\"displayName\":\"Debugger for Java\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscjava.vscode-java-dependency\",\"uuid\":\"7865e561-1c83-410e-9b99-aabada597a7e\"},\"displayName\":\"Project Manager for Java\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscjava.vscode-java-pack\",\"uuid\":\"96f11e1f-1a46-4592-b084-f025b2c2a81f\"},\"displayName\":\"Extension Pack for Java\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscjava.vscode-java-test\",\"uuid\":\"67c06b0d-1891-42ca-b2a8-113e79bff069\"},\"displayName\":\"Test Runner for Java\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"vscjava.vscode-maven\",\"uuid\":\"b0f06c6b-24fb-4d7b-bd79-bc5e2fa17312\"},\"displayName\":\"Maven for Java\",\"preRelease\":true,\"applicationScoped\":false},{\"identifier\":{\"id\":\"wix.vscode-import-cost\",\"uuid\":\"c46b0018-f317-4b6c-a785-d2039b27338f\"},\"displayName\":\"Import Cost\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"xabikos.javascriptsnippets\",\"uuid\":\"a2cec723-5349-460d-9de9-0fd1f8d3456f\"},\"displayName\":\"JavaScript (ES6) code snippets\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"yzhang.markdown-all-in-one\",\"uuid\":\"98790d67-10fa-497c-9113-f6c7489207b2\"},\"displayName\":\"Markdown All in One\",\"applicationScoped\":false},{\"identifier\":{\"id\":\"zaaack.markdown-editor\",\"uuid\":\"d1d5603c-2be4-4f1b-b7b6-d7e908a8ad73\"},\"displayName\":\"Markdown Editor\",\"applicationScoped\":false}]","globalState":"{\"storage\":{\"workbench.panel.markers.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.markers.view\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.output.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"isHidden\\\":false}]\",\"terminal.hidden\":\"[{\\\"id\\\":\\\"terminal\\\",\\\"isHidden\\\":false,\\\"order\\\":1},{\\\"id\\\":\\\"~remote.forwardedPorts\\\",\\\"isHidden\\\":true,\\\"order\\\":0},{\\\"id\\\":\\\"postman-console-view\\\",\\\"isHidden\\\":true,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"isHidden\\\":false,\\\"order\\\":2},{\\\"id\\\":\\\"workbench.panel.repl.view\\\",\\\"isHidden\\\":false,\\\"order\\\":5},{\\\"id\\\":\\\"workbench.panel.markers.view\\\",\\\"isHidden\\\":false,\\\"order\\\":4}]\",\"workbench.explorer.views.state.hidden\":\"[{\\\"id\\\":\\\"outline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"timeline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.explorer.openEditorsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.explorer.emptyView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"npm\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.explorer.fileView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"javaProjectExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"mavenProjects\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"vjudgeinfo\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jupyterViewVariables\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cell-tag\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"commitViewProvider\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"compareCommitViewProvider\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dartDependencyTree\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"objectExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"queryHistory\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsonOutline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.session.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"chatgpt.sidebar\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"snippetExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"flutterbricks-sidebar\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"thunder-client-sidebar\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"hidden-files\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"clangd.typeHierarchyView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"clangd.memoryUsage\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"clangd.ast\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewConsoleMessages\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewConnectionExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewBookmarksExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewHistoryExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"go.explorer\\\",\\\"isHidden\\\":false}]\",\"workbench.scm.views.state.hidden\":\"[{\\\"id\\\":\\\"workbench.scm.repositories\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.scm\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.commits\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.repositories\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"gitlens.views.fileHistory\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.lineHistory\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"gitlens.views.branches\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.remotes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.stashes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.tags\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.contributors\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"gitlens.views.searchAndCompare\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.commitDetails\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.worktrees\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.scm.history\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.scm.grouped\\\",\\\"isHidden\\\":false}]\",\"workbench.view.search.state.hidden\":\"[{\\\"id\\\":\\\"workbench.view.search\\\",\\\"isHidden\\\":false}]\",\"workbench.activityBar.location\":\"default\",\"workbench.activity.pinnedViewlets2\":\"[{\\\"id\\\":\\\"workbench.view.explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.view.search\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":1},{\\\"id\\\":\\\"workbench.view.scm\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":2},{\\\"id\\\":\\\"workbench.view.debug\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.view.extensions\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":4},{\\\"id\\\":\\\"workbench.view.remote\\\",\\\"pinned\\\":false,\\\"visible\\\":true,\\\"order\\\":4},{\\\"id\\\":\\\"workbench.view.extension.test\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extension.references-view\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":7},{\\\"id\\\":\\\"workbench.view.extension.gitlens\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"workbench.view.extension.gitlensInspect\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":11},{\\\"id\\\":\\\"workbench.view.extension.gitlensPatch\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":12},{\\\"id\\\":\\\"workbench.view.extension.github-pull-requests\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":13},{\\\"id\\\":\\\"workbench.view.extension.github-pull-request\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":14},{\\\"id\\\":\\\"workbench.view.extension.sidebar-panel\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":22},{\\\"id\\\":\\\"workbench.view.extension.PowerShell\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":21},{\\\"id\\\":\\\"workbench.view.extension.dockerView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":16},{\\\"id\\\":\\\"workbench.view.extension.latex-workshop-activitybar\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":15},{\\\"id\\\":\\\"workbench.view.extension.snippetsmanager-snippetsView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":18},{\\\"id\\\":\\\"workbench.view.extension.snippets-manager-explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":17},{\\\"id\\\":\\\"workbench.view.extension.snippets-manager-sleek-snippetsView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":18},{\\\"id\\\":\\\"workbench.view.extension.makefile__viewContainer\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":20},{\\\"id\\\":\\\"workbench.view.extension.hexExplorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":19},{\\\"id\\\":\\\"workbench.view.extension.cody\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":23},{\\\"id\\\":\\\"workbench.view.extension.vscode-llvm\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":23},{\\\"id\\\":\\\"workbench.panel.chatSidebar\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":100},{\\\"id\\\":\\\"workbench.view.extension.PowerShellCommandExplorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":9},{\\\"id\\\":\\\"workbench.view.extension.jupyter\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":17},{\\\"id\\\":\\\"workbench.view.extension.vjudge\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":11},{\\\"id\\\":\\\"workbench.view.extension.cmake-view\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":18},{\\\"id\\\":\\\"workbench.view.extension.cmake__viewContainer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":14},{\\\"id\\\":\\\"workbench.view.extension.vscode-chatgpt-view-container\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"workbench.view.extension.flutter\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":8},{\\\"id\\\":\\\"workbench.view.extension.gradleContainerView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":24},{\\\"id\\\":\\\"workbench.view.extension.chatgpt-vscode-view-container\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":11},{\\\"id\\\":\\\"workbench.view.extension.kubernetesView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":15},{\\\"id\\\":\\\"workbench.view.extension.json-views\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":17},{\\\"id\\\":\\\"workbench.view.extension.dataworkspace\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":17},{\\\"id\\\":\\\"workbench.view.extension.flutterbricks-sidebar-view\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":13},{\\\"id\\\":\\\"workbench.view.extension.liveshare\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":19},{\\\"id\\\":\\\"workbench.view.extension.objectExplorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":18},{\\\"id\\\":\\\"workbench.view.extension.wallaby\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":22},{\\\"id\\\":\\\"workbench.view.extension.chatgpt-activitybar\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":23},{\\\"id\\\":\\\"workbench.view.extension.figma\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":12},{\\\"id\\\":\\\"workbench.view.extension.snippet-explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":12},{\\\"id\\\":\\\"workbench.panel.chatSidebar.copilot\\\",\\\"pinned\\\":false,\\\"visible\\\":true,\\\"order\\\":100},{\\\"id\\\":\\\"workbench.view.editSessions\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"workbench.view.sync\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"userDataProfiles\\\",\\\"pinned\\\":true,\\\"visible\\\":false}]\",\"workbench.panel.pinnedPanels\":\"[{\\\"id\\\":\\\"terminal\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.views.service.panel.da233af5-e572-4385-aecb-8127b8ead33b\\\",\\\"pinned\\\":true,\\\"visible\\\":false}]\",\"~remote.forwardedPortsContainer.hidden\":\"[{\\\"id\\\":\\\"~remote.forwardedPorts\\\",\\\"isHidden\\\":false}]\",\"workbench.telemetryOptOutShown\":\"true\",\"memento/gettingStartedService\":\"{\\\"installGit\\\":{\\\"done\\\":true},\\\"settingsSync\\\":{\\\"done\\\":true},\\\"settingsSyncWeb\\\":{\\\"done\\\":true},\\\"pickColorTheme\\\":{\\\"done\\\":true},\\\"pickColorThemeWeb\\\":{\\\"done\\\":true},\\\"extensionsWeb\\\":{\\\"done\\\":true},\\\"extensionsWebWeb\\\":{\\\"done\\\":true},\\\"settings\\\":{\\\"done\\\":true},\\\"pickAFolderTask-Other\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#open.project\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#install.cmake.tools\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWelcome#create.project\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.experience\\\":{\\\"done\\\":true},\\\"shortcuts\\\":{\\\"done\\\":true},\\\"quickOpen\\\":{\\\"done\\\":true},\\\"quickOpenWeb\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.showProjectExplorer.inactive\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.runtime\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.showProjectExplorer\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.debugAndTest\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.extensions\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.more\\\":{\\\"done\\\":true},\\\"vscjava.vscode-java-pack#javaWelcome#java.moreForMac\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.settings\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.currentLineBlame\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.createPythonFile\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcomeWithEnv#python.createPythonFile2\\\":{\\\"done\\\":true},\\\"ms-vscode.powershell#PowerShell#file\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonDataScienceWelcome#python.createNewNotebook\\\":{\\\"done\\\":true},\\\"ms-toolsai.jupyter#jupyterWelcome#ipynb.newUntitledIpynb\\\":{\\\"done\\\":true},\\\"scmSetup\\\":{\\\"done\\\":true},\\\"commandPaletteTask\\\":{\\\"done\\\":true},\\\"findLanguageExtensions\\\":{\\\"done\\\":true},\\\"pickAFolderTask-Mac\\\":{\\\"done\\\":true},\\\"splitview\\\":{\\\"done\\\":true},\\\"debugging\\\":{\\\"done\\\":true},\\\"scmClone\\\":{\\\"done\\\":true},\\\"scm\\\":{\\\"done\\\":true},\\\"tasks\\\":{\\\"done\\\":true},\\\"playground\\\":{\\\"done\\\":true},\\\"terminal\\\":{\\\"done\\\":true},\\\"extensions\\\":{\\\"done\\\":true},\\\"workspaceTrust\\\":{\\\"done\\\":true},\\\"videoTutorial\\\":{\\\"done\\\":true},\\\"commandPaletteTaskWeb\\\":{\\\"done\\\":true},\\\"pickAFolderTask-WebWeb\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.trial.extend\\\":{\\\"done\\\":true},\\\"menuBarWeb\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.selectInterpreter\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.runAndDebug\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.learnMoreWithDS\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.installPythonWin8\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.installPythonMac\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.installPythonLinux\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.createEnvironment\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.tutorial\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.gitCodeLens\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.revisionHistory\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.gitSideBarViews\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.fileAnnotations\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.hostingServiceIntegrations\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.gitCommandPalette\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.interactiveRebaseEditor\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.terminal\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.plus\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.intro\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.commitGraph\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.visualFileHistory\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.worktrees\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.richIntegrations\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.tryNow\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.trial\\\":{\\\"done\\\":true},\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.trial.upgrade\\\":{\\\"done\\\":true},\\\"ms-toolsai.jupyter#jupyterWelcome#jupyter.selectKernel\\\":{\\\"done\\\":true},\\\"ms-toolsai.jupyter#jupyterWelcome#jupyter.exploreAndDebug\\\":{\\\"done\\\":true},\\\"ms-toolsai.jupyter#jupyterWelcome#jupyter.dataScienceLearnMore\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonDataScienceWelcome#python.installJupyterExt\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.mac\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.linux\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.windows\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#awaiting.activation.windows\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#awaiting.activation.mac\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#awaiting.activation.linux\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#no.compilers.found.mac\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#no.compilers.found.linux\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#no.compilers.found.windows\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#create.cpp.file\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#relaunch.developer.command.prompt.windows\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#run.project.mac\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#run.project.linux\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#run.project.windows\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#customize.debugging.linux\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#customize.debugging.windows\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#customize.debugging.mac\\\":{\\\"done\\\":true},\\\"ms-vscode.remote-repositories#remoteRepositoriesWalkthrough#openRepo\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome2#python.createPythonFolder\\\":{\\\"done\\\":true},\\\"profiles\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#explore.commands\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#open.wslwindow\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#create.project\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#open.project\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#linux.environment\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#install.tools\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#run.debug\\\":{\\\"done\\\":true},\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#come.back\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.windows10\\\":{\\\"done\\\":true},\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.windows11\\\":{\\\"done\\\":true},\\\"ms-azuretools.vscode-docker#dockerStart#openFolder\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome2#python.createEnvironment2\\\":{\\\"done\\\":true},\\\"ms-azuretools.vscode-docker#dockerStart#dockerExplorer\\\":{\\\"done\\\":true},\\\"ms-python.python#pythonWelcome#python.createPythonFolder\\\":{\\\"done\\\":true},\\\"keybindingsAccessibility\\\":{\\\"done\\\":true},\\\"commandPaletteTaskAccessibility\\\":{\\\"done\\\":true}}\",\"workbench.statusbar.hidden\":\"[\\\"status.workspaceTrust.1642188040978\\\",\\\"status.workspaceTrust.db80de7c76430263f3ab78db9cf1ad8f\\\",\\\"status.workspaceTrust.1642342340316\\\",\\\"status.workspaceTrust.32c57b9d01ea173fa5556b45c0d0f885\\\",\\\"status.workspaceTrust.1668971526775\\\",\\\"status.workspaceTrust.f5a4cad89236bbe67a4d9f46921c4457\\\",\\\"status.workspaceTrust.1669044355981\\\",\\\"status.workspaceTrust.b8d4c029124f4f54770586dcbfb6c456\\\",\\\"status.workspaceTrust.1669049089335\\\",\\\"status.workspaceTrust.1669217930117\\\",\\\"status.workspaceTrust.1669218158842\\\",\\\"status.workspaceTrust.582a3ae7ae94ebda96a85880f849b047\\\",\\\"status.workspaceTrust.1669218485818\\\",\\\"status.workspaceTrust.1669218816788\\\",\\\"status.workspaceTrust.1669699287500\\\",\\\"status.workspaceTrust.1669780764050\\\",\\\"status.workspaceTrust.1670359826037\\\",\\\"status.workspaceTrust.33dabc306f54821738eaad16a56a9a29\\\",\\\"status.workspaceTrust.1670362279964\\\",\\\"status.workspaceTrust.1670484437387\\\",\\\"status.workspaceTrust.70e8d0cd0bcb756092e2e8caf008de66\\\",\\\"status.workspaceTrust.1670485344068\\\",\\\"status.workspaceTrust.e79ab8f2bf8fc7210559e18625674295\\\",\\\"status.workspaceTrust.1670485441117\\\",\\\"status.workspaceTrust.d7eb82297703cdb186650e0ea16565bd\\\",\\\"status.workspaceTrust.1670868515925\\\",\\\"status.workspaceTrust.7f38c6350a84aba292d69a73645dcafe\\\",\\\"status.workspaceTrust.1671104375706\\\",\\\"status.workspaceTrust.5d67720725ec0fa278bcb2909b85e812\\\",\\\"status.workspaceTrust.1671116202378\\\",\\\"status.workspaceTrust.1671175615545\\\",\\\"status.workspaceTrust.1671613565796\\\",\\\"status.workspaceTrust.87b299956f17e4e536b79dd44e5255d6\\\",\\\"status.workspaceTrust.17ca5043d79af77f0accf3cc3b40b31a\\\",\\\"status.workspaceTrust.8d5f0e75e8f5fa67314971232524c900\\\",\\\"status.workspaceTrust.1672341376648\\\",\\\"status.workspaceTrust.08d92383b3441958b108a65c68c1f86d\\\",\\\"status.workspaceTrust.1672344745630\\\",\\\"status.workspaceTrust.da4e65bd92c5e8bef7f25fd9eef7e7b3\\\",\\\"status.workspaceTrust.1672349135410\\\",\\\"status.workspaceTrust.8e5e75cb81a96afa9d984e97c06c6218\\\",\\\"status.workspaceTrust.1672438340696\\\",\\\"status.workspaceTrust.9f6918b7e6e786e88d70c7e8ca91b07f\\\",\\\"status.workspaceTrust.1672439298582\\\",\\\"status.workspaceTrust.90b36d164879a245a897053e0f73cf2c\\\",\\\"status.workspaceTrust.92612a116b36b99a6f1af2eca39bb381\\\",\\\"status.workspaceTrust.1672440607734\\\",\\\"status.workspaceTrust.007c640e7d5397afa2d8cef1aaee6f7f\\\",\\\"status.workspaceTrust.1672441470892\\\",\\\"status.workspaceTrust.1672446318084\\\",\\\"status.workspaceTrust.f3019517518b04bb1b09057678168733\\\",\\\"status.workspaceTrust.1672446596366\\\",\\\"status.workspaceTrust.1672447087529\\\",\\\"status.workspaceTrust.6fbc986a988302cb0c1795973dc9b1ae\\\",\\\"status.workspaceTrust.1672447157652\\\",\\\"status.workspaceTrust.2ab922a3df51f2a6f14f584583e06b6c\\\",\\\"status.workspaceTrust.a989e3684688116310032da98916516f\\\",\\\"status.workspaceTrust.1672449176779\\\",\\\"status.workspaceTrust.1672449210587\\\",\\\"status.workspaceTrust.1672486522687\\\",\\\"status.workspaceTrust.1672499656812\\\",\\\"status.workspaceTrust.83d49515ee78440d46090662f9b5a136\\\",\\\"status.workspaceTrust.1672499856455\\\",\\\"status.workspaceTrust.1672499972162\\\",\\\"status.workspaceTrust.1672500376569\\\",\\\"status.workspaceTrust.1672577074809\\\",\\\"status.workspaceTrust.1672579220604\\\",\\\"status.workspaceTrust.1672581673169\\\",\\\"status.workspaceTrust.95eb43ce8a0b2b0ab99eaec65115a003\\\",\\\"status.workspaceTrust.1672584776394\\\",\\\"status.workspaceTrust.c9d79ebdc856835112a4826b17987b43\\\",\\\"status.workspaceTrust.1672592323636\\\",\\\"status.workspaceTrust.1672595543260\\\",\\\"status.workspaceTrust.a700424fb607b108785e68db197383d2\\\",\\\"status.workspaceTrust.1672595923963\\\",\\\"status.workspaceTrust.88c3ff9870b4be1963f4c7df9771e4d4\\\",\\\"status.workspaceTrust.1672626793198\\\",\\\"status.workspaceTrust.1673113516217\\\",\\\"status.workspaceTrust.1673814034831\\\",\\\"status.workspaceTrust.1673814141420\\\",\\\"status.workspaceTrust.65cd53617562f4eaab2d557bf4969452\\\",\\\"status.workspaceTrust.1673860893696\\\",\\\"status.workspaceTrust.1674052233130\\\",\\\"status.workspaceTrust.128fcfd9a4b5a3006b632b1c5f1c9f7f\\\",\\\"status.workspaceTrust.1675405367154\\\",\\\"status.workspaceTrust.872dbc4aec76b676bb557c1a9680c50a\\\",\\\"status.workspaceTrust.1675405650647\\\",\\\"status.workspaceTrust.1675450421857\\\",\\\"status.workspaceTrust.1675450443880\\\",\\\"status.workspaceTrust.cb26342a6accad0c4d20e3043d6bf1ef\\\",\\\"status.workspaceTrust.1675455149405\\\",\\\"status.workspaceTrust.71b4d51ce935adb6edac925d58f4fa90\\\",\\\"status.workspaceTrust.1675455377263\\\",\\\"status.workspaceTrust.1675455575939\\\",\\\"status.workspaceTrust.1675518098919\\\",\\\"status.workspaceTrust.257bd3758dacb4202ccafecaeee2ffb7\\\",\\\"status.workspaceTrust.1675625094076\\\",\\\"status.workspaceTrust.1675661761581\\\",\\\"status.workspaceTrust.1675865520942\\\",\\\"status.workspaceTrust.65d52042c1e07f280dc52969a2012881\\\",\\\"status.workspaceTrust.1675999748414\\\",\\\"status.workspaceTrust.1676018749918\\\",\\\"status.workspaceTrust.2d7e91f9ee174f268ef4a313d5bd2619\\\",\\\"status.workspaceTrust.1676024128917\\\",\\\"status.workspaceTrust.3e820fc157069de0e626dadf9a371b7e\\\",\\\"status.workspaceTrust.1676048946178\\\",\\\"status.workspaceTrust.1676109080522\\\",\\\"status.workspaceTrust.5579fb809591302d12f1d53a7988823c\\\",\\\"status.workspaceTrust.1676208450469\\\",\\\"status.workspaceTrust.4d9824d9c78c8e3edde3ed357cd7b64b\\\",\\\"status.workspaceTrust.1676210389575\\\",\\\"status.workspaceTrust.f241c6a8ede876a8a30e589e5a9457d2\\\",\\\"status.workspaceTrust.1676347917438\\\",\\\"status.workspaceTrust.1676522821831\\\",\\\"status.workspaceTrust.1cc732173750255f6758ed40e972b92e\\\",\\\"status.workspaceTrust.1676522883152\\\",\\\"status.workspaceTrust.1676568193325\\\",\\\"status.workspaceTrust.c5abb07ca46a3a7301b678ce8a61a483\\\",\\\"status.workspaceTrust.1676568934387\\\",\\\"status.workspaceTrust.05888f27581bc553a443ee5a0ffc2f2e\\\",\\\"status.workspaceTrust.1676568981106\\\",\\\"status.workspaceTrust.1676569864454\\\",\\\"status.workspaceTrust.1676570747344\\\",\\\"status.workspaceTrust.1676570905198\\\",\\\"status.workspaceTrust.1676617883160\\\",\\\"status.workspaceTrust.1676633888629\\\",\\\"status.workspaceTrust.1676787173653\\\",\\\"status.workspaceTrust.1676835449055\\\",\\\"status.workspaceTrust.1677043437382\\\",\\\"status.workspaceTrust.bae0248144568b06409de3d4f975b33b\\\",\\\"status.workspaceTrust.1677159946554\\\",\\\"status.workspaceTrust.d7638c8291cd8cf6d8260662f28aec51\\\",\\\"status.workspaceTrust.1677244062816\\\",\\\"status.workspaceTrust.1677249513466\\\",\\\"status.workspaceTrust.1677336175959\\\",\\\"status.workspaceTrust.1677398330530\\\",\\\"status.workspaceTrust.7594a722a4ae8e59e815daec3b04b331\\\",\\\"status.workspaceTrust.1677530884520\\\",\\\"status.workspaceTrust.1677564859437\\\",\\\"status.workspaceTrust.8aaa0466ef059dae3f418683fcbd4fe7\\\",\\\"status.workspaceTrust.1677565534416\\\",\\\"status.workspaceTrust.11e9b33663804bdb84fe9aa87986bd90\\\",\\\"status.workspaceTrust.1677566056431\\\",\\\"status.workspaceTrust.660c411bf505dc0dbef23a66020630ae\\\",\\\"status.workspaceTrust.ext-dev\\\",\\\"status.workspaceTrust.1677572261724\\\",\\\"status.workspaceTrust.df12fec0cc507f0cebe445bcb18a91f3\\\",\\\"status.workspaceTrust.1677579828359\\\",\\\"status.workspaceTrust.1677580608375\\\",\\\"status.workspaceTrust.1677600768510\\\",\\\"status.workspaceTrust.1677600775260\\\",\\\"status.workspaceTrust.c590680bcced21f5212df2ce5b69f1b6\\\",\\\"status.workspaceTrust.1677697715441\\\",\\\"status.workspaceTrust.79c313464147e74e73ce1270b9e91e32\\\",\\\"status.workspaceTrust.1677747643154\\\",\\\"status.workspaceTrust.1677748418197\\\",\\\"status.workspaceTrust.1677772428792\\\",\\\"status.workspaceTrust.1677846497657\\\",\\\"status.workspaceTrust.1677849375152\\\",\\\"status.workspaceTrust.1678000783348\\\",\\\"status.workspaceTrust.43e62d2eb76709fe5fa8d3026319137b\\\",\\\"status.workspaceTrust.1678029217349\\\",\\\"status.workspaceTrust.dd90188b717b34f1f87b1bb6a2f1a3cc\\\",\\\"status.workspaceTrust.1678031021709\\\",\\\"status.workspaceTrust.6b3d9b31527fcf3bb7c8ae5ef84bbb9d\\\",\\\"status.workspaceTrust.1678076300030\\\",\\\"status.workspaceTrust.128e9a2458b46b9f7858b935248b2ebc\\\",\\\"status.workspaceTrust.1678076628531\\\",\\\"status.workspaceTrust.1678077469848\\\",\\\"status.workspaceTrust.1678096739232\\\",\\\"status.workspaceTrust.1678102041068\\\",\\\"status.workspaceTrust.1678128341341\\\",\\\"status.workspaceTrust.816fce197c722a57c5b48a5be37afdca\\\",\\\"status.workspaceTrust.1678128358264\\\",\\\"status.workspaceTrust.1678135637229\\\",\\\"status.workspaceTrust.6692785f1b04e501837a2e7f9ac4dbcd\\\",\\\"status.workspaceTrust.1678164529579\\\",\\\"status.workspaceTrust.1678246431805\\\",\\\"status.workspaceTrust.fd8b97d8e88997dedfae71ebcfb2ae7d\\\",\\\"status.workspaceTrust.1678246480619\\\",\\\"status.workspaceTrust.1678313538516\\\",\\\"status.workspaceTrust.1678422434577\\\",\\\"status.workspaceTrust.1678422739636\\\",\\\"status.workspaceTrust.1678423325428\\\",\\\"status.workspaceTrust.1678423408460\\\",\\\"status.workspaceTrust.1678427131554\\\",\\\"status.workspaceTrust.b4ece4699abcfd41e9566ccb0652f5e8\\\",\\\"status.workspaceTrust.1678429132059\\\",\\\"status.workspaceTrust.cd15c7e60474c49d68869c1e0ba0d409\\\",\\\"status.workspaceTrust.1678432402652\\\",\\\"status.workspaceTrust.1678444466475\\\",\\\"status.workspaceTrust.3aa4bbf982b5816002508e8118e35b91\\\",\\\"status.workspaceTrust.1678453451065\\\",\\\"status.workspaceTrust.cdf3ba45e65ca37e332811c8fa648851\\\",\\\"status.workspaceTrust.1678455122509\\\",\\\"status.workspaceTrust.6a18044ef155e015db54342d2a0954fb\\\",\\\"status.workspaceTrust.1678463623082\\\",\\\"status.workspaceTrust.1678473157713\\\",\\\"status.workspaceTrust.1678473184114\\\",\\\"status.workspaceTrust.1678488619831\\\",\\\"status.workspaceTrust.e0ffdb7af903b2c5406ca61170618958\\\",\\\"status.workspaceTrust.1678527147141\\\",\\\"status.workspaceTrust.47119127da73b9e1eb436580d32c5a50\\\",\\\"status.workspaceTrust.1678557249043\\\",\\\"status.workspaceTrust.1678594207887\\\",\\\"status.workspaceTrust.1678628478877\\\",\\\"status.workspaceTrust.1678686046964\\\",\\\"status.workspaceTrust.9221ec29a536ab9b6042ec08979ba690\\\",\\\"status.workspaceTrust.1678686117480\\\",\\\"status.workspaceTrust.eb5105cd6077e615548cbc21a4a088d0\\\",\\\"status.workspaceTrust.1678693368687\\\",\\\"status.workspaceTrust.1678701312005\\\",\\\"status.workspaceTrust.1678894902772\\\",\\\"status.workspaceTrust.25400448c39799d73480b16dfeadc3b6\\\",\\\"status.workspaceTrust.1678913172792\\\",\\\"status.workspaceTrust.45737d8a29acd2d270e88cc3f9fb53f2\\\",\\\"status.workspaceTrust.1678942649940\\\",\\\"status.workspaceTrust.1678943220500\\\",\\\"status.workspaceTrust.cd0c865eabd17bb069df873d2c2d1802\\\",\\\"status.workspaceTrust.1678943252623\\\",\\\"status.workspaceTrust.2f71492575333ed3c513bfdfb3df4b5d\\\",\\\"status.workspaceTrust.1679142407327\\\",\\\"status.workspaceTrust.189736650600c446705f756fe186df93\\\",\\\"status.workspaceTrust.1679153381842\\\",\\\"status.workspaceTrust.1679244122309\\\",\\\"status.workspaceTrust.1679415994887\\\",\\\"status.workspaceTrust.1679424537645\\\",\\\"status.workspaceTrust.27289a11e7c031e4687677d160e7ec48\\\",\\\"status.workspaceTrust.1679815668869\\\",\\\"status.workspaceTrust.4c02f9e26dc72a14cea88e1e316fd2b0\\\",\\\"status.workspaceTrust.1679815733107\\\",\\\"status.workspaceTrust.564db22af153549289aca053e3d47256\\\",\\\"status.workspaceTrust.1679939650251\\\",\\\"status.workspaceTrust.17d19d3b8892467870524a5106d95411\\\",\\\"status.workspaceTrust.1680009159377\\\",\\\"status.workspaceTrust.1680009196784\\\",\\\"status.workspaceTrust.1c406fa6ae6a1d0cd5baa9c0f1e6fc68\\\",\\\"status.workspaceTrust.1680009297205\\\",\\\"status.workspaceTrust.1680009381283\\\",\\\"status.workspaceTrust.1680010573828\\\",\\\"status.workspaceTrust.1680027100069\\\",\\\"status.workspaceTrust.6f844bc9b423ad2ae40142d1b37ca9e1\\\",\\\"status.workspaceTrust.1680027335830\\\",\\\"status.workspaceTrust.1680027383858\\\",\\\"status.workspaceTrust.1680029864667\\\",\\\"status.workspaceTrust.1680031868895\\\",\\\"status.workspaceTrust.1680035165884\\\",\\\"status.workspaceTrust.1680198441903\\\",\\\"status.workspaceTrust.93392dfdfde0a4d8a5fd5e654895f47c\\\",\\\"status.workspaceTrust.1680519182391\\\",\\\"status.workspaceTrust.340d3acfdcbd9bd1866261249fe9bd13\\\",\\\"status.workspaceTrust.b276eff71616b08031527bb3ffd18f3e\\\",\\\"status.workspaceTrust.1680532532189\\\",\\\"status.workspaceTrust.1308b3ec440f74f4b63a9c2880589052\\\",\\\"status.workspaceTrust.1680534408930\\\",\\\"status.workspaceTrust.b3c25ff89c058efe8d29921eed0ebc66\\\",\\\"status.workspaceTrust.1680540684850\\\",\\\"status.workspaceTrust.1680541851974\\\",\\\"status.workspaceTrust.63bd14008a9c35b51c1d2d968ac4c580\\\",\\\"status.workspaceTrust.1680541876521\\\",\\\"status.workspaceTrust.0648b1fde2bf477b7203c5c6b0bbbaae\\\",\\\"status.workspaceTrust.1680665639037\\\",\\\"status.workspaceTrust.1680665667251\\\",\\\"status.workspaceTrust.1680665678898\\\",\\\"status.workspaceTrust.1680771109292\\\",\\\"status.workspaceTrust.5ecc3e9dd5c17e04071c23c95fbfa0e2\\\",\\\"status.workspaceTrust.1680771764755\\\",\\\"status.workspaceTrust.1680772176916\\\",\\\"status.workspaceTrust.0205efdab039efd378903971174ab995\\\",\\\"status.workspaceTrust.695d3dbc4c2faf7e2e709013e4927071\\\",\\\"status.workspaceTrust.1680900837453\\\",\\\"status.workspaceTrust.6232e5a5f649fc9e50b01cd7b62923cc\\\",\\\"status.workspaceTrust.1680948698003\\\",\\\"status.workspaceTrust.c544e55ef810d04e7ecb49982137c6ae\\\",\\\"status.workspaceTrust.1681136929578\\\",\\\"status.workspaceTrust.1681196400162\\\",\\\"status.workspaceTrust.42975a339f269741d5116a602dcaddc0\\\",\\\"status.workspaceTrust.1681392587090\\\",\\\"status.workspaceTrust.86178f93c307674d921c66164c2eaf0a\\\",\\\"status.workspaceTrust.1681393988541\\\",\\\"status.workspaceTrust.1681394121103\\\",\\\"status.workspaceTrust.1681394417776\\\",\\\"status.workspaceTrust.1681527697862\\\",\\\"status.workspaceTrust.1681741315516\\\",\\\"status.workspaceTrust.f60d96c849092e0839b600476b922748\\\",\\\"status.workspaceTrust.1681886352324\\\",\\\"status.workspaceTrust.51526fb0415f789fb27d985c02ada2f1\\\",\\\"status.workspaceTrust.1681918146570\\\",\\\"status.workspaceTrust.13c97ed90d7ce4906d5c98bcffe1fc32\\\",\\\"status.workspaceTrust.1682247137185\\\",\\\"status.workspaceTrust.1682420250243\\\",\\\"status.workspaceTrust.1682424882832\\\",\\\"status.workspaceTrust.1682534188104\\\",\\\"status.workspaceTrust.5c2d4da07c62a84ad35a18ba932e692c\\\",\\\"status.workspaceTrust.1682571463033\\\",\\\"status.workspaceTrust.1682571641497\\\",\\\"status.workspaceTrust.1682574472517\\\",\\\"status.workspaceTrust.1682579023372\\\",\\\"status.workspaceTrust.1682670113845\\\",\\\"status.workspaceTrust.1682670138707\\\",\\\"status.workspaceTrust.bfbfffc2866f220672f69a8746604e4f\\\",\\\"status.workspaceTrust.1682670580205\\\",\\\"status.workspaceTrust.1682670713631\\\",\\\"status.workspaceTrust.1682670717764\\\",\\\"status.workspaceTrust.9b50501cfb504e97f639788dcd8bf71d\\\",\\\"status.workspaceTrust.1682671432298\\\",\\\"status.workspaceTrust.1682671496391\\\",\\\"status.workspaceTrust.1682671568203\\\",\\\"status.workspaceTrust.baa284f473118169112dd1a38b6d4e8d\\\",\\\"status.workspaceTrust.1682682344038\\\",\\\"status.workspaceTrust.59c39b6cb81b955bcb9da64b05eee632\\\",\\\"status.workspaceTrust.1682772414876\\\",\\\"status.workspaceTrust.1682935608222\\\",\\\"status.workspaceTrust.1682937829274\\\",\\\"status.workspaceTrust.1682938511805\\\",\\\"status.workspaceTrust.1682938614693\\\",\\\"status.workspaceTrust.1682938969106\\\",\\\"status.workspaceTrust.a91ec653f4ef8259bdc53e1d3576bbac\\\",\\\"status.workspaceTrust.1682960002265\\\",\\\"status.workspaceTrust.7395ddeea726c6a5f7ab0e523bb188f7\\\",\\\"status.workspaceTrust.1683035891708\\\",\\\"status.workspaceTrust.1683106100183\\\",\\\"status.workspaceTrust.1683106170640\\\",\\\"status.workspaceTrust.75fdbf026ed3a675d96eefb2e4afbd79\\\",\\\"status.workspaceTrust.1683109373486\\\",\\\"status.workspaceTrust.5c4fc99f63ff560f63d576b47a86b83f\\\",\\\"status.workspaceTrust.1683113599592\\\",\\\"status.workspaceTrust.1683114241984\\\",\\\"status.workspaceTrust.1683276767157\\\",\\\"status.workspaceTrust.1683284215643\\\",\\\"status.workspaceTrust.1683387535171\\\",\\\"status.workspaceTrust.c0c3ed86475b257be4446a2bd0e9cf34\\\",\\\"status.workspaceTrust.1683433784314\\\",\\\"status.workspaceTrust.ee89f9981389eca4419a4a5c0f80f9b2\\\",\\\"status.workspaceTrust.1683437899369\\\",\\\"status.workspaceTrust.3754f3442f92026a7229b00ae0f37310\\\",\\\"status.workspaceTrust.1683438043121\\\",\\\"status.workspaceTrust.c70570dc94c268c1cb5f36bb52889b3b\\\",\\\"status.workspaceTrust.2b00320e6a9a3fe12f8b6bedfc1a87b5\\\",\\\"status.workspaceTrust.1683438231642\\\",\\\"status.workspaceTrust.1683466106082\\\",\\\"status.workspaceTrust.1683466205892\\\",\\\"status.workspaceTrust.1683466486123\\\",\\\"status.workspaceTrust.1683478814733\\\",\\\"status.workspaceTrust.103a87eeec642b61f7668756299fd28a\\\",\\\"status.workspaceTrust.1683483200003\\\",\\\"status.workspaceTrust.1683487387722\\\",\\\"status.workspaceTrust.1683487946384\\\",\\\"status.workspaceTrust.1683488114501\\\",\\\"status.workspaceTrust.1683489310035\\\",\\\"status.workspaceTrust.1683490088189\\\",\\\"status.workspaceTrust.d131629edbb8623ddb0de295000faa8b\\\",\\\"status.workspaceTrust.1683490772255\\\",\\\"status.workspaceTrust.22a6af1f62d4c77625d7b21a3221b7a6\\\",\\\"status.workspaceTrust.1683493161502\\\",\\\"status.workspaceTrust.4dc4aa1201441f1a6719d07358ed0b1a\\\",\\\"status.workspaceTrust.97f5307e32ae9934b84442ae06270a60\\\",\\\"status.workspaceTrust.1683530689153\\\",\\\"status.workspaceTrust.2db0c9b2c23f2e7d57e7d3ab76545e81\\\",\\\"status.workspaceTrust.1683537396650\\\",\\\"status.workspaceTrust.1683537578759\\\",\\\"status.workspaceTrust.be7b70240906130bb0e3f45e4899c072\\\",\\\"status.workspaceTrust.1683559576426\\\",\\\"status.workspaceTrust.1683640583869\\\",\\\"status.workspaceTrust.44b10f00a63e4836ed35303561c34bf2\\\",\\\"status.workspaceTrust.1683644590505\\\",\\\"status.workspaceTrust.1683652282029\\\",\\\"status.workspaceTrust.454e8dbdb71dc8db7c745f9efdf82681\\\",\\\"status.workspaceTrust.e92a4181b99da3e9271283c0b42154ff\\\",\\\"status.workspaceTrust.1683778192267\\\",\\\"status.workspaceTrust.1683818152442\\\",\\\"status.workspaceTrust.62e400c43c81b891de5d436188545a97\\\",\\\"status.workspaceTrust.1683818343236\\\",\\\"status.workspaceTrust.0a18cd52e97d9e2d3ba5515146fd34f2\\\",\\\"status.workspaceTrust.1683925216370\\\",\\\"status.workspaceTrust.1683988754875\\\",\\\"status.workspaceTrust.d9e11173b2514e46eca89d9b98893612\\\",\\\"status.workspaceTrust.1684171746374\\\",\\\"status.workspaceTrust.3ca489d466d1390aaf4d96e550b298af\\\",\\\"status.workspaceTrust.1684173772502\\\",\\\"status.workspaceTrust.1684216907712\\\",\\\"status.workspaceTrust.1684218362072\\\",\\\"status.workspaceTrust.1684218718961\\\",\\\"status.workspaceTrust.1684218838703\\\",\\\"status.workspaceTrust.8f22668af78e8888fc66363a9bef3413\\\",\\\"status.workspaceTrust.1684218944837\\\",\\\"status.workspaceTrust.1684233700439\\\",\\\"status.workspaceTrust.1684344673293\\\",\\\"status.workspaceTrust.1684506802062\\\",\\\"status.workspaceTrust.1684517261235\\\",\\\"status.workspaceTrust.1684523017955\\\",\\\"status.workspaceTrust.cd1763279506d3ba2370550f57db6197\\\",\\\"status.workspaceTrust.1684602949650\\\",\\\"status.workspaceTrust.f769700c83793916e383c2f05d1c895f\\\",\\\"status.workspaceTrust.1684895977988\\\",\\\"status.workspaceTrust.05367e3ce8d520fdd47937b460883526\\\",\\\"status.notifications\\\",\\\"status.workspaceTrust.1685182243100\\\",\\\"status.workspaceTrust.1685284459689\\\",\\\"status.workspaceTrust.1685298615908\\\",\\\"status.workspaceTrust.1685299657855\\\",\\\"status.workspaceTrust.1685380532268\\\",\\\"status.workspaceTrust.78b874d5cd26a0c09b2245e93b0dc134\\\",\\\"status.workspaceTrust.1685381525165\\\",\\\"status.workspaceTrust.1685505876936\\\",\\\"status.workspaceTrust.1685536691303\\\",\\\"status.workspaceTrust.47101b9dbc146e0fdc3b3aa595155806\\\",\\\"status.workspaceTrust.1685651414852\\\",\\\"status.workspaceTrust.65399ac435c7d74b1321dd67dba3de2c\\\",\\\"status.workspaceTrust.06cec13de2bef5b910c2b196a3c9a253\\\",\\\"status.workspaceTrust.1685939432966\\\",\\\"status.workspaceTrust.6bc3242603ebfcb0f39c458aa25882f4\\\",\\\"status.workspaceTrust.1686413796582\\\",\\\"status.workspaceTrust.f61817a1335ea682ed26a7f37d4d0e94\\\",\\\"status.workspaceTrust.aff80e555b2ff3976ea7c0cad479c7b2\\\",\\\"status.workspaceTrust.1686667443488\\\",\\\"status.workspaceTrust.c037a61464edb54d2405f07b5e37e81c\\\",\\\"status.workspaceTrust.1686728675863\\\",\\\"status.workspaceTrust.12fc3ec1bd2366f951deff17312a95f0\\\",\\\"status.workspaceTrust.1686728793408\\\",\\\"status.workspaceTrust.1686846781289\\\",\\\"status.workspaceTrust.69104991c7ee50dc2ae04d5b3e823917\\\",\\\"status.workspaceTrust.1686928853199\\\",\\\"status.workspaceTrust.70b4d00616b67381e1bb4a345bcdb361\\\",\\\"status.workspaceTrust.1687284447739\\\",\\\"status.workspaceTrust.1687321062073\\\",\\\"status.workspaceTrust.ead6dec0861363985f3ad4777cb21213\\\",\\\"status.workspaceTrust.feef52b3d3979536615569ee759cd11d\\\",\\\"status.workspaceTrust.1687338693450\\\",\\\"status.workspaceTrust.1687342978010\\\",\\\"status.workspaceTrust.1687435643448\\\",\\\"status.workspaceTrust.5ec467c7f22ebc3a2c2184189162b71a\\\",\\\"status.workspaceTrust.1687435828409\\\",\\\"status.workspaceTrust.1687435830708\\\",\\\"status.workspaceTrust.eb1961799ad32c528a0245b1d4a98441\\\",\\\"status.workspaceTrust.dbe8adedbc348952ffbb16ac83d77e40\\\",\\\"status.workspaceTrust.1687439956693\\\",\\\"status.workspaceTrust.1687439958977\\\",\\\"status.workspaceTrust.02f994282ff396ec97dd760bc87b6dc7\\\",\\\"status.workspaceTrust.1687455988339\\\",\\\"status.workspaceTrust.071b4e0b4cb8f7f982afa7285fcde03a\\\",\\\"status.workspaceTrust.92705436b589b22b4c2d38f106458a54\\\",\\\"status.workspaceTrust.1687545231951\\\",\\\"status.workspaceTrust.1687678478721\\\",\\\"status.workspaceTrust.610b3926ae11c598efcb0918b2457a26\\\",\\\"status.workspaceTrust.1687682672794\\\",\\\"status.workspaceTrust.a3bf393a4e6c502530b01816f5713a14\\\",\\\"status.workspaceTrust.1687682791626\\\",\\\"status.workspaceTrust.a62cb7a3d9b005dc9aca6b79154e1ba2\\\",\\\"status.workspaceTrust.1687685051288\\\",\\\"status.workspaceTrust.1687712267024\\\",\\\"status.workspaceTrust.86146990ea42d5216911e08be3ef8a9a\\\",\\\"status.workspaceTrust.1687719099206\\\",\\\"status.workspaceTrust.92a1fd63aa2f1b82b0bc954a0370144b\\\",\\\"status.workspaceTrust.1687785816393\\\",\\\"status.workspaceTrust.1687786358399\\\",\\\"status.workspaceTrust.1687786444042\\\",\\\"status.workspaceTrust.590b8a08f7d15b9ab5007d9b746dc6c2\\\",\\\"status.workspaceTrust.1688056281299\\\",\\\"status.workspaceTrust.4853b356adbc183a0ed8aea20426d322\\\",\\\"status.workspaceTrust.d0311257461e592b50a4083d51891411\\\",\\\"status.workspaceTrust.1688146411633\\\",\\\"status.workspaceTrust.1688233395801\\\",\\\"status.workspaceTrust.1688273175007\\\",\\\"status.workspaceTrust.1688273514471\\\",\\\"status.workspaceTrust.f4429dc4ef70722ed919dab767e968d4\\\",\\\"status.workspaceTrust.1688293885885\\\",\\\"status.workspaceTrust.17db3597547ddb62e69e8c6c88aefd2d\\\",\\\"status.workspaceTrust.1688351807821\\\",\\\"status.workspaceTrust.1688352641289\\\",\\\"status.workspaceTrust.0ef4a9e8c437bf68832d163cbe9fa963\\\",\\\"status.workspaceTrust.1688444771375\\\",\\\"status.workspaceTrust.a909c7075bddaa51f7472a1adfe2585e\\\",\\\"status.workspaceTrust.1688531253244\\\",\\\"status.workspaceTrust.617c812ee711fc7f2b770c678055f0e8\\\",\\\"status.workspaceTrust.de0c53b6dea65fea4c678d96ba21dc21\\\",\\\"status.workspaceTrust.ef8f40bf9272a6bb9ab660d52f12d850\\\",\\\"status.workspaceTrust.1688565392205\\\",\\\"status.workspaceTrust.1688574855603\\\",\\\"status.workspaceTrust.124b8d6b9197d6ff248163e58155c9f2\\\",\\\"status.workspaceTrust.1688914345094\\\",\\\"status.workspaceTrust.29f2a50168cc0026ddbc57f110a66201\\\",\\\"status.workspaceTrust.aba7084255c9a02d2f777f07576e08ee\\\",\\\"status.workspaceTrust.1688915257100\\\",\\\"status.workspaceTrust.028e72d8b74eb7a7fab27186588d1ee0\\\",\\\"status.workspaceTrust.1688915527047\\\",\\\"status.workspaceTrust.1688915534750\\\",\\\"status.workspaceTrust.1688918018337\\\",\\\"status.workspaceTrust.0f9d784327ec0bb056faebdd8adb5703\\\",\\\"status.workspaceTrust.1688981323466\\\",\\\"status.workspaceTrust.1688981365062\\\",\\\"status.workspaceTrust.164be74191806b6459a8f804578db98e\\\",\\\"status.workspaceTrust.1689584399494\\\",\\\"status.workspaceTrust.1689585338597\\\",\\\"status.workspaceTrust.1689600033796\\\",\\\"status.workspaceTrust.0917b114753e92cecaf6adf57e4a4b9a\\\",\\\"status.workspaceTrust.1689603352331\\\",\\\"status.workspaceTrust.1689603862175\\\",\\\"status.workspaceTrust.1689603871272\\\",\\\"status.workspaceTrust.1689659259854\\\",\\\"status.workspaceTrust.6772a7cd291870f2cfb4e7a815cb0cc7\\\",\\\"status.workspaceTrust.1689694196321\\\",\\\"status.workspaceTrust.06e6bef4dd343a3d0c37bf9d35ffe24c\\\",\\\"status.workspaceTrust.1689779541699\\\",\\\"status.workspaceTrust.1690082352802\\\",\\\"status.workspaceTrust.e3e0cdfb03c6160c67009cd440f76031\\\",\\\"status.workspaceTrust.1690135784371\\\",\\\"status.workspaceTrust.2fe1d2f3ca3c8d7f700afee1c5066c43\\\",\\\"status.workspaceTrust.9e5b38b665a5328f5ae0262a56b08285\\\",\\\"status.workspaceTrust.1690264051172\\\",\\\"status.workspaceTrust.1690451264528\\\",\\\"status.workspaceTrust.30e1bc5a2ca6171f19b8338dd17de2b6\\\",\\\"status.workspaceTrust.1690533330495\\\",\\\"status.workspaceTrust.1690552688467\\\",\\\"status.workspaceTrust.43a95ccd5eb2886f050b19ff2bab87ee\\\",\\\"status.workspaceTrust.1690559455527\\\",\\\"status.workspaceTrust.12741b7499c718e212d9ba779571eb5a\\\",\\\"status.workspaceTrust.ca10de54b490bc9231a314f219c27540\\\",\\\"status.workspaceTrust.1690654609807\\\",\\\"status.workspaceTrust.48d714476cfe19cad25a2a73e1d022b4\\\",\\\"status.workspaceTrust.1690699850287\\\",\\\"status.workspaceTrust.45aa4d13354385bb08a7c701adacdc93\\\",\\\"status.workspaceTrust.1690701755588\\\",\\\"status.workspaceTrust.ea4835d5d97730f4747c07d757f31afa\\\",\\\"status.workspaceTrust.1690738910159\\\",\\\"status.workspaceTrust.1690962611562\\\",\\\"status.workspaceTrust.bb41c028906ab3665f433ee1c2850c67\\\",\\\"status.workspaceTrust.1691066017612\\\",\\\"status.workspaceTrust.bbf53f11d8e21a12ff8b81a75085fa15\\\",\\\"status.workspaceTrust.1691412763399\\\",\\\"status.workspaceTrust.1691417948404\\\",\\\"status.workspaceTrust.1691503277423\\\",\\\"status.workspaceTrust.1691503702251\\\",\\\"status.workspaceTrust.1691672470251\\\",\\\"status.workspaceTrust.1691783243823\\\",\\\"status.workspaceTrust.1692109914536\\\",\\\"status.workspaceTrust.1692642477853\\\",\\\"status.workspaceTrust.1692686249373\\\",\\\"status.workspaceTrust.1692686628740\\\",\\\"status.workspaceTrust.c4dea6fe7938d9dd2526e69c49803672\\\",\\\"status.workspaceTrust.1692730682345\\\",\\\"status.workspaceTrust.1693826850153\\\",\\\"status.workspaceTrust.66632132c1880a513552eccb568a1163\\\",\\\"status.workspaceTrust.1693858779489\\\",\\\"status.workspaceTrust.1693860052910\\\",\\\"status.workspaceTrust.1693900694370\\\",\\\"status.workspaceTrust.07f010185cabd89eeddc579be1a31745\\\",\\\"status.workspaceTrust.1694350202180\\\",\\\"status.workspaceTrust.1694350216781\\\",\\\"status.workspaceTrust.1694350247797\\\",\\\"status.workspaceTrust.1694350258114\\\",\\\"status.workspaceTrust.1694350281827\\\",\\\"status.workspaceTrust.1694350357038\\\",\\\"status.workspaceTrust.1694508289514\\\",\\\"status.workspaceTrust.1694510064624\\\",\\\"status.workspaceTrust.89c1911a5462ac22de4a122adc43f80a\\\",\\\"status.workspaceTrust.1694881254891\\\",\\\"status.workspaceTrust.1695360833621\\\",\\\"status.workspaceTrust.925f44db8faa1e7c4ebaa65af99c0a72\\\",\\\"status.workspaceTrust.1695546394438\\\",\\\"status.workspaceTrust.1695660224814\\\",\\\"status.workspaceTrust.1695722294779\\\",\\\"status.workspaceTrust.1696008775913\\\",\\\"status.workspaceTrust.a7a8df237f7888a32a3c3e070114d8da\\\",\\\"status.workspaceTrust.117c48e4594257992216108d47c4669a\\\",\\\"status.workspaceTrust.1696093312057\\\",\\\"status.workspaceTrust.591c18f79f3cc99c1ff15bc91afc2809\\\",\\\"status.workspaceTrust.1696096188927\\\",\\\"status.workspaceTrust.dbedc8147ab42a6f1a6d0b0b061db28d\\\",\\\"status.workspaceTrust.5b86aa86301dbd92712f30e816793005\\\",\\\"status.workspaceTrust.1696097192988\\\",\\\"status.workspaceTrust.1696098249514\\\",\\\"status.workspaceTrust.1696099333420\\\",\\\"status.workspaceTrust.1696101938861\\\",\\\"status.workspaceTrust.71bfdbb51a127c6bf8b71fbf1fc9d261\\\",\\\"status.workspaceTrust.1696102389536\\\",\\\"status.workspaceTrust.ff36e18e26b26e5b6b7c07eb9da2d968\\\",\\\"status.workspaceTrust.1696102464184\\\",\\\"status.workspaceTrust.1696102525205\\\",\\\"status.workspaceTrust.1696110171254\\\",\\\"status.workspaceTrust.1696145302610\\\",\\\"status.workspaceTrust.1696258781092\\\",\\\"status.workspaceTrust.1696310387449\\\",\\\"status.workspaceTrust.1696310403162\\\",\\\"status.workspaceTrust.1696411377024\\\",\\\"status.workspaceTrust.1696411407706\\\",\\\"status.workspaceTrust.5115e06e2506ebfba74be86878f2b6eb\\\",\\\"status.workspaceTrust.1696422984212\\\",\\\"status.workspaceTrust.f55a5acbc17afd66d7aede3ad3f13105\\\",\\\"status.workspaceTrust.1696439940433\\\",\\\"status.workspaceTrust.1696668542083\\\",\\\"status.workspaceTrust.77fab2b8361a3403a89bdf7330dc600c\\\",\\\"status.workspaceTrust.1696672713194\\\",\\\"status.workspaceTrust.5f55aeae3226a272bc595aad226ae966\\\",\\\"status.workspaceTrust.1696673663087\\\",\\\"status.workspaceTrust.1696695316816\\\",\\\"status.workspaceTrust.1696952130755\\\",\\\"status.workspaceTrust.1697018516439\\\",\\\"status.workspaceTrust.1697018552774\\\",\\\"status.workspaceTrust.1acca4991d1050e94efd53ec0698439f\\\",\\\"status.workspaceTrust.1697128001026\\\",\\\"status.workspaceTrust.a269e43d4b246e4fefcc6add2e01ce06\\\",\\\"status.workspaceTrust.1697173958818\\\",\\\"status.workspaceTrust.1697173989246\\\",\\\"status.workspaceTrust.1697382299881\\\",\\\"status.workspaceTrust.1697474099082\\\",\\\"status.workspaceTrust.1697562658892\\\",\\\"status.workspaceTrust.1697578451344\\\",\\\"status.workspaceTrust.1697578721472\\\",\\\"status.workspaceTrust.1697709148747\\\",\\\"status.workspaceTrust.1697867900676\\\",\\\"status.workspaceTrust.1698006588605\\\",\\\"status.workspaceTrust.1698319266690\\\",\\\"status.workspaceTrust.1698353708609\\\",\\\"status.workspaceTrust.1698400116758\\\",\\\"status.workspaceTrust.1698830005073\\\",\\\"status.workspaceTrust.56fdf1a3f5ac2b9a0c569e11e09723e2\\\",\\\"status.workspaceTrust.1699009324580\\\",\\\"status.workspaceTrust.1699031325179\\\",\\\"status.workspaceTrust.1699085971581\\\",\\\"status.workspaceTrust.488ed10128a47035deaeb81979a71161\\\",\\\"status.workspaceTrust.db728752bb05ca4b71d227115de7cff9\\\",\\\"status.workspaceTrust.1699976062446\\\",\\\"status.workspaceTrust.1700222460589\\\",\\\"status.workspaceTrust.1700224834964\\\",\\\"status.workspaceTrust.1700413532393\\\",\\\"status.workspaceTrust.8fa7aeb5fa1623acfa89d8847e49f2d0\\\",\\\"status.workspaceTrust.1700466472215\\\",\\\"status.workspaceTrust.c75b9cdd76d4097a58929c8856eb029b\\\",\\\"status.workspaceTrust.1700473339738\\\",\\\"status.workspaceTrust.a5a26e5708d0f1ad8a65e16c06c21b0c\\\",\\\"status.workspaceTrust.1700474358945\\\",\\\"status.workspaceTrust.310a248fcff016361e7629e46a4692fe\\\",\\\"status.workspaceTrust.7c9caacf7d90010208446e2060605c38\\\",\\\"status.workspaceTrust.1700484344007\\\",\\\"status.workspaceTrust.2b003f452c873d78b3fd739da299f3ca\\\",\\\"status.workspaceTrust.1700661649882\\\",\\\"status.workspaceTrust.1700676823278\\\",\\\"status.workspaceTrust.962390075c6a1ac7343b09010df96dec\\\",\\\"status.workspaceTrust.1701010168530\\\",\\\"status.workspaceTrust.1676f60bf69fde6072b759916f1b0773\\\",\\\"status.workspaceTrust.1701162639385\\\",\\\"status.workspaceTrust.5ea45806652eaa249e69c72e8bec7b3e\\\",\\\"status.workspaceTrust.1701358534828\\\",\\\"status.workspaceTrust.a0b4dd4ba57672874ad65d5030c7603c\\\",\\\"status.workspaceTrust.1701358587009\\\",\\\"status.workspaceTrust.1701423237370\\\",\\\"status.workspaceTrust.1701428947530\\\",\\\"status.workspaceTrust.1701508713836\\\",\\\"status.workspaceTrust.3a550e1669cb89f8166b0da81131459c\\\",\\\"status.workspaceTrust.1701508735076\\\",\\\"status.workspaceTrust.f2103a65600aa92ae44fe2bffb5aebf8\\\",\\\"status.workspaceTrust.1701513868210\\\",\\\"status.workspaceTrust.1701533522386\\\",\\\"status.workspaceTrust.66d557aecf2176135821fbc4e9c8a581\\\",\\\"status.workspaceTrust.1701580637996\\\",\\\"status.workspaceTrust.d17f96ef2118a118e8e7ad4e478e6eb4\\\",\\\"status.workspaceTrust.1701594650695\\\",\\\"status.workspaceTrust.1701594668448\\\",\\\"status.workspaceTrust.5d0ca243f195ced9b8078d8a107b7bb6\\\",\\\"status.workspaceTrust.1ca7e9defa98626b4c025d3d3175f84f\\\",\\\"status.workspaceTrust.1701595185229\\\",\\\"status.workspaceTrust.53cf73f6ba49d0ac50012f8c77c0d84a\\\",\\\"status.workspaceTrust.1701596351872\\\",\\\"status.workspaceTrust.1701597703833\\\",\\\"status.workspaceTrust.1701601713944\\\",\\\"status.workspaceTrust.4796434de141a16d5dd7150bd8c2705d\\\",\\\"status.workspaceTrust.1701603293523\\\",\\\"status.workspaceTrust.96ea59a4c5cb854ce53b78db9859cb8d\\\",\\\"status.workspaceTrust.1701611677756\\\",\\\"status.workspaceTrust.b9b43bec174ad5f6d268d9165135dee2\\\",\\\"status.workspaceTrust.1701679565890\\\",\\\"status.workspaceTrust.e7cb9d39e2c9e7ef6348aa2c31203302\\\",\\\"status.workspaceTrust.1701787519019\\\",\\\"status.workspaceTrust.1701802183456\\\",\\\"status.workspaceTrust.1701847464028\\\",\\\"status.workspaceTrust.1701965808363\\\",\\\"status.workspaceTrust.cdcbfc40f380a4e913aecce412d94196\\\",\\\"status.workspaceTrust.1702024049242\\\",\\\"status.workspaceTrust.1702024152236\\\",\\\"status.workspaceTrust.a67fd01ef8ea9f034b685962c5ce4c91\\\",\\\"status.workspaceTrust.1702031914939\\\",\\\"status.workspaceTrust.1702145632254\\\",\\\"status.workspaceTrust.1702145643199\\\",\\\"status.workspaceTrust.1702145758815\\\",\\\"status.workspaceTrust.2cac695ecaa0010f60fa000db492f0d2\\\",\\\"status.workspaceTrust.1702219447154\\\",\\\"status.workspaceTrust.1974c01a04e9fb944bd4f1a82ca09dc8\\\",\\\"status.workspaceTrust.def54cab8d4a6e549e1f47bb09d0f1ef\\\",\\\"status.workspaceTrust.1702367375686\\\",\\\"status.workspaceTrust.ec3c8056623e06582ce2f12803d7f641\\\",\\\"status.workspaceTrust.1702963414240\\\",\\\"status.workspaceTrust.1702963631062\\\",\\\"status.workspaceTrust.10584c5816ca61f7d61254e4b6edd600\\\",\\\"status.workspaceTrust.6c24f6af0542e27b6ac97812ef0080a7\\\",\\\"status.workspaceTrust.1704722246220\\\",\\\"status.workspaceTrust.bde2d5bce23dc0a0df7623d49e8f91d1\\\",\\\"status.workspaceTrust.1704731260124\\\",\\\"status.workspaceTrust.41104e5f7229256fee76cf680c816ef4\\\",\\\"status.workspaceTrust.1704781123987\\\",\\\"status.workspaceTrust.1704909026947\\\",\\\"status.workspaceTrust.3dd280dcfd82bc8fbaa01821c3c50cfd\\\",\\\"status.workspaceTrust.1704990267850\\\",\\\"status.workspaceTrust.1704990705946\\\",\\\"status.workspaceTrust.2ae5c055cd9817df49c46c4965b3b5a3\\\",\\\"status.workspaceTrust.39b4bc2270461a694f3033465b59cc9b\\\",\\\"status.workspaceTrust.1705250360555\\\",\\\"status.workspaceTrust.1705250439443\\\",\\\"status.workspaceTrust.3a7bba5092a1c067f1514896753534f4\\\",\\\"status.workspaceTrust.1705250470228\\\",\\\"status.workspaceTrust.1705250508580\\\",\\\"status.workspaceTrust.1705312333594\\\",\\\"status.workspaceTrust.1705314055218\\\",\\\"status.workspaceTrust.1705329153157\\\",\\\"status.workspaceTrust.1705329191765\\\",\\\"status.workspaceTrust.8d73b1fd7a4545ce456d235c4916cc17\\\",\\\"status.workspaceTrust.1705821609461\\\",\\\"status.workspaceTrust.7c506dac9d190d2862f7c771e346735a\\\",\\\"status.workspaceTrust.1706360308298\\\",\\\"status.workspaceTrust.7fba11c6a8c0097db876d888e8a400dc\\\",\\\"status.workspaceTrust.1706366597558\\\",\\\"status.workspaceTrust.1706373330148\\\",\\\"status.workspaceTrust.1706456706058\\\",\\\"status.workspaceTrust.1706461606198\\\",\\\"status.workspaceTrust.1706615862363\\\",\\\"status.workspaceTrust.7dc1fe952575a207b0875934b833ddb5\\\",\\\"status.workspaceTrust.1706625013463\\\",\\\"status.workspaceTrust.373041a6be3d055404f64ea95d4c4ac1\\\",\\\"status.workspaceTrust.cf931d07150526c98061ffe6ccfcde33\\\",\\\"status.workspaceTrust.aaba0513ab878067e1b3e21481ef7c32\\\",\\\"status.workspaceTrust.1706872968307\\\",\\\"status.workspaceTrust.1707151784408\\\",\\\"status.workspaceTrust.69174b31a4d4fedc3fa117dd09d003ab\\\",\\\"status.workspaceTrust.0ef28e245238859b5fbf9273908ba139\\\",\\\"status.workspaceTrust.1707471752259\\\",\\\"status.workspaceTrust.33d5538c12b8aef6cbfdbf29588b62da\\\",\\\"status.workspaceTrust.1707471987779\\\",\\\"status.workspaceTrust.c5fd7c3dae37973ad879973aff0ffadf\\\",\\\"status.workspaceTrust.1707503298534\\\",\\\"status.workspaceTrust.bba2da01ae71ce19c52283f54af35cbb\\\",\\\"status.workspaceTrust.1707538968112\\\",\\\"status.workspaceTrust.8c61bf1c291534213b7eaecf52e1b0cc\\\",\\\"status.workspaceTrust.1707542105532\\\",\\\"status.workspaceTrust.1707566277394\\\",\\\"status.workspaceTrust.1707595347938\\\",\\\"status.workspaceTrust.8b89f57f25db8a4c528dffff8a7f6e1c\\\",\\\"status.workspaceTrust.1707643856976\\\",\\\"status.workspaceTrust.1708721287068\\\",\\\"status.workspaceTrust.28b2567ca94d1437a0abca9b57783ad9\\\",\\\"status.workspaceTrust.1708721391416\\\",\\\"status.workspaceTrust.b6f3c41a4826af2f10b036ff2cb2822e\\\",\\\"status.workspaceTrust.1708787997194\\\",\\\"status.workspaceTrust.1708871424688\\\",\\\"status.workspaceTrust.1708871710222\\\",\\\"status.workspaceTrust.1708977526400\\\",\\\"status.workspaceTrust.1709303679968\\\",\\\"status.workspaceTrust.1709576615230\\\",\\\"status.workspaceTrust.1709584715366\\\",\\\"status.workspaceTrust.1709746708235\\\",\\\"status.workspaceTrust.1709758869436\\\",\\\"status.workspaceTrust.1709803902836\\\",\\\"status.workspaceTrust.02361f5e116623def1b0c77eee0c6b5e\\\",\\\"status.workspaceTrust.1709808065126\\\",\\\"status.workspaceTrust.1709820879060\\\",\\\"status.workspaceTrust.1709832623375\\\",\\\"status.workspaceTrust.1709972101241\\\",\\\"status.workspaceTrust.1710101142056\\\",\\\"status.workspaceTrust.acca5eb634d079a654dca4c60c91926f\\\",\\\"status.workspaceTrust.94c309223f6281fba1ad4232cd616814\\\",\\\"status.workspaceTrust.29d042ad3eb91bcd73e144cc1a48e5b8\\\",\\\"status.workspaceTrust.1710372116753\\\",\\\"status.workspaceTrust.1710513325824\\\",\\\"status.workspaceTrust.1711039523467\\\",\\\"status.workspaceTrust.bea2e3076a5a0f7ee73c5c7404ba0d4d\\\",\\\"status.workspaceTrust.1711241329731\\\",\\\"status.workspaceTrust.196df8e909766d8818930a89349bd588\\\",\\\"status.workspaceTrust.3070617ca21794b88907e8032b7589a9\\\",\\\"status.workspaceTrust.1711621479435\\\",\\\"status.workspaceTrust.1711730177196\\\",\\\"status.workspaceTrust.db40361194461c9443f1384789f53207\\\",\\\"status.workspaceTrust.1711739223134\\\",\\\"status.workspaceTrust.f30d416a363640878f57de248de803ff\\\",\\\"status.workspaceTrust.1711796606002\\\",\\\"status.workspaceTrust.1713337620883\\\",\\\"status.workspaceTrust.1713509123771\\\",\\\"status.workspaceTrust.7dc8d1db76246a891d979d892141d669\\\",\\\"status.workspaceTrust.1713769511516\\\",\\\"status.workspaceTrust.1714327839953\\\",\\\"status.workspaceTrust.1714334952045\\\",\\\"status.workspaceTrust.7411d4e2afc71a0e83139710c243b640\\\",\\\"status.workspaceTrust.eede7a8f8db6864cbd9220fbcd08f809\\\",\\\"status.workspaceTrust.1714486203329\\\",\\\"status.workspaceTrust.56db6f53b66b8069f28a422c22b22188\\\",\\\"status.workspaceTrust.1714486944095\\\",\\\"status.workspaceTrust.50adf65a28dd44ca92b791ca2e499f38\\\",\\\"status.workspaceTrust.1714487980716\\\",\\\"status.workspaceTrust.1714649562054\\\",\\\"status.workspaceTrust.83c682e4f5050dc6ba4e58246b78940c\\\",\\\"status.workspaceTrust.1715274272331\\\",\\\"status.workspaceTrust.1b7a0f428a18d36c30188f1fc0743dfa\\\",\\\"status.workspaceTrust.1715332806283\\\",\\\"status.workspaceTrust.1715351736966\\\",\\\"status.workspaceTrust.1715430661944\\\",\\\"status.workspaceTrust.99e61566fe429a81ea1be2e9adc59080\\\",\\\"status.workspaceTrust.6c77afd58e461511ed549645e58449e4\\\",\\\"status.workspaceTrust.1715783382181\\\",\\\"status.workspaceTrust.1715801356782\\\",\\\"status.workspaceTrust.8c8edb0e69e038c11fc0ae7322020a81\\\",\\\"status.workspaceTrust.764e8fac03648b3b9b04d7d510a4b005\\\",\\\"status.workspaceTrust.1716388311808\\\",\\\"status.workspaceTrust.1716469372979\\\",\\\"status.workspaceTrust.1716639071188\\\",\\\"status.workspaceTrust.1716642906774\\\",\\\"status.workspaceTrust.d97913494610cdac277f999acec4a4ab\\\",\\\"status.workspaceTrust.1716645795309\\\",\\\"status.workspaceTrust.8d1b2b3bb7de53d3d9b246883fc6cae1\\\",\\\"status.workspaceTrust.1716649656415\\\",\\\"status.workspaceTrust.1716911514130\\\",\\\"status.workspaceTrust.e19863e877a1f00059ae98ba8e86305d\\\",\\\"status.workspaceTrust.1716928235250\\\",\\\"status.workspaceTrust.1716993357401\\\",\\\"status.workspaceTrust.1717436753548\\\",\\\"status.workspaceTrust.803efdd95f5bca311f9ee473a2344ae1\\\",\\\"status.workspaceTrust.4c0a13fa2e85499a087d523fbfbdc713\\\",\\\"status.workspaceTrust.1719304996432\\\",\\\"status.workspaceTrust.0d4c29258fe368e03e0a58cf332c7857\\\",\\\"status.workspaceTrust.b374330965baa5f76bc3c003e3a64c5b\\\",\\\"status.workspaceTrust.1720531105651\\\",\\\"status.workspaceTrust.64b2ee88d07119784ecc5ec847c73036\\\",\\\"status.workspaceTrust.c9ad1c38b90d80805723044660964aaa\\\",\\\"status.workspaceTrust.914ecca4a75467bb54a55ed03d723d24\\\",\\\"status.workspaceTrust.5a2761d5d12870b9d7db9ef198107e29\\\",\\\"status.workspaceTrust.1722316827221\\\",\\\"status.workspaceTrust.1722318809152\\\",\\\"status.workspaceTrust.1722319079601\\\",\\\"status.workspaceTrust.1723111096708\\\",\\\"status.workspaceTrust.1723198165686\\\",\\\"status.workspaceTrust.db5eae47e2c9f1d6fab7cf0ea2caac23\\\",\\\"status.workspaceTrust.1723200514536\\\",\\\"status.workspaceTrust.c0c39604159ef6426816869e4efed31c\\\",\\\"status.workspaceTrust.1723358450217\\\",\\\"status.workspaceTrust.04898e1cbae5b32e07c604f6056daf96\\\",\\\"status.workspaceTrust.1723744257844\\\",\\\"status.workspaceTrust.605a4d5270f4cbc6bdb185c48e3f318d\\\",\\\"status.workspaceTrust.1724755352626\\\",\\\"status.workspaceTrust.e1591926aa915aaea8ac558a1dbc0960\\\",\\\"status.workspaceTrust.1724869319597\\\",\\\"status.workspaceTrust.e44f0bc1527df4811025c6b4313fecfd\\\",\\\"status.workspaceTrust.1725032176125\\\",\\\"status.workspaceTrust.413ce220cdd1ab33229ea67bfe4672d2\\\",\\\"status.workspaceTrust.1725102462640\\\",\\\"status.workspaceTrust.d447a86cce08fef5e0984277ac43a2ef\\\",\\\"status.workspaceTrust.f42af700edf712bbcc96681ca540ce28\\\",\\\"status.workspaceTrust.1725341754772\\\",\\\"status.workspaceTrust.8f13a8aa23f07d87e942b1378d61d48b\\\",\\\"status.workspaceTrust.1725478257364\\\",\\\"status.workspaceTrust.74023c4f230facd0836d076f92e2d2c5\\\",\\\"status.workspaceTrust.fc708f61e8bf67dbdf54084ea1e087ee\\\",\\\"status.workspaceTrust.5921dea019e39c9d1551664905408c14\\\",\\\"status.workspaceTrust.1725816062646\\\",\\\"status.workspaceTrust.71ae9c35cb8b5f7c67cb812ab7142231\\\",\\\"status.workspaceTrust.52cf2523b9d500a0b4766629b581c3a5\\\",\\\"status.workspaceTrust.1726103250274\\\",\\\"status.workspaceTrust.1726133768693\\\",\\\"status.workspaceTrust.1726159586386\\\",\\\"status.workspaceTrust.468ce047ce23db1c3d2bf35ef41093a7\\\",\\\"status.workspaceTrust.057b9aed987664562980ca55be2817b6\\\",\\\"status.workspaceTrust.1726499876028\\\",\\\"status.workspaceTrust.1726548044707\\\",\\\"status.workspaceTrust.dda8a92725e0051b67f675ae7dd95d0b\\\",\\\"status.workspaceTrust.1726582019361\\\",\\\"status.workspaceTrust.be818a222d72f5686a4439325e2e3c3e\\\",\\\"status.workspaceTrust.1726657061942\\\",\\\"status.workspaceTrust.1726734542114\\\",\\\"status.workspaceTrust.1726803379302\\\",\\\"status.workspaceTrust.1726839103000\\\",\\\"status.workspaceTrust.1726839460220\\\",\\\"status.workspaceTrust.889e2dd3a82042a749121202740843a4\\\",\\\"status.workspaceTrust.1726892035523\\\",\\\"status.workspaceTrust.1726892063102\\\",\\\"status.workspaceTrust.f030c44fc49fa635109861249bf4cf42\\\",\\\"status.workspaceTrust.1727156474880\\\",\\\"status.workspaceTrust.1727344566780\\\",\\\"status.workspaceTrust.1727437736439\\\",\\\"status.workspaceTrust.1727594330373\\\",\\\"status.workspaceTrust.7d6f4c59383b5b33a8b33845154ea338\\\",\\\"status.workspaceTrust.1727629678001\\\",\\\"status.workspaceTrust.1727629711992\\\",\\\"status.workspaceTrust.1727685623302\\\",\\\"status.workspaceTrust.92e283cf5cbeeb3b6bafe3796e9a719f\\\",\\\"status.workspaceTrust.1727720320334\\\",\\\"status.workspaceTrust.1727799659669\\\",\\\"status.workspaceTrust.1727850280682\\\",\\\"status.workspaceTrust.1727937056872\\\",\\\"status.workspaceTrust.1727937062349\\\",\\\"status.workspaceTrust.1728030589431\\\",\\\"status.workspaceTrust.1728075395690\\\",\\\"status.workspaceTrust.1728309500038\\\",\\\"status.workspaceTrust.1728368695898\\\",\\\"status.workspaceTrust.b31871db8ada15e7d0b6b2bc5b5ff774\\\",\\\"status.workspaceTrust.1728455634057\\\",\\\"status.workspaceTrust.1728751305091\\\",\\\"status.workspaceTrust.1728927322733\\\",\\\"status.workspaceTrust.1729264013670\\\",\\\"status.workspaceTrust.1729281704200\\\",\\\"status.workspaceTrust.80ffe52c5e4cd872bc0999afe7983fe8\\\"]\",\"colorThemeData\":\"{\\\"id\\\":\\\"vs-dark teabyii-ayu-ayu-mirage-bordered-json\\\",\\\"label\\\":\\\"Ayu Mirage Bordered\\\",\\\"settingsId\\\":\\\"Ayu Mirage Bordered\\\",\\\"themeTokenColors\\\":[{\\\"settings\\\":{\\\"background\\\":\\\"#1f2430\\\",\\\"foreground\\\":\\\"#cccac2\\\"}},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#b8cfe680\\\"},\\\"scope\\\":[\\\"comment\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#d5ff80\\\"},\\\"scope\\\":[\\\"string\\\",\\\"constant.other.symbol\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#95e6cb\\\"},\\\"scope\\\":[\\\"string.regexp\\\",\\\"constant.character\\\",\\\"constant.other\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#dfbfff\\\"},\\\"scope\\\":[\\\"constant.numeric\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#dfbfff\\\"},\\\"scope\\\":[\\\"constant.language\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cccac2\\\"},\\\"scope\\\":[\\\"variable\\\",\\\"variable.parameter.function-call\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f28779\\\"},\\\"scope\\\":[\\\"variable.member\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"variable.language\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffad66\\\"},\\\"scope\\\":[\\\"storage\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffad66\\\"},\\\"scope\\\":[\\\"keyword\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f29e74\\\"},\\\"scope\\\":[\\\"keyword.operator\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cccac2b3\\\"},\\\"scope\\\":[\\\"punctuation.separator\\\",\\\"punctuation.terminator\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cccac2\\\"},\\\"scope\\\":[\\\"punctuation.section\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f29e74\\\"},\\\"scope\\\":[\\\"punctuation.accessor\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffad66\\\"},\\\"scope\\\":[\\\"punctuation.definition.template-expression\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffad66\\\"},\\\"scope\\\":[\\\"punctuation.section.embedded\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cccac2\\\"},\\\"scope\\\":[\\\"meta.embedded\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#73d0ff\\\"},\\\"scope\\\":[\\\"source.java storage.type\\\",\\\"source.haskell storage.type\\\",\\\"source.c storage.type\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"entity.other.inherited-class\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffad66\\\"},\\\"scope\\\":[\\\"storage.type.function\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"source.java storage.type.primitive\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffd173\\\"},\\\"scope\\\":[\\\"entity.name.function\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#dfbfff\\\"},\\\"scope\\\":[\\\"variable.parameter\\\",\\\"meta.parameter\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffd173\\\"},\\\"scope\\\":[\\\"variable.function\\\",\\\"variable.annotation\\\",\\\"meta.function-call.generic\\\",\\\"support.function.go\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f28779\\\"},\\\"scope\\\":[\\\"support.function\\\",\\\"support.macro\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#d5ff80\\\"},\\\"scope\\\":[\\\"entity.name.import\\\",\\\"entity.name.package\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#73d0ff\\\"},\\\"scope\\\":[\\\"entity.name\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"entity.name.tag\\\",\\\"meta.tag.sgml\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#73d0ff\\\"},\\\"scope\\\":[\\\"support.class.component\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#5ccfe680\\\"},\\\"scope\\\":[\\\"punctuation.definition.tag.end\\\",\\\"punctuation.definition.tag.begin\\\",\\\"punctuation.definition.tag\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffd173\\\"},\\\"scope\\\":[\\\"entity.other.attribute-name\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#f29e74\\\"},\\\"scope\\\":[\\\"support.constant\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"support.type\\\",\\\"support.class\\\",\\\"source.go storage.type\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffdfb3\\\"},\\\"scope\\\":[\\\"meta.decorator variable.other\\\",\\\"meta.decorator punctuation.decorator\\\",\\\"storage.type.annotation\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ff6666\\\"},\\\"scope\\\":[\\\"invalid\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#c594c5\\\"},\\\"scope\\\":[\\\"meta.diff\\\",\\\"meta.diff.header\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffd173\\\"},\\\"scope\\\":[\\\"source.ruby variable.other.readwrite\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#73d0ff\\\"},\\\"scope\\\":[\\\"source.css entity.name.tag\\\",\\\"source.sass entity.name.tag\\\",\\\"source.scss entity.name.tag\\\",\\\"source.less entity.name.tag\\\",\\\"source.stylus entity.name.tag\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b8cfe680\\\"},\\\"scope\\\":[\\\"source.css support.type\\\",\\\"source.sass support.type\\\",\\\"source.scss support.type\\\",\\\"source.less support.type\\\",\\\"source.stylus support.type\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"normal\\\",\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"support.type.property-name\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b8cfe680\\\"},\\\"scope\\\":[\\\"constant.numeric.line-number.find-in-files - match\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffad66\\\"},\\\"scope\\\":[\\\"constant.numeric.line-number.match\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#d5ff80\\\"},\\\"scope\\\":[\\\"entity.name.filename.find-in-files\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ff6666\\\"},\\\"scope\\\":[\\\"message.error\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold\\\",\\\"foreground\\\":\\\"#d5ff80\\\"},\\\"scope\\\":[\\\"markup.heading\\\",\\\"markup.heading entity.name\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"markup.underline.link\\\",\\\"string.other.link\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#f28779\\\"},\\\"scope\\\":[\\\"markup.italic\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold\\\",\\\"foreground\\\":\\\"#f28779\\\"},\\\"scope\\\":[\\\"markup.bold\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold italic\\\"},\\\"scope\\\":[\\\"markup.italic markup.bold\\\",\\\"markup.bold markup.italic\\\"]},{\\\"settings\\\":{\\\"background\\\":\\\"#cccac205\\\"},\\\"scope\\\":[\\\"markup.raw\\\"]},{\\\"settings\\\":{\\\"background\\\":\\\"#cccac20f\\\"},\\\"scope\\\":[\\\"markup.raw.inline\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold\\\",\\\"background\\\":\\\"#cccac20f\\\",\\\"foreground\\\":\\\"#b8cfe680\\\"},\\\"scope\\\":[\\\"meta.separator\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#95e6cb\\\",\\\"fontStyle\\\":\\\"italic\\\"},\\\"scope\\\":[\\\"markup.quote\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffd173\\\"},\\\"scope\\\":[\\\"markup.list punctuation.definition.list.begin\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#87d96c\\\"},\\\"scope\\\":[\\\"markup.inserted\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#80bfff\\\"},\\\"scope\\\":[\\\"markup.changed\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f27983\\\"},\\\"scope\\\":[\\\"markup.deleted\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#ffdfb3\\\"},\\\"scope\\\":[\\\"markup.strike\\\"]},{\\\"settings\\\":{\\\"background\\\":\\\"#cccac20f\\\",\\\"foreground\\\":\\\"#5ccfe6\\\"},\\\"scope\\\":[\\\"markup.table\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f29e74\\\"},\\\"scope\\\":[\\\"text.html.markdown markup.inline.raw\\\"]},{\\\"settings\\\":{\\\"background\\\":\\\"#b8cfe680\\\",\\\"foreground\\\":\\\"#b8cfe680\\\"},\\\"scope\\\":[\\\"text.html.markdown meta.dummy.line-break\\\"]},{\\\"settings\\\":{\\\"background\\\":\\\"#cccac2\\\",\\\"foreground\\\":\\\"#b8cfe680\\\"},\\\"scope\\\":[\\\"punctuation.definition.markdown\\\"]}],\\\"semanticTokenRules\\\":[{\\\"_selector\\\":\\\"parameter.label\\\",\\\"_style\\\":{\\\"_foreground\\\":\\\"#cccac2\\\",\\\"_bold\\\":null,\\\"_underline\\\":null,\\\"_italic\\\":null,\\\"_strikethrough\\\":null}}],\\\"extensionData\\\":{\\\"_extensionId\\\":\\\"teabyii.ayu\\\",\\\"_extensionIsBuiltin\\\":false,\\\"_extensionName\\\":\\\"ayu\\\",\\\"_extensionPublisher\\\":\\\"teabyii\\\"},\\\"themeSemanticHighlighting\\\":true,\\\"colorMap\\\":{\\\"focusBorder\\\":\\\"#ffcc66b3\\\",\\\"foreground\\\":\\\"#707a8c\\\",\\\"widget.shadow\\\":\\\"#12151cb3\\\",\\\"selection.background\\\":\\\"#409fff40\\\",\\\"icon.foreground\\\":\\\"#707a8c\\\",\\\"errorForeground\\\":\\\"#ff6666\\\",\\\"descriptionForeground\\\":\\\"#707a8c\\\",\\\"textBlockQuote.background\\\":\\\"#1c212b\\\",\\\"textLink.foreground\\\":\\\"#ffcc66\\\",\\\"textLink.activeForeground\\\":\\\"#ffcc66\\\",\\\"textPreformat.foreground\\\":\\\"#cccac2\\\",\\\"button.background\\\":\\\"#ffcc66\\\",\\\"button.foreground\\\":\\\"#805500\\\",\\\"button.hoverBackground\\\":\\\"#fac761\\\",\\\"button.secondaryBackground\\\":\\\"#707a8c33\\\",\\\"button.secondaryForeground\\\":\\\"#cccac2\\\",\\\"button.secondaryHoverBackground\\\":\\\"#707a8c80\\\",\\\"dropdown.background\\\":\\\"#242936\\\",\\\"dropdown.foreground\\\":\\\"#707a8c\\\",\\\"dropdown.border\\\":\\\"#707a8c45\\\",\\\"input.background\\\":\\\"#242936\\\",\\\"input.border\\\":\\\"#707a8c45\\\",\\\"input.foreground\\\":\\\"#cccac2\\\",\\\"input.placeholderForeground\\\":\\\"#707a8c80\\\",\\\"inputOption.activeBorder\\\":\\\"#ffcc664d\\\",\\\"inputOption.activeBackground\\\":\\\"#ffcc6633\\\",\\\"inputOption.activeForeground\\\":\\\"#ffcc66\\\",\\\"inputValidation.errorBackground\\\":\\\"#242936\\\",\\\"inputValidation.errorBorder\\\":\\\"#ff6666\\\",\\\"inputValidation.infoBackground\\\":\\\"#1f2430\\\",\\\"inputValidation.infoBorder\\\":\\\"#5ccfe6\\\",\\\"inputValidation.warningBackground\\\":\\\"#1f2430\\\",\\\"inputValidation.warningBorder\\\":\\\"#ffd173\\\",\\\"scrollbar.shadow\\\":\\\"#171b2400\\\",\\\"scrollbarSlider.background\\\":\\\"#707a8c66\\\",\\\"scrollbarSlider.hoverBackground\\\":\\\"#707a8c99\\\",\\\"scrollbarSlider.activeBackground\\\":\\\"#707a8cb3\\\",\\\"badge.background\\\":\\\"#ffcc6633\\\",\\\"badge.foreground\\\":\\\"#ffcc66\\\",\\\"progressBar.background\\\":\\\"#ffcc66\\\",\\\"list.activeSelectionBackground\\\":\\\"#63759926\\\",\\\"list.activeSelectionForeground\\\":\\\"#cccac2\\\",\\\"list.focusBackground\\\":\\\"#63759926\\\",\\\"list.focusForeground\\\":\\\"#cccac2\\\",\\\"list.focusOutline\\\":\\\"#63759926\\\",\\\"list.highlightForeground\\\":\\\"#ffcc66\\\",\\\"list.deemphasizedForeground\\\":\\\"#ff6666\\\",\\\"list.hoverBackground\\\":\\\"#63759926\\\",\\\"list.inactiveSelectionBackground\\\":\\\"#69758c1f\\\",\\\"list.inactiveSelectionForeground\\\":\\\"#707a8c\\\",\\\"list.invalidItemForeground\\\":\\\"#707a8c4d\\\",\\\"list.errorForeground\\\":\\\"#ff6666\\\",\\\"tree.indentGuidesStroke\\\":\\\"#8a919959\\\",\\\"listFilterWidget.background\\\":\\\"#1c212b\\\",\\\"listFilterWidget.outline\\\":\\\"#ffcc66\\\",\\\"listFilterWidget.noMatchesOutline\\\":\\\"#ff6666\\\",\\\"list.filterMatchBackground\\\":\\\"#5c467266\\\",\\\"list.filterMatchBorder\\\":\\\"#69538066\\\",\\\"activityBar.background\\\":\\\"#242936\\\",\\\"activityBar.foreground\\\":\\\"#707a8ccc\\\",\\\"activityBar.inactiveForeground\\\":\\\"#707a8c99\\\",\\\"activityBar.border\\\":\\\"#171b24\\\",\\\"activityBar.activeBorder\\\":\\\"#ffcc66\\\",\\\"activityBarBadge.background\\\":\\\"#ffcc66\\\",\\\"activityBarBadge.foreground\\\":\\\"#805500\\\",\\\"sideBar.background\\\":\\\"#1f2430\\\",\\\"sideBar.border\\\":\\\"#171b24\\\",\\\"sideBarTitle.foreground\\\":\\\"#707a8c\\\",\\\"sideBarSectionHeader.background\\\":\\\"#1f2430\\\",\\\"sideBarSectionHeader.foreground\\\":\\\"#707a8c\\\",\\\"sideBarSectionHeader.border\\\":\\\"#171b24\\\",\\\"minimap.background\\\":\\\"#242936\\\",\\\"minimap.selectionHighlight\\\":\\\"#409fff40\\\",\\\"minimap.errorHighlight\\\":\\\"#ff6666\\\",\\\"minimap.findMatchHighlight\\\":\\\"#695380\\\",\\\"minimapGutter.addedBackground\\\":\\\"#87d96c\\\",\\\"minimapGutter.modifiedBackground\\\":\\\"#80bfff\\\",\\\"minimapGutter.deletedBackground\\\":\\\"#f27983\\\",\\\"editorGroup.border\\\":\\\"#171b24\\\",\\\"editorGroup.background\\\":\\\"#1c212b\\\",\\\"editorGroupHeader.noTabsBackground\\\":\\\"#1f2430\\\",\\\"editorGroupHeader.tabsBackground\\\":\\\"#1f2430\\\",\\\"editorGroupHeader.tabsBorder\\\":\\\"#171b24\\\",\\\"tab.activeBackground\\\":\\\"#242936\\\",\\\"tab.activeForeground\\\":\\\"#cccac2\\\",\\\"tab.border\\\":\\\"#171b24\\\",\\\"tab.activeBorder\\\":\\\"#242936\\\",\\\"tab.activeBorderTop\\\":\\\"#ffcc66\\\",\\\"tab.unfocusedActiveBorderTop\\\":\\\"#707a8c\\\",\\\"tab.inactiveBackground\\\":\\\"#1f2430\\\",\\\"tab.inactiveForeground\\\":\\\"#707a8c\\\",\\\"tab.unfocusedActiveForeground\\\":\\\"#707a8c\\\",\\\"tab.unfocusedInactiveForeground\\\":\\\"#707a8c\\\",\\\"editor.background\\\":\\\"#242936\\\",\\\"editor.foreground\\\":\\\"#cccac2\\\",\\\"editorLineNumber.foreground\\\":\\\"#8a919966\\\",\\\"editorLineNumber.activeForeground\\\":\\\"#8a9199cc\\\",\\\"editorCursor.foreground\\\":\\\"#ffcc66\\\",\\\"editor.inactiveSelectionBackground\\\":\\\"#409fff21\\\",\\\"editor.selectionBackground\\\":\\\"#409fff40\\\",\\\"editor.selectionHighlightBackground\\\":\\\"#87d96c26\\\",\\\"editor.selectionHighlightBorder\\\":\\\"#87d96c00\\\",\\\"editor.wordHighlightBackground\\\":\\\"#80bfff14\\\",\\\"editor.wordHighlightStrongBackground\\\":\\\"#87d96c14\\\",\\\"editor.wordHighlightBorder\\\":\\\"#80bfff80\\\",\\\"editor.wordHighlightStrongBorder\\\":\\\"#87d96c80\\\",\\\"editor.findMatchBackground\\\":\\\"#695380\\\",\\\"editor.findMatchBorder\\\":\\\"#695380\\\",\\\"editor.findMatchHighlightBackground\\\":\\\"#69538066\\\",\\\"editor.findMatchHighlightBorder\\\":\\\"#5c467266\\\",\\\"editor.findRangeHighlightBackground\\\":\\\"#69538040\\\",\\\"editor.rangeHighlightBackground\\\":\\\"#69538033\\\",\\\"editor.lineHighlightBackground\\\":\\\"#1a1f29\\\",\\\"editorLink.activeForeground\\\":\\\"#ffcc66\\\",\\\"editorWhitespace.foreground\\\":\\\"#8a919966\\\",\\\"editorIndentGuide.background\\\":\\\"#8a91992e\\\",\\\"editorIndentGuide.activeBackground\\\":\\\"#8a919959\\\",\\\"editorRuler.foreground\\\":\\\"#8a91992e\\\",\\\"editorCodeLens.foreground\\\":\\\"#b8cfe680\\\",\\\"editorBracketMatch.background\\\":\\\"#8a91994d\\\",\\\"editorBracketMatch.border\\\":\\\"#8a91994d\\\",\\\"editor.snippetTabstopHighlightBackground\\\":\\\"#87d96c33\\\",\\\"editorOverviewRuler.border\\\":\\\"#171b24\\\",\\\"editorOverviewRuler.modifiedForeground\\\":\\\"#80bfff\\\",\\\"editorOverviewRuler.addedForeground\\\":\\\"#87d96c\\\",\\\"editorOverviewRuler.deletedForeground\\\":\\\"#f27983\\\",\\\"editorOverviewRuler.errorForeground\\\":\\\"#ff6666\\\",\\\"editorOverviewRuler.warningForeground\\\":\\\"#ffcc66\\\",\\\"editorOverviewRuler.bracketMatchForeground\\\":\\\"#8a9199b3\\\",\\\"editorOverviewRuler.wordHighlightForeground\\\":\\\"#80bfff66\\\",\\\"editorOverviewRuler.wordHighlightStrongForeground\\\":\\\"#87d96c66\\\",\\\"editorOverviewRuler.findMatchForeground\\\":\\\"#695380\\\",\\\"editorError.foreground\\\":\\\"#ff6666\\\",\\\"editorWarning.foreground\\\":\\\"#ffcc66\\\",\\\"editorGutter.modifiedBackground\\\":\\\"#80bfffcc\\\",\\\"editorGutter.addedBackground\\\":\\\"#87d96ccc\\\",\\\"editorGutter.deletedBackground\\\":\\\"#f27983cc\\\",\\\"diffEditor.insertedTextBackground\\\":\\\"#87d96c1f\\\",\\\"diffEditor.removedTextBackground\\\":\\\"#f279831f\\\",\\\"diffEditor.diagonalFill\\\":\\\"#171b24\\\",\\\"editorWidget.background\\\":\\\"#1f2430\\\",\\\"editorWidget.border\\\":\\\"#171b24\\\",\\\"editorHoverWidget.background\\\":\\\"#1f2430\\\",\\\"editorHoverWidget.border\\\":\\\"#171b24\\\",\\\"editorSuggestWidget.background\\\":\\\"#1c212b\\\",\\\"editorSuggestWidget.border\\\":\\\"#171b24\\\",\\\"editorSuggestWidget.highlightForeground\\\":\\\"#ffcc66\\\",\\\"editorSuggestWidget.selectedBackground\\\":\\\"#63759926\\\",\\\"debugExceptionWidget.border\\\":\\\"#171b24\\\",\\\"debugExceptionWidget.background\\\":\\\"#1c212b\\\",\\\"editorMarkerNavigation.background\\\":\\\"#1c212b\\\",\\\"peekView.border\\\":\\\"#63759926\\\",\\\"peekViewTitle.background\\\":\\\"#63759926\\\",\\\"peekViewTitleDescription.foreground\\\":\\\"#707a8c\\\",\\\"peekViewTitleLabel.foreground\\\":\\\"#cccac2\\\",\\\"peekViewEditor.background\\\":\\\"#1f2430\\\",\\\"peekViewEditor.matchHighlightBackground\\\":\\\"#69538066\\\",\\\"peekViewEditor.matchHighlightBorder\\\":\\\"#5c467266\\\",\\\"peekViewResult.background\\\":\\\"#1f2430\\\",\\\"peekViewResult.fileForeground\\\":\\\"#cccac2\\\",\\\"peekViewResult.lineForeground\\\":\\\"#707a8c\\\",\\\"peekViewResult.matchHighlightBackground\\\":\\\"#69538066\\\",\\\"peekViewResult.selectionBackground\\\":\\\"#63759926\\\",\\\"panel.background\\\":\\\"#1f2430\\\",\\\"panel.border\\\":\\\"#171b24\\\",\\\"panelTitle.activeBorder\\\":\\\"#ffcc66\\\",\\\"panelTitle.activeForeground\\\":\\\"#cccac2\\\",\\\"panelTitle.inactiveForeground\\\":\\\"#707a8c\\\",\\\"statusBar.background\\\":\\\"#1f2430\\\",\\\"statusBar.foreground\\\":\\\"#707a8c\\\",\\\"statusBar.border\\\":\\\"#171b24\\\",\\\"statusBar.debuggingBackground\\\":\\\"#f29e74\\\",\\\"statusBar.debuggingForeground\\\":\\\"#242936\\\",\\\"statusBar.noFolderBackground\\\":\\\"#1c212b\\\",\\\"statusBarItem.activeBackground\\\":\\\"#707a8c33\\\",\\\"statusBarItem.hoverBackground\\\":\\\"#707a8c33\\\",\\\"statusBarItem.prominentBackground\\\":\\\"#171b24\\\",\\\"statusBarItem.prominentHoverBackground\\\":\\\"#00000030\\\",\\\"statusBarItem.remoteBackground\\\":\\\"#ffcc66\\\",\\\"statusBarItem.remoteForeground\\\":\\\"#805500\\\",\\\"titleBar.activeBackground\\\":\\\"#1f2430\\\",\\\"titleBar.activeForeground\\\":\\\"#cccac2\\\",\\\"titleBar.inactiveBackground\\\":\\\"#1f2430\\\",\\\"titleBar.inactiveForeground\\\":\\\"#707a8c\\\",\\\"titleBar.border\\\":\\\"#171b24\\\",\\\"extensionButton.prominentForeground\\\":\\\"#805500\\\",\\\"extensionButton.prominentBackground\\\":\\\"#ffcc66\\\",\\\"extensionButton.prominentHoverBackground\\\":\\\"#fac761\\\",\\\"pickerGroup.border\\\":\\\"#171b24\\\",\\\"pickerGroup.foreground\\\":\\\"#707a8c80\\\",\\\"debugToolBar.background\\\":\\\"#1c212b\\\",\\\"debugIcon.breakpointForeground\\\":\\\"#f29e74\\\",\\\"debugIcon.breakpointDisabledForeground\\\":\\\"#f29e7480\\\",\\\"debugConsoleInputIcon.foreground\\\":\\\"#ffcc66\\\",\\\"welcomePage.tileBackground\\\":\\\"#1f2430\\\",\\\"welcomePage.tileShadow\\\":\\\"#12151cb3\\\",\\\"welcomePage.progress.background\\\":\\\"#1a1f29\\\",\\\"welcomePage.buttonBackground\\\":\\\"#ffcc6666\\\",\\\"walkThrough.embeddedEditorBackground\\\":\\\"#1c212b\\\",\\\"gitDecoration.modifiedResourceForeground\\\":\\\"#80bfffb3\\\",\\\"gitDecoration.deletedResourceForeground\\\":\\\"#f27983b3\\\",\\\"gitDecoration.untrackedResourceForeground\\\":\\\"#87d96cb3\\\",\\\"gitDecoration.ignoredResourceForeground\\\":\\\"#707a8c80\\\",\\\"gitDecoration.conflictingResourceForeground\\\":\\\"#ff0000\\\",\\\"gitDecoration.submoduleResourceForeground\\\":\\\"#dfbfffb3\\\",\\\"settings.headerForeground\\\":\\\"#cccac2\\\",\\\"settings.modifiedItemIndicator\\\":\\\"#80bfff\\\",\\\"keybindingLabel.background\\\":\\\"#707a8c1a\\\",\\\"keybindingLabel.foreground\\\":\\\"#cccac2\\\",\\\"keybindingLabel.border\\\":\\\"#cccac21a\\\",\\\"keybindingLabel.bottomBorder\\\":\\\"#cccac21a\\\",\\\"terminal.background\\\":\\\"#1f2430\\\",\\\"terminal.foreground\\\":\\\"#cccac2\\\",\\\"terminal.ansiBlack\\\":\\\"#171b24\\\",\\\"terminal.ansiRed\\\":\\\"#ed8274\\\",\\\"terminal.ansiGreen\\\":\\\"#87d96c\\\",\\\"terminal.ansiYellow\\\":\\\"#facc6e\\\",\\\"terminal.ansiBlue\\\":\\\"#6dcbfa\\\",\\\"terminal.ansiMagenta\\\":\\\"#dabafa\\\",\\\"terminal.ansiCyan\\\":\\\"#90e1c6\\\",\\\"terminal.ansiWhite\\\":\\\"#c7c7c7\\\",\\\"terminal.ansiBrightBlack\\\":\\\"#686868\\\",\\\"terminal.ansiBrightRed\\\":\\\"#f28779\\\",\\\"terminal.ansiBrightGreen\\\":\\\"#d5ff80\\\",\\\"terminal.ansiBrightYellow\\\":\\\"#ffd173\\\",\\\"terminal.ansiBrightBlue\\\":\\\"#73d0ff\\\",\\\"terminal.ansiBrightMagenta\\\":\\\"#dfbfff\\\",\\\"terminal.ansiBrightCyan\\\":\\\"#95e6cb\\\",\\\"terminal.ansiBrightWhite\\\":\\\"#ffffff\\\"},\\\"watch\\\":false}\",\"themeUpdatedNotificationShown\":\"true\",\"workbench.view.extensions.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.extensions.installed.empty\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.installed\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.workspaceRecommendations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.popular\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.otherRecommendations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"extensions.recommendedList\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.enabled\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.disabled\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.marketplace\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchInstalled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchEnabled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchDisabled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchOutdated\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchBuiltin\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchWorkspaceUnsupported\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinFeatureExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinThemeExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinProgrammingLanguageExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.untrustedUnsupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.untrustedPartiallySupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.virtualUnsupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.virtualPartiallySupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchRecentlyUpdated\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.deprecatedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.local.installed\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.remote.installed\\\",\\\"isHidden\\\":false}]\",\"workbench.welcomePage.hiddenCategories\":\"[\\\"Intermediate\\\",\\\"vscode.typescript-language-features#nodejsWelcome\\\",\\\"ms-vscode.powershell#PowerShell\\\",\\\"vscjava.vscode-java-pack#javaWelcome\\\",\\\"Setup\\\",\\\"Beginner\\\",\\\"SetupWeb\\\",\\\"ms-vscode.remote-repositories#remoteRepositoriesWalkthrough\\\",\\\"ms-python.python#pythonWelcome\\\",\\\"eamodio.gitlens#gitlens.welcome\\\",\\\"eamodio.gitlens#gitlens.plus\\\",\\\"ms-toolsai.jupyter#jupyterWelcome\\\",\\\"ms-vscode.cpptools#cppWelcome\\\",\\\"ms-python.python#pythonWelcome2\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough\\\",\\\"ms-azuretools.vscode-docker#dockerStart\\\",\\\"eamodio.gitlens#welcome\\\",\\\"sourcegraph.cody-ai#welcome\\\"]\",\"workbench.welcomePage.walkthroughMetadata\":\"[[\\\"ms-vscode.cpptools#cppWelcome\\\",{\\\"firstSeen\\\":1642188173921,\\\"stepIDs\\\":[\\\"ms-vscode.cpptools#cppWelcome#awaiting.activation.mac\\\",\\\"ms-vscode.cpptools#cppWelcome#awaiting.activation.linux\\\",\\\"ms-vscode.cpptools#cppWelcome#awaiting.activation.windows\\\",\\\"ms-vscode.cpptools#cppWelcome#no.compilers.found.mac\\\",\\\"ms-vscode.cpptools#cppWelcome#no.compilers.found.linux\\\",\\\"ms-vscode.cpptools#cppWelcome#no.compilers.found.windows\\\",\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.mac\\\",\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.linux\\\",\\\"ms-vscode.cpptools#cppWelcome#verify.compiler.windows\\\",\\\"ms-vscode.cpptools#cppWelcome#create.cpp.file\\\",\\\"ms-vscode.cpptools#cppWelcome#relaunch.developer.command.prompt.windows\\\",\\\"ms-vscode.cpptools#cppWelcome#run.project.mac\\\",\\\"ms-vscode.cpptools#cppWelcome#run.project.linux\\\",\\\"ms-vscode.cpptools#cppWelcome#run.project.windows\\\",\\\"ms-vscode.cpptools#cppWelcome#customize.debugging.linux\\\",\\\"ms-vscode.cpptools#cppWelcome#customize.debugging.windows\\\",\\\"ms-vscode.cpptools#cppWelcome#customize.debugging.mac\\\"],\\\"manaullyOpened\\\":true}],[\\\"ms-vscode-remote.remote-wsl#wslWelcome\\\",{\\\"firstSeen\\\":1642191676561,\\\"stepIDs\\\":[\\\"explore.commands\\\",\\\"open.wslwindow\\\",\\\"create.project\\\",\\\"open.project\\\",\\\"linux.environment\\\",\\\"install.tools\\\",\\\"run.debug\\\",\\\"come.back\\\"],\\\"manaullyOpened\\\":false}],[\\\"eamodio.gitlens#gitlens.welcome\\\",{\\\"firstSeen\\\":1668964919768,\\\"stepIDs\\\":[\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.tutorial\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.experience\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.settings\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.currentLineBlame\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.gitCodeLens\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.revisionHistory\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.fileAnnotations\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.gitSideBarViews\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.hostingServiceIntegrations\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.gitCommandPalette\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.interactiveRebaseEditor\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.terminal\\\",\\\"eamodio.gitlens#gitlens.welcome#gitlens.welcome.plus\\\"],\\\"manaullyOpened\\\":true}],[\\\"eamodio.gitlens#gitlens.plus\\\",{\\\"firstSeen\\\":1668964919768,\\\"stepIDs\\\":[\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.intro\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.commitGraph\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.visualFileHistory\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.worktrees\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.richIntegrations\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.tryNow\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.trial\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.trial.extend\\\",\\\"eamodio.gitlens#gitlens.plus#gitlens.plus.trial.upgrade\\\"],\\\"manaullyOpened\\\":true}],[\\\"vscode.typescript-language-features#nodejsWelcome\\\",{\\\"firstSeen\\\":1668971527098,\\\"stepIDs\\\":[\\\"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows\\\",\\\"walkthroughs.nodejsWelcome.downloadNode.forLinux\\\",\\\"walkthroughs.nodejsWelcome.makeJsFile\\\",\\\"walkthroughs.nodejsWelcome.debugJsFile\\\",\\\"walkthroughs.nodejsWelcome.learnMoreAboutJs\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode.powershell#PowerShell\\\",{\\\"firstSeen\\\":1668971527098,\\\"stepIDs\\\":[\\\"install-windows\\\",\\\"install-mac\\\",\\\"install-linux\\\",\\\"file\\\",\\\"sessions\\\",\\\"ise\\\",\\\"terminal\\\",\\\"explore\\\",\\\"feedback\\\"],\\\"manaullyOpened\\\":false}],[\\\"vscjava.vscode-java-pack#javaWelcome\\\",{\\\"firstSeen\\\":1668971527098,\\\"stepIDs\\\":[\\\"vscjava.vscode-java-pack#javaWelcome#java.runtime\\\",\\\"vscjava.vscode-java-pack#javaWelcome#java.showProjectExplorer\\\",\\\"vscjava.vscode-java-pack#javaWelcome#java.showProjectExplorer.inactive\\\",\\\"vscjava.vscode-java-pack#javaWelcome#java.debugAndTest\\\",\\\"vscjava.vscode-java-pack#javaWelcome#java.extensions\\\",\\\"vscjava.vscode-java-pack#javaWelcome#java.more\\\",\\\"vscjava.vscode-java-pack#javaWelcome#java.moreForMac\\\"],\\\"manaullyOpened\\\":true}],[\\\"ms-python.python#pythonWelcome\\\",{\\\"firstSeen\\\":1669220554430,\\\"stepIDs\\\":[\\\"ms-python.python#pythonWelcome#python.createPythonFile\\\",\\\"ms-python.python#pythonWelcome#python.installPythonWin8\\\",\\\"ms-python.python#pythonWelcome#python.installPythonMac\\\",\\\"ms-python.python#pythonWelcome#python.installPythonLinux\\\",\\\"ms-python.python#pythonWelcome#python.selectInterpreter\\\",\\\"ms-python.python#pythonWelcome#python.createEnvironment\\\",\\\"ms-python.python#pythonWelcome#python.runAndDebug\\\",\\\"ms-python.python#pythonWelcome#python.learnMoreWithDS\\\"],\\\"manaullyOpened\\\":true}],[\\\"ms-python.python#pythonWelcomeWithEnv\\\",{\\\"firstSeen\\\":1669220554430,\\\"stepIDs\\\":[\\\"python.createPythonFile2\\\",\\\"python.installPythonWin82\\\",\\\"python.installPythonMac2\\\",\\\"python.installPythonLinux2\\\",\\\"python.createEnvironment\\\",\\\"python.selectInterpreter2\\\",\\\"python.runAndDebug2\\\",\\\"python.learnMoreWithDS2\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonDataScienceWelcome\\\",{\\\"firstSeen\\\":1669220554430,\\\"stepIDs\\\":[\\\"python.installJupyterExt\\\",\\\"python.createNewNotebook\\\",\\\"python.openInteractiveWindow\\\",\\\"python.dataScienceLearnMore\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-toolsai.jupyter#jupyterWelcome\\\",{\\\"firstSeen\\\":1669220736996,\\\"stepIDs\\\":[\\\"ms-toolsai.jupyter#jupyterWelcome#ipynb.newUntitledIpynb\\\",\\\"ms-toolsai.jupyter#jupyterWelcome#jupyter.selectKernel\\\",\\\"ms-toolsai.jupyter#jupyterWelcome#jupyter.exploreAndDebug\\\",\\\"ms-toolsai.jupyter#jupyterWelcome#jupyter.dataScienceLearnMore\\\"],\\\"manaullyOpened\\\":true}],[\\\"ms-vscode.remote-repositories#remoteRepositoriesWalkthrough\\\",{\\\"firstSeen\\\":1677747644768,\\\"stepIDs\\\":[\\\"editCommitRepo\\\",\\\"createGitHubPullRequest\\\",\\\"continueOn\\\",\\\"openRepo\\\",\\\"remoteIndicator\\\"],\\\"manaullyOpened\\\":false}],[\\\"vscode.typescript-language-features#tempNodejsWelcome\\\",{\\\"firstSeen\\\":1683276768195,\\\"stepIDs\\\":[],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonWelcome2\\\",{\\\"firstSeen\\\":1688914346790,\\\"stepIDs\\\":[\\\"python.createPythonFolder\\\",\\\"python.createPythonFile\\\",\\\"python.installPythonWin8\\\",\\\"python.installPythonMac\\\",\\\"python.installPythonLinux\\\",\\\"python.createEnvironment2\\\",\\\"python.runAndDebug\\\",\\\"python.learnMoreWithDS2\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode-remote.remote-wsl#wslWalkthrough\\\",{\\\"firstSeen\\\":1700224883987,\\\"stepIDs\\\":[\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#explore.commands\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#open.wslwindow\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#create.project\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#open.project\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#linux.environment\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#install.tools\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#run.debug\\\",\\\"ms-vscode-remote.remote-wsl#wslWalkthrough#come.back\\\"],\\\"manaullyOpened\\\":true}],[\\\"ms-azuretools.vscode-docker#dockerStart\\\",{\\\"firstSeen\\\":1706871526249,\\\"stepIDs\\\":[\\\"openFolder\\\",\\\"openFolderMac\\\",\\\"scaffold\\\",\\\"buildImage\\\",\\\"runContainer\\\",\\\"dockerExplorer\\\",\\\"pushImage\\\",\\\"azDeploy\\\",\\\"learn\\\"],\\\"manaullyOpened\\\":false}],[\\\"eamodio.gitlens#welcome\\\",{\\\"firstSeen\\\":1715778927561,\\\"stepIDs\\\":[\\\"get-started\\\",\\\"core-features\\\",\\\"pro-features\\\",\\\"pro-trial\\\",\\\"pro-upgrade\\\",\\\"pro-reactivate\\\",\\\"pro-paid\\\",\\\"visualize\\\",\\\"launchpad\\\",\\\"code-collab\\\",\\\"integrations\\\",\\\"more\\\"],\\\"manaullyOpened\\\":false}],[\\\"sourcegraph.cody-ai#welcome\\\",{\\\"firstSeen\\\":1726156387247,\\\"stepIDs\\\":[\\\"autocomplete\\\",\\\"chat\\\",\\\"edit\\\",\\\"fix\\\",\\\"commands\\\",\\\"keyboard\\\",\\\"ollama\\\"],\\\"manaullyOpened\\\":false}]]\",\"workbench.panel.alignment\":\"justify\",\"ces/skipSurvey\":\"1.63.2\",\"github-maharun0\":\"[{\\\"id\\\":\\\"vscode.github\\\",\\\"name\\\":\\\"GitHub\\\",\\\"allowed\\\":true},{\\\"id\\\":\\\"github.copilot\\\",\\\"name\\\":\\\"GitHub Copilot\\\",\\\"allowed\\\":true},{\\\"id\\\":\\\"eamodio.gitlens\\\",\\\"name\\\":\\\"GitLens — Git supercharged\\\",\\\"allowed\\\":true}]\",\"workbench.view.extension.gitlens.state.hidden\":\"[{\\\"id\\\":\\\"gitlens.views.welcome\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.home\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.contributors\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.workspaces\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.account\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.drafts\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.launchpad\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.gitlensInspect.state.hidden\":\"[{\\\"id\\\":\\\"gitlens.views.commitDetails\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.lineHistory\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.fileHistory\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.timeline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.searchAndCompare\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.pullRequest\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.gitlensPanel.state.hidden\":\"[{\\\"id\\\":\\\"gitlens.views.timeline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.graph\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gitlens.views.graphDetails\\\",\\\"isHidden\\\":false}]\",\"nps/lastSessionDate\":\"Mon Jan 17 2022\",\"nps/sessionCount\":\"3\",\"cpp.1.lastSessionDate\":\"Mon Jan 17 2022\",\"cpp.1.sessionCount\":\"3\",\"java.2.lastSessionDate\":\"Mon Jan 02 2023\",\"java.2.sessionCount\":\"28\",\"javascript.1.lastSessionDate\":\"Fri Jul 07 2023\",\"javascript.1.sessionCount\":\"159\",\"typescript.1.lastSessionDate\":\"Wed Dec 04 2024\",\"typescript.1.sessionCount\":\"526\",\"csharp.1.lastSessionDate\":\"Wed Dec 04 2024\",\"csharp.1.sessionCount\":\"441\",\"cpp.1.editedCount\":\"11\",\"cpp.1.editedDate\":\"Wed Jan 03 2024\",\"fileBasedRecommendations/promptedRecommendations\":\"{\\\"c\\\":[\\\"ms-vscode.cpptools-extension-pack\\\"],\\\"java\\\":[\\\"vscjava.vscode-java-pack\\\"],\\\"cpp\\\":[\\\"ms-vscode.cpptools-extension-pack\\\"],\\\"python\\\":[\\\"ms-python.python\\\"],\\\"dockerfile\\\":[\\\"ms-azuretools.vscode-docker\\\"],\\\"makefile\\\":[\\\"ms-vscode.makefile-tools\\\"],\\\"go\\\":[\\\"golang.go\\\"],\\\"powershell\\\":[\\\"ms-vscode.powershell\\\"],\\\"plaintext\\\":[\\\"tomoki1207.pdf\\\"]}\",\"workbench.view.debug.state.hidden\":\"[{\\\"id\\\":\\\"workbench.debug.welcome\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.variablesView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.watchExpressionsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.callStackView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.loadedScriptsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.breakPointsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsBrowserBreakpoints\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsExcludedCallers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"CppSshTargetsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"loadedModules\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"lldb.loadedModules\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"lldb.excludedCallers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsDebugNetworkTree\\\",\\\"isHidden\\\":false}]\",\"memento/workbench.editor.keybindings\":\"{\\\"searchHistory\\\":[\\\"second\\\",\\\"secondar\\\",\\\"secondary \\\",\\\"ta\\\",\\\"tab\\\",\\\"inde\\\",\\\"indend\\\",\\\"ind\\\",\\\"indent\\\",\\\"\\\\\\\"tab\\\\\\\"\\\",\\\"codes\\\",\\\"codesnap\\\",\\\"code\\\",\\\"fo\\\",\\\"crea\\\",\\\"creat\\\",\\\"create\\\",\\\"ex\\\",\\\"expl\\\",\\\"explo\\\",\\\"explor\\\",\\\"explorer\\\",\\\"explorer.\\\",\\\"explorer.new\\\",\\\"explorer.newfol\\\",\\\"explorer.newfolder\\\",\\\"\\\\\\\"ctrl+shift+n\\\\\\\"\\\",\\\"\\\\\\\"backspace\\\\\\\"\\\",\\\"\\\\\\\"ctrl+n ctrl+n\\\\\\\"\\\",\\\"\\\\\\\"enter\\\\\\\"\\\",\\\"\\\\\\\"ctrl+n\\\\\\\"\\\",\\\"\\\\\\\"backspace ctrl\\\\\\\"\\\",\\\"\\\\\\\"backspace ctrl+alt\\\\\\\"\\\",\\\"\\\\\\\"backspace ctrl+alt+n\\\\\\\"\\\",\\\"\\\\\\\"ctrl+alt+n\\\\\\\"\\\",\\\"\\\\\\\"ctrl+n ctrl+f\\\\\\\"\\\",\\\"\\\\\\\"ctrl+z\\\\\\\"\\\",\\\"\\\\\\\"ctrl+z win\\\\\\\"\\\",\\\"\\\\\\\"ctrl+z ctrl+v\\\\\\\"\\\",\\\"\\\\\\\"win\\\\\\\"\\\",\\\"explorer.newFolder\\\",\\\"\\\\\\\"ctrl+d\\\\\\\"\\\",\\\"add s\\\",\\\"add selecti\\\",\\\"add selection\\\",\\\"integra\\\",\\\"\\\\\\\"alt+`\\\\\\\"\\\",\\\"int\\\",\\\"integrated\\\",\\\"se\\\",\\\"searc\\\",\\\"search\\\",\\\"@command:editor.emmet.action.balanceIn\\\",\\\"@command:editor.emmet.action.\\\",\\\"@command:workbench.action.openSnippets\\\",\\\"\\\\\\\"ctrl+alt\\\\\\\"\\\",\\\"\\\\\\\"ctrl+alt+down\\\\\\\"\\\",\\\"line\\\",\\\"\\\\\\\"ctrl+g\\\\\\\"\\\",\\\"blo\\\",\\\"block\\\",\\\"sel\\\",\\\"select\\\",\\\"jupy\\\",\\\"f\\\",\\\"focus\\\",\\\"jupyt\\\",\\\"jupyter\\\",\\\"\\\\\\\"ctrl+enter backspace\\\\\\\"\\\",\\\"\\\\\\\"insert insert\\\\\\\"\\\",\\\"\\\\\\\"ctrl+enter ctrl+r\\\\\\\"\\\",\\\"\\\\\\\"ctrl\\\\\\\"\\\",\\\"\\\\\\\"ctrl+r\\\\\\\"\\\",\\\"\\\\\\\"ctrl+r ctrl+enter\\\\\\\"\\\",\\\"\\\\\\\"ctrl+enter\\\\\\\"\\\",\\\"\\\\\\\"shift+enter\\\\\\\"\\\",\\\"term\\\",\\\"\\\\\\\"f5\\\\\\\"\\\",\\\"python\\\",\\\"pythonter\\\",\\\"ru\\\",\\\"c\\\",\\\"clos\\\\\\\\\\\",\\\"p\\\",\\\"close\\\",\\\"terninm\\\",\\\"terni\\\",\\\"ter\\\",\\\"terminal\\\",\\\"panel\\\",\\\"kil\\\",\\\"kill\\\",\\\"kill \\\",\\\"close p\\\",\\\"close panel\\\",\\\"run\\\",\\\"go l\\\",\\\"go live\\\",\\\"run test\\\",\\\"folder\\\"]}\",\"javascript.1.editedCount\":\"10\",\"javascript.1.editedDate\":\"Wed Jul 05 2023\",\"expandSuggestionDocs\":\"true\",\"commandPalette.mru.cache\":\"{\\\"usesLRU\\\":true,\\\"entries\\\":[{\\\"key\\\":\\\"workbench.action.openApplicationSettingsJson\\\",\\\"value\\\":2},{\\\"key\\\":\\\"workbench.userDataSync.actions.downloadSyncActivity\\\",\\\"value\\\":7},{\\\"key\\\":\\\"workbench.action.openRawDefaultSettings\\\",\\\"value\\\":8},{\\\"key\\\":\\\"workbench.action.tasks.runTask\\\",\\\"value\\\":27},{\\\"key\\\":\\\"workbench.action.positionPanelBottom\\\",\\\"value\\\":29},{\\\"key\\\":\\\"workbench.action.openSnippets\\\",\\\"value\\\":47},{\\\"key\\\":\\\"editor.action.formatDocument\\\",\\\"value\\\":48},{\\\"key\\\":\\\"workbench.action.openSettingsJson\\\",\\\"value\\\":49}]}\",\"commandPalette.mru.counter\":\"50\",\"snippets.usageTimestamps\":\"[[\\\"cpp.json/Sieve of Eratosthenes\\\",1709320302535],[\\\"dart.json/Google Font Snippet\\\",1710073931272],[\\\"lib/snippets/generated.json/describeBlock\\\",1711142700886],[\\\"cpp.json/LCS - Longest Common Subsequence\\\",1712496815845],[\\\"cpp.json/2D vector\\\",1713512183725],[\\\"cpp.json/1D vector\\\",1713805479426],[\\\"cpp.json/Number of Divisors(sqrt)\\\",1714334022306],[\\\"cpp.json/Sum of Divisors(sqrt)\\\",1714489324808],[\\\"cpp.json/NoD sieve for [1, n]\\\",1714499236555],[\\\"cpp.json/SoD sieve for [1, n]\\\",1714499287030],[\\\"lib/snippets/generated.json/reactNativeFunctionalExportComponentWithStyles\\\",1715276449542],[\\\"lib/snippets/generated.json/reactArrowFunctionExportComponent\\\",1715288073673],[\\\"snippets/javascript.code-snippets/Log error to console\\\",1715288964847],[\\\"snippets/javascript.code-snippets/Try-Catch Statement\\\",1715337471154],[\\\"cpp.json/Double Inequality(eps)\\\",1715367761022],[\\\"snippets/javascript.code-snippets/Import Statement\\\",1716336791453],[\\\"lib/snippets/generated.json/reactFunctionMemoComponent\\\",1716814649617],[\\\"lib/snippets/generated.json/reactArrowFunctionComponent\\\",1716893832502],[\\\"lib/snippets/generated.json/reactFunctionalComponent\\\",1716895537078],[\\\"cpp.json/Segment Tree gpt\\\",1717711491256],[\\\"dart.json/Width Height Variable\\\",1721322230966],[\\\"snippets/modules.json/DllGetClassObject from the ctypes module\\\",1723521019329],[\\\"snippets/modules.json/Class from the symtable module\\\",1723521029450],[\\\"snippets/modules.json/new_class() from the types module\\\",1723521036512],[\\\"snippets/python_snippets.json/class\\\",1723521144913],[\\\"snippets/python_snippets.json/class=>with_attribute_1\\\",1723521193928],[\\\"snippets/python_snippets.json/createFileIfDoesNotExist\\\",1723523154384],[\\\"snippets/python_snippets.json/title\\\",1723523163057],[\\\"snippets/python_snippets.json/clear\\\",1723524171101],[\\\"snippets/python_snippets.json/reverse\\\",1723524473384],[\\\"python.json/Custom Python Class\\\",1723643969419],[\\\"snippets/python_snippets.json/input\\\",1723722348539],[\\\"snippets/python_snippets.json/split\\\",1723723250210],[\\\"snippets/python_snippets.json/tryexcept\\\",1723728838316],[\\\"snippets/python_snippets.json/writeExistFile\\\",1724691438935],[\\\"snippets/python_snippets.json/get\\\",1724692417697],[\\\"snippets/python_snippets.json/items\\\",1725107356144],[\\\"snippets/python_snippets.json/append\\\",1725752972068],[\\\"snippets/python_snippets.json/find\\\",1725814112714],[\\\"snippets/snippets.json/anonymousFunction\\\",1726333111178],[\\\"snippets/snippets.json/consoleLog\\\",1726339396190],[\\\"snippets/javascript.code-snippets/Function Statement\\\",1726373395983],[\\\"snippets/python_snippets.json/add\\\",1726736992506],[\\\"snippets/python_snippets.json/built_in.round=>_1\\\",1726839170181],[\\\"snippets/python_snippets.json/join\\\",1726856751937],[\\\"snippets/python_snippets.json/values\\\",1727727105140],[\\\"cpp.json/String Hash\\\",1728054716497],[\\\"cpp.json/Radius of even and odd length palindrome having center at i\\\",1728089212346],[\\\"cpp.json/grid\\\",1728131006872],[\\\"cpp.json/Counts all the subarrays with zero sum\\\",1728137458958],[\\\"cpp.json/Grid DFS\\\",1728141305828],[\\\"snippets/fortran90.json/Subroutine\\\",1728456276136],[\\\"snippets/fortran90.json/Program Skeleton\\\",1728457179596],[\\\"snippets/fortran90.json/Do Loop\\\",1728457298284],[\\\"snippets/fortran90.json/Function\\\",1728457436079],[\\\"cpp.json/Dijkstra using Priority Queue, O(m log n)\\\",1728684420482],[\\\"cpp.json/Grid BFS\\\",1728731226019],[\\\"cpp.json/Dijkstra using Priority Queue\\\",1728732140681],[\\\"snippets/python_snippets.json/maketrans\\\",1729264061951],[\\\"cpp.json/dfs\\\",1729282643922],[\\\"cpp.json/2 Heaps Technique\\\",1729461193879],[\\\"cpp.json/DFS\\\",1729477221454],[\\\"snippets/go.json/function declaration\\\",1729804923052],[\\\"snippets/python_snippets.json/function\\\",1730358219705],[\\\"cpp.json/Topological Sort (on DAG using DFS)\\\",1730507921758],[\\\"cpp.json/BFS\\\",1730509146621],[\\\"cpp.json/Topological sort (with bfs on DAG) aka Kahn's algorithm\\\",1730515671479],[\\\"cpp.json/Random Input Generator\\\",1730688834956],[\\\"cpp.json/KnapSack - Naive\\\",1730884909363],[\\\"cpp.json/modular inverse\\\",1731146868073],[\\\"snippets/python_snippets.json/upper\\\",1731211938083],[\\\"cpp.json/Prime Factorization Using Primes\\\",1731680047052],[\\\"cpp.json/Rabin-Karp Algorithm\\\",1731736759774],[\\\"cpp.json/Geometry Template(Sarwar vi)\\\",1731956735283],[\\\"cpp.json/Bit Stuff\\\",1732002440497],[\\\"cpp.json/for i loop\\\",1732033645169],[\\\"cpp.json/Policy Based Data Structure\\\",1732535529976],[\\\"cpp.json/Bitset\\\",1732539728967],[\\\"cpp.json/Binary Exponensiation\\\",1732739238895],[\\\"cpp.json/Segment Tree(Recursive)\\\",1732837857170],[\\\"cpp.json/Big Integer or int128\\\",1732838029205],[\\\"cpp.json/Priority Queue for pii\\\",1732838056320],[\\\"cpp.json/Merge Sort Tree\\\",1732838245157],[\\\"cpp.json/Merge Sort Tree with point update\\\",1732838282144],[\\\"cpp.json/Sparse Table\\\",1732838390145],[\\\"cpp.json/Sqrt Decomposition\\\",1732838482671],[\\\"cpp.json/Mo's Algo\\\",1732838850454],[\\\"cpp.json/Trie\\\",1732839245495],[\\\"cpp.json/Wavelet Tree\\\",1732842500031],[\\\"cpp.json/Disjoint Set Unit(DSU)\\\",1732842775217],[\\\"cpp.json/Trie for Bits\\\",1732843363591],[\\\"cpp.json/Suffix Array & LCP\\\",1732843493649],[\\\"cpp.json/Count all subarrays with sum k\\\",1733005840365],[\\\"cpp.json/PBDS Set | Order Statistics Tree\\\",1733007520138],[\\\"cpp.json/PBDS Multiset\\\",1733010954757],[\\\"cpp.json/Codeforces Snippet\\\",1733206855477],[\\\"cpp.json/Default CPP Snippet\\\",1733235426679],[\\\"cpp.json/Lazy Segment Tree\\\",1733239315394],[\\\"cpp.json/Aho Corasick\\\",1733253779012],[\\\"cpp.json/KMP\\\",1733254720262]]\",\"terminal.integrated.showTerminalConfigPrompt\":\"false\",\"workbench.view.extension.thunder-client.state.hidden\":\"[{\\\"id\\\":\\\"thunder-client-sidebar\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.sidebar-panel.state.hidden\":\"[{\\\"id\\\":\\\"postman-for-vscode.sidebar-panel\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.postman-console-view-container.state.hidden\":\"[{\\\"id\\\":\\\"postman-console-view\\\",\\\"isHidden\\\":false}]\",\"workbench.view.remote.state.hidden\":\"[{\\\"id\\\":\\\"targetsContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"detailsContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"devVolumes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sshHosts\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"targetsWsl\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github.codespaces.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github.codespaces.warnExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github.codespaces.performanceExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"remoteTargets\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"remoteHub.views.workspaceRepositories\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"~remote.helpPanel\\\",\\\"isHidden\\\":false}]\",\"ces/remindLaterDate\":\"Fri, 14 Jan 2022 20:22:02 GMT\",\"workbench.view.sync.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.sync.merges\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.sync.remoteActivity\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.sync.machines\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.sync.localActivity\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.sync.troubleshoot\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.sync.conflicts\\\",\\\"isHidden\\\":false}]\",\"remote.explorerType\":\"virtualfs\",\"workbench.view.extension.references-view.state.hidden\":\"[{\\\"id\\\":\\\"references-view.tree\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"CppReferencesView\\\",\\\"isHidden\\\":false}]\",\"nps/isCandidate\":\"false\",\"nps/skipVersion\":\"1.63.2\",\"workbench.view.extension.PowerShellCommandExplorer.state.hidden\":\"[{\\\"id\\\":\\\"PowerShellCommands\\\",\\\"isHidden\\\":false}]\",\"workbench.sideBar.position\":\"0\",\"workbench.activityBar.hidden\":\"false\",\"workbench.statusBar.hidden\":\"false\",\"workbench.auxiliarybar.pinnedPanels\":\"[{\\\"id\\\":\\\"workbench.panel.markers\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":1},{\\\"id\\\":\\\"workbench.panel.repl\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":2},{\\\"id\\\":\\\"workbench.panel.testResults\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"~remote.forwardedPortsContainer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":5},{\\\"id\\\":\\\"workbench.view.extension.gitlensPanel\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.extension.jupyter-variables\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":7},{\\\"id\\\":\\\"workbench.view.extension.postman-console-view-container\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":8},{\\\"id\\\":\\\"workbench.view.extension.cph-judge-view-container\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":9},{\\\"id\\\":\\\"workbench.panel.comments\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"workbench.panel.chatEditing\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":100},{\\\"id\\\":\\\"workbench.panel.chat\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":100},{\\\"id\\\":\\\"refactorPreview\\\",\\\"pinned\\\":true,\\\"visible\\\":false}]\",\"extensionsAssistant/fileExtensionsSuggestionIgnore\":\"[\\\"exe\\\",\\\"c (1)\\\"]\",\"fileBasedRecommendations/promptedFileExtensions\":\"[\\\"docx\\\",\\\"ans\\\",\\\"epub\\\",\\\"csv\\\"]\",\"cpp.1.isCandidate\":\"false\",\"cpp.1.skipVersion\":\"1.66.2\",\"workbench.view.extension.PowerShell.state.hidden\":\"[{\\\"id\\\":\\\"PowerShellCommands\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.cph-judge-view-container.state.hidden\":\"[{\\\"id\\\":\\\"cph.judgeView\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.vjudge.state.hidden\":\"[{\\\"id\\\":\\\"vjudgeinfo\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.test.state.hidden\":\"[{\\\"id\\\":\\\"workbench.view.testing\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.view.testCoverage\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"go.test.profile\\\",\\\"isHidden\\\":false}]\",\"java.2.editedCount\":\"10\",\"java.2.editedDate\":\"Sat Dec 31 2022\",\"views.customizations\":\"{\\\"viewContainerLocations\\\":{\\\"workbench.view.extension.cph-judge-view-container\\\":2,\\\"refactorPreview\\\":2,\\\"workbench.panel.repl\\\":2,\\\"workbench.panel.markers\\\":2,\\\"workbench.panel.output\\\":2,\\\"workbench.panel.testResults\\\":2,\\\"workbench.view.extension.gitlensPanel\\\":2,\\\"workbench.view.extension.jupyter-variables\\\":2,\\\"workbench.view.extension.postman-console-view-container\\\":2,\\\"~remote.forwardedPortsContainer\\\":2,\\\"workbench.panel.comments\\\":2,\\\"workbench.views.service.panel.da233af5-e572-4385-aecb-8127b8ead33b\\\":1},\\\"viewLocations\\\":{\\\"~remote.forwardedPorts\\\":\\\"terminal\\\",\\\"postman-console-view\\\":\\\"terminal\\\",\\\"workbench.panel.repl.view\\\":\\\"terminal\\\",\\\"workbench.panel.output\\\":\\\"terminal\\\",\\\"workbench.panel.markers.view\\\":\\\"terminal\\\",\\\"terminal\\\":\\\"workbench.views.service.panel.da233af5-e572-4385-aecb-8127b8ead33b\\\"},\\\"viewContainerBadgeEnablementStates\\\":{\\\"workbench.view.extension.gitlensInspect\\\":false}}\",\"memento/notebookGettingStarted2\":\"{\\\"hasOpenedNotebook\\\":true}\",\"workbench.view.extension.jupyter-variables.state.hidden\":\"[{\\\"id\\\":\\\"jupyterViewVariables\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"cell-tag\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.jupyter.state.hidden\":\"[{\\\"id\\\":\\\"cell-tag\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.github-pull-requests.state.hidden\":\"[{\\\"id\\\":\\\"github:login\\\",\\\"isHidden\\\":false,\\\"order\\\":0},{\\\"id\\\":\\\"pr:github\\\",\\\"isHidden\\\":false,\\\"order\\\":1},{\\\"id\\\":\\\"issues:github\\\",\\\"isHidden\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.view.search\\\",\\\"isHidden\\\":false,\\\"order\\\":2},{\\\"id\\\":\\\"github:conflictResolution\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"notifications:github\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.github-pull-request.state.hidden\":\"[{\\\"id\\\":\\\"github:createPullRequest\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:compareChanges\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"prStatus:github\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:activePullRequest\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:activePullRequest:welcome\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:createPullRequestWebview\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:compareChangesFiles\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github:compareChangesCommits\\\",\\\"isHidden\\\":false}]\",\"refactorPreview.hidden\":\"[{\\\"id\\\":\\\"refactorPreview\\\",\\\"isHidden\\\":false}]\",\"java.2.isCandidate\":\"false\",\"java.2.skipVersion\":\"1.74.2\",\"Comments.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.comments\\\",\\\"isHidden\\\":false}]\",\"gitlens+-maharun0\":\"[{\\\"id\\\":\\\"eamodio.gitlens\\\",\\\"name\\\":\\\"GitLens — Git supercharged\\\",\\\"allowed\\\":true}]\",\"workbench.view.extension.vscode-chatgpt-view-container.state.hidden\":\"[{\\\"id\\\":\\\"vscode-chatgpt.view\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.flutter.state.hidden\":\"[{\\\"id\\\":\\\"dartFlutterOutline\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dartFlutterSidebar\\\",\\\"isHidden\\\":false}]\",\"tabs-list-width-horizontal\":\"144\",\"workbench.view.extension.json-views.state.hidden\":\"[{\\\"id\\\":\\\"jsonOutline\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.objectExplorer.state.hidden\":\"[{\\\"id\\\":\\\"objectExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"queryHistory\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.dataworkspace.state.hidden\":\"[{\\\"id\\\":\\\"dataworkspace.views.main\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.sqltoolsActivityBarContainer.state.hidden\":\"[{\\\"id\\\":\\\"sqltoolsViewConnectionExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewBookmarksExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"sqltoolsViewHistoryExplorer\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.sqltoolsPanelContainer.state.hidden\":\"[{\\\"id\\\":\\\"sqltoolsViewConsoleMessages\\\",\\\"isHidden\\\":false}]\",\"sqltools-driver-credentials-'root' on 'test'\":\"[{\\\"id\\\":\\\"mtxr.sqltools-driver-mysql\\\",\\\"name\\\":\\\"SQLTools MySQL/MariaDB\\\",\\\"allowed\\\":true}]\",\"workbench.view.extension.chatgpt-vscode-view-container.state.hidden\":\"[{\\\"id\\\":\\\"chatgpt-vscode.view\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.cmake__viewContainer.state.hidden\":\"[{\\\"id\\\":\\\"cmake.outline\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.flutterbricks-sidebar-view.state.hidden\":\"[{\\\"id\\\":\\\"flutterbricks-sidebar\\\",\\\"isHidden\\\":false}]\",\"extensionsAssistant/deprecated\":\"[\\\"gencay.vscode-chatgpt\\\",\\\"ms-vscode.vscode-typescript-tslint-plugin\\\",\\\"msjsdiag.debugger-for-chrome\\\"]\",\"workbench.view.extension.kubernetesView.state.hidden\":\"[{\\\"id\\\":\\\"extension.vsKubernetesExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"extension.vsKubernetesHelmRepoExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"kubernetes.cloudExplorer\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.liveshare.state.hidden\":\"[{\\\"id\\\":\\\"liveshare.session\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.help\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.devtools\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.testResults.state.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.testResults.view\\\",\\\"isHidden\\\":false}]\",\"javascript.1.isCandidate\":\"false\",\"javascript.1.skipVersion\":\"1.79.2\",\"workbench.view.extension.chatgpt-activitybar.state.hidden\":\"[{\\\"id\\\":\\\"chatgpt.sidebar\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.figma.state.hidden\":\"[{\\\"id\\\":\\\"figma.views.login\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"figma.views.dummyLoginNotifications\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"figma.views.files\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"figma.views.notifications\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.chatSidebar.copilot.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.chat.view.copilot\\\",\\\"isHidden\\\":false}]\",\"userDataProfiles.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.profiles.export.preview\\\",\\\"isHidden\\\":false}]\",\"no-updates-running-as-admin\":\"true\",\"workbench.view.extension.snippet-explorer.state.hidden\":\"[{\\\"id\\\":\\\"snippetExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"easySnippets\\\",\\\"isHidden\\\":false}]\",\"extensionTips/promptedExecutableTips\":\"{\\\"wsl\\\":[\\\"ms-vscode-remote.remote-wsl\\\"],\\\"docker\\\":[\\\"ms-vscode-remote.remote-containers\\\"]}\",\"workbench.view.extension.gradleContainerView.state.hidden\":\"[{\\\"id\\\":\\\"gradleTasksView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gradleDefaultProjectsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"recentTasksView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"gradleDaemonsView\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.chatSidebar.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.chat.view.copilot\\\",\\\"isHidden\\\":false}]\",\"csharp.1.editedCount\":\"1\",\"csharp.1.editedDate\":\"Fri Jan 12 2024\",\"typescript.1.editedCount\":\"2\",\"typescript.1.editedDate\":\"Sat Feb 10 2024\",\"workbench.view.extension.dockerView.state.hidden\":\"[{\\\"id\\\":\\\"dockerContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerImages\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerRegistries\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerNetworks\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerVolumes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"vscode-docker.views.dockerContexts\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"vscode-docker.views.help\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.snippetsmanager-snippetsView.state.hidden\":\"[{\\\"id\\\":\\\"snippetsmanager-snippetsView-WorkspaceSnippetsExplorerView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"snippetsmanager-snippetsView-UserSnippetsExplorerView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"snippetsmanager-snippetsView-ExtensionSnippetsExplorerView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"snippetsmanager-snippetsView-HelpAndFeedback\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.snippets-manager-explorer.state.hidden\":\"[{\\\"id\\\":\\\"SnippetsManager\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.snippets-manager-sleek-snippetsView.state.hidden\":\"[{\\\"id\\\":\\\"snippets-manager-sleek-snippetsView-WorkspaceSnippetsExplorerView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"snippets-manager-sleek-snippetsView-UserSnippetsExplorerView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"snippets-manager-sleek-snippetsView-ExtensionSnippetsExplorerView\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.latex-workshop-activitybar.state.hidden\":\"[{\\\"id\\\":\\\"latex-workshop-commands\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"latex-workshop-structure\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"latex-workshop-snippet-view\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.makefile__viewContainer.state.hidden\":\"[{\\\"id\\\":\\\"makefile.outline\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.cody.state.hidden\":\"[{\\\"id\\\":\\\"cody.chat\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.vscode-llvm.state.hidden\":\"[{\\\"id\\\":\\\"llvm-control\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"llvm-pipeline-view\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"llvm-pass-view\\\",\\\"isHidden\\\":false}]\",\"workbench.views.service.panel.da233af5-e572-4385-aecb-8127b8ead33b.state.hidden\":\"[{\\\"id\\\":\\\"terminal\\\",\\\"isHidden\\\":false}]\",\"workbench.chat.hideMovedChatWelcomeView\":\"true\",\"workbench.panel.repl.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.repl.view\\\",\\\"isHidden\\\":false}]\",\"encryption.migratedToGnomeLibsecret\":\"true\"}}"}